; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca [3 x i1], align 1
  %b = alloca [4 x i1], align 1
  %c = alloca [4 x i1], align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %2 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  store i1 true, i1* %2, align 1
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %3 = load i32, i32* %i, align 4
  %4 = add i32 %3, 1
  %5 = icmp sle i32 %4, 3
  br i1 %5, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %i, align 4
  %8 = load i32, i32* %i, align 4
  %9 = sub i32 %8, 1
  %10 = mul i32 1, %9
  %11 = add i32 0, %10
  %12 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %11
  %13 = load i32, i32* %i, align 4
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 1
  %16 = mul i32 1, %15
  %17 = add i32 0, %16
  %18 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %17
  %19 = load i1, i1* %18, align 1
  %20 = xor i1 %19, true
  store i1 %20, i1* %12, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %21 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %22 = load i1, i1* %21, align 1
  %23 = xor i1 %22, true
  br i1 %23, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %24 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 1
  %25 = load i1, i1* %24, align 1
  br i1 %25, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %26 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 2
  %27 = load i1, i1* %26, align 1
  %28 = xor i1 %27, true
  br i1 %28, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %29 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  store i1 false, i1* %29, align 1
  store i32 11, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %30 = load i32, i32* %i, align 4
  %31 = add i32 %30, 1
  %32 = icmp sle i32 %31, 14
  br i1 %32, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %33 = load i32, i32* %i, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %i, align 4
  %35 = load i32, i32* %i, align 4
  %36 = sub i32 %35, 10
  %37 = sub i32 %36, 1
  %38 = mul i32 1, %37
  %39 = add i32 0, %38
  %40 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %39
  %41 = load i32, i32* %i, align 4
  %42 = sub i32 %41, 10
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1
  %45 = mul i32 1, %44
  %46 = add i32 0, %45
  %47 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %46
  %48 = load i1, i1* %47, align 1
  %49 = xor i1 %48, true
  store i1 %49, i1* %40, align 1
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %50 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %51 = load i1, i1* %50, align 1
  br i1 %51, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %52 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %53 = load i1, i1* %52, align 1
  %54 = xor i1 %53, true
  br i1 %54, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %55 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %56 = load i1, i1* %55, align 1
  br i1 %56, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %57 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %58 = load i1, i1* %57, align 1
  %59 = xor i1 %58, true
  br i1 %59, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %ifcont26, %ifcont21
  %60 = load i32, i32* %i, align 4
  %61 = add i32 %60, 1
  %62 = icmp sle i32 %61, 3
  br i1 %62, label %loop.body23, label %loop.end27

loop.body23:                                      ; preds = %loop.head22
  %63 = load i32, i32* %i, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %i, align 4
  %65 = load i32, i32* %i, align 4
  %66 = sub i32 %65, 1
  %67 = mul i32 1, %66
  %68 = add i32 0, %67
  %69 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %68
  %70 = load i32, i32* %i, align 4
  %71 = sub i32 %70, 1
  %72 = mul i32 1, %71
  %73 = add i32 0, %72
  %74 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %73
  %75 = load i1, i1* %74, align 1
  %76 = icmp eq i1 %75, false
  %77 = alloca i1, align 1
  br i1 %76, label %then24, label %else25

then24:                                           ; preds = %loop.body23
  store i1 %75, i1* %77, align 1
  br label %ifcont26

else25:                                           ; preds = %loop.body23
  store i1 false, i1* %77, align 1
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %78 = load i1, i1* %77, align 1
  store i1 %78, i1* %69, align 1
  br label %loop.head22

loop.end27:                                       ; preds = %loop.head22
  %79 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %80 = load i1, i1* %79, align 1
  br i1 %80, label %then28, label %else29

then28:                                           ; preds = %loop.end27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %loop.end27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %81 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %82 = load i1, i1* %81, align 1
  br i1 %82, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %83 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %84 = load i1, i1* %83, align 1
  br i1 %84, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %85 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %86 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %87 = load i1, i1* %86, align 1
  %88 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %89 = load i1, i1* %88, align 1
  %90 = icmp eq i1 %87, false
  %91 = alloca i1, align 1
  br i1 %90, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  store i1 %89, i1* %91, align 1
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  store i1 %87, i1* %91, align 1
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  %92 = load i1, i1* %91, align 1
  %93 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %94 = load i1, i1* %93, align 1
  %95 = icmp eq i1 %92, false
  %96 = alloca i1, align 1
  br i1 %95, label %then40, label %else41

then40:                                           ; preds = %ifcont39
  store i1 %94, i1* %96, align 1
  br label %ifcont42

else41:                                           ; preds = %ifcont39
  store i1 %92, i1* %96, align 1
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  %97 = load i1, i1* %96, align 1
  %98 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %99 = load i1, i1* %98, align 1
  %100 = icmp eq i1 %97, false
  %101 = alloca i1, align 1
  br i1 %100, label %then43, label %else44

then43:                                           ; preds = %ifcont42
  store i1 %99, i1* %101, align 1
  br label %ifcont45

else44:                                           ; preds = %ifcont42
  store i1 %97, i1* %101, align 1
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %102 = load i1, i1* %101, align 1
  store i1 %102, i1* %85, align 1
  %103 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %104 = load i1, i1* %103, align 1
  %105 = xor i1 %104, true
  br i1 %105, label %then46, label %else47

then46:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %ifcont45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %106 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %107 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %108 = load i1, i1* %107, align 1
  store i1 %108, i1* %106, align 1
  %109 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %110 = load i1, i1* %109, align 1
  %111 = xor i1 %110, true
  br i1 %111, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  store i32 0, i32* %i, align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.end59, %ifcont51
  %112 = load i32, i32* %i, align 4
  %113 = add i32 %112, 1
  %114 = icmp sle i32 %113, 2
  br i1 %114, label %loop.body53, label %loop.end60

loop.body53:                                      ; preds = %loop.head52
  %115 = load i32, i32* %i, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head54

loop.head54:                                      ; preds = %ifcont58, %loop.body53
  %117 = load i32, i32* %j, align 4
  %118 = add i32 %117, 1
  %119 = icmp sle i32 %118, 2
  br i1 %119, label %loop.body55, label %loop.end59

loop.body55:                                      ; preds = %loop.head54
  %120 = load i32, i32* %j, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %j, align 4
  %122 = load i32, i32* %i, align 4
  %123 = load i32, i32* %j, align 4
  %124 = add i32 %122, %123
  %125 = load i32, i32* %i, align 4
  %126 = load i32, i32* %j, align 4
  %127 = add i32 %125, %126
  %128 = udiv i32 %127, 2
  %129 = mul i32 2, %128
  %130 = sub i32 %124, %129
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %then56, label %else57

then56:                                           ; preds = %loop.body55
  %132 = load i32, i32* %i, align 4
  %133 = load i32, i32* %j, align 4
  %134 = sub i32 %132, 1
  %135 = mul i32 1, %134
  %136 = add i32 0, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 2, %137
  %139 = add i32 %136, %138
  %140 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %139
  store i1 true, i1* %140, align 1
  br label %ifcont58

else57:                                           ; preds = %loop.body55
  %141 = load i32, i32* %i, align 4
  %142 = load i32, i32* %j, align 4
  %143 = sub i32 %141, 1
  %144 = mul i32 1, %143
  %145 = add i32 0, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 2, %146
  %148 = add i32 %145, %147
  %149 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %148
  store i1 false, i1* %149, align 1
  br label %ifcont58

ifcont58:                                         ; preds = %else57, %then56
  br label %loop.head54

loop.end59:                                       ; preds = %loop.head54
  br label %loop.head52

loop.end60:                                       ; preds = %loop.head52
  %150 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 0
  %151 = load i1, i1* %150, align 1
  br i1 %151, label %then61, label %else62

then61:                                           ; preds = %loop.end60
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %loop.end60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %152 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 2
  %153 = load i1, i1* %152, align 1
  %154 = xor i1 %153, true
  br i1 %154, label %then64, label %else65

then64:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont66

else65:                                           ; preds = %ifcont63
  br label %ifcont66

ifcont66:                                         ; preds = %else65, %then64
  %155 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 1
  %156 = load i1, i1* %155, align 1
  %157 = xor i1 %156, true
  br i1 %157, label %then67, label %else68

then67:                                           ; preds = %ifcont66
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont69

else68:                                           ; preds = %ifcont66
  br label %ifcont69

ifcont69:                                         ; preds = %else68, %then67
  %158 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 3
  %159 = load i1, i1* %158, align 1
  br i1 %159, label %then70, label %else71

then70:                                           ; preds = %ifcont69
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont72

else71:                                           ; preds = %ifcont69
  br label %ifcont72

ifcont72:                                         ; preds = %else71, %then70
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
