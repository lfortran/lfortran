; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@0 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.7 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.7, i32 0, i32 0), i64 10 }>
@string_const_data.9 = private constant [2 x i8] c"\0A\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.23 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@string_const_data.25 = private constant [2 x i8] c"\0A\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.25, i32 0, i32 0), i64 1 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.31 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.31, i32 0, i32 0), i64 10 }>
@string_const_data.33 = private constant [2 x i8] c"\0A\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.33, i32 0, i32 0), i64 1 }>
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.39 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.39, i32 0, i32 0), i64 10 }>
@string_const_data.41 = private constant [2 x i8] c"\0A\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.41, i32 0, i32 0), i64 1 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.43 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.43, i32 0, i32 0), i64 10 }>
@string_const_data.45 = private constant [2 x i8] c"\0A\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.45, i32 0, i32 0), i64 1 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.47 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.48 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.47, i32 0, i32 0), i64 10 }>
@string_const_data.49 = private constant [2 x i8] c"\0A\00"
@string_const.50 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.49, i32 0, i32 0), i64 1 }>
@12 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.51 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.51, i32 0, i32 0), i64 10 }>
@string_const_data.53 = private constant [2 x i8] c"\0A\00"
@string_const.54 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.53, i32 0, i32 0), i64 1 }>
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.55 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.56 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.55, i32 0, i32 0), i64 10 }>
@string_const_data.57 = private constant [2 x i8] c"\0A\00"
@string_const.58 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.57, i32 0, i32 0), i64 1 }>
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.59 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.60 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.59, i32 0, i32 0), i64 10 }>
@string_const_data.61 = private constant [2 x i8] c"\0A\00"
@string_const.62 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.61, i32 0, i32 0), i64 1 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x i1], align 1
  %b = alloca [4 x i1], align 1
  %c = alloca [4 x i1], align 1
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %2 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  store i1 true, i1* %2, align 1
  store i32 1, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %3 = load i32, i32* %i1, align 4
  %4 = add i32 %3, 1
  %5 = icmp sle i32 %4, 3
  br i1 %5, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %6 = load i32, i32* %i1, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %i1, align 4
  %8 = load i32, i32* %i1, align 4
  %9 = sub i32 %8, 1
  %10 = mul i32 1, %9
  %11 = add i32 0, %10
  %12 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %11
  %13 = load i32, i32* %i1, align 4
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 1
  %16 = mul i32 1, %15
  %17 = add i32 0, %16
  %18 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %17
  %19 = load i1, i1* %18, align 1
  %20 = xor i1 %19, true
  store i1 %20, i1* %12, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %21 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %22 = load i1, i1* %21, align 1
  %23 = xor i1 %22, true
  br i1 %23, label %then, label %else

then:                                             ; preds = %loop.end
  %24 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %25 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8* %24, i8* %25)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %26 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 1
  %27 = load i1, i1* %26, align 1
  br i1 %27, label %then3, label %else4

then3:                                            ; preds = %ifcont
  %28 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %29 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %28, i8* %29)
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %30 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 2
  %31 = load i1, i1* %30, align 1
  %32 = xor i1 %31, true
  br i1 %32, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  %33 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  %34 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %33, i8* %34)
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %ifcont5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %35 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  store i1 false, i1* %35, align 1
  store i32 11, i32* %i1, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont8
  %36 = load i32, i32* %i1, align 4
  %37 = add i32 %36, 1
  %38 = icmp sle i32 %37, 14
  br i1 %38, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %39 = load i32, i32* %i1, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %i1, align 4
  %41 = load i32, i32* %i1, align 4
  %42 = sub i32 %41, 10
  %43 = sub i32 %42, 1
  %44 = mul i32 1, %43
  %45 = add i32 0, %44
  %46 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %45
  %47 = load i32, i32* %i1, align 4
  %48 = sub i32 %47, 10
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1
  %51 = mul i32 1, %50
  %52 = add i32 0, %51
  %53 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %52
  %54 = load i1, i1* %53, align 1
  %55 = xor i1 %54, true
  store i1 %55, i1* %46, align 1
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %56 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %57 = load i1, i1* %56, align 1
  br i1 %57, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  %58 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %59 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %58, i8* %59)
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %60 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %61 = load i1, i1* %60, align 1
  %62 = xor i1 %61, true
  br i1 %62, label %then15, label %else16

then15:                                           ; preds = %ifcont14
  %63 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %64 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %63, i8* %64)
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %ifcont14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  %65 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %66 = load i1, i1* %65, align 1
  br i1 %66, label %then18, label %else19

then18:                                           ; preds = %ifcont17
  %67 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %68 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %67, i8* %68)
  call void @exit(i32 1)
  br label %ifcont20

else19:                                           ; preds = %ifcont17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  %69 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %70 = load i1, i1* %69, align 1
  %71 = xor i1 %70, true
  br i1 %71, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  %72 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  %73 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %72, i8* %73)
  call void @exit(i32 1)
  br label %ifcont23

else22:                                           ; preds = %ifcont20
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %then21
  store i32 0, i32* %i1, align 4
  br label %loop.head24

loop.head24:                                      ; preds = %loop.body25, %ifcont23
  %74 = load i32, i32* %i1, align 4
  %75 = add i32 %74, 1
  %76 = icmp sle i32 %75, 3
  br i1 %76, label %loop.body25, label %loop.end26

loop.body25:                                      ; preds = %loop.head24
  %77 = load i32, i32* %i1, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %i1, align 4
  %79 = load i32, i32* %i1, align 4
  %80 = sub i32 %79, 1
  %81 = mul i32 1, %80
  %82 = add i32 0, %81
  %83 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %82
  %84 = load i32, i32* %i1, align 4
  %85 = sub i32 %84, 1
  %86 = mul i32 1, %85
  %87 = add i32 0, %86
  %88 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %87
  %89 = load i1, i1* %88, align 1
  %90 = icmp eq i1 %89, false
  %91 = select i1 %90, i1 %89, i1 false
  store i1 %91, i1* %83, align 1
  br label %loop.head24

loop.end26:                                       ; preds = %loop.head24
  %92 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %93 = load i1, i1* %92, align 1
  br i1 %93, label %then27, label %else28

then27:                                           ; preds = %loop.end26
  %94 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %95 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %94, i8* %95)
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %loop.end26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %96 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %97 = load i1, i1* %96, align 1
  br i1 %97, label %then30, label %else31

then30:                                           ; preds = %ifcont29
  %98 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  %99 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %98, i8* %99)
  call void @exit(i32 1)
  br label %ifcont32

else31:                                           ; preds = %ifcont29
  br label %ifcont32

ifcont32:                                         ; preds = %else31, %then30
  %100 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %101 = load i1, i1* %100, align 1
  br i1 %101, label %then33, label %else34

then33:                                           ; preds = %ifcont32
  %102 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %103 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %102, i8* %103)
  call void @exit(i32 1)
  br label %ifcont35

else34:                                           ; preds = %ifcont32
  br label %ifcont35

ifcont35:                                         ; preds = %else34, %then33
  %104 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %105 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %106 = load i1, i1* %105, align 1
  %107 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %108 = load i1, i1* %107, align 1
  %109 = icmp eq i1 %106, false
  %110 = select i1 %109, i1 %108, i1 %106
  %111 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %112 = load i1, i1* %111, align 1
  %113 = icmp eq i1 %110, false
  %114 = select i1 %113, i1 %112, i1 %110
  %115 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %116 = load i1, i1* %115, align 1
  %117 = icmp eq i1 %114, false
  %118 = select i1 %117, i1 %116, i1 %114
  store i1 %118, i1* %104, align 1
  %119 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %120 = load i1, i1* %119, align 1
  %121 = xor i1 %120, true
  br i1 %121, label %then36, label %else37

then36:                                           ; preds = %ifcont35
  %122 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  %123 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %122, i8* %123)
  call void @exit(i32 1)
  br label %ifcont38

else37:                                           ; preds = %ifcont35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  %124 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %125 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %126 = load i1, i1* %125, align 1
  store i1 %126, i1* %124, align 1
  %127 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %128 = load i1, i1* %127, align 1
  %129 = xor i1 %128, true
  br i1 %129, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  %130 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  %131 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %130, i8* %131)
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  store i32 0, i32* %i1, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.end49, %ifcont41
  %132 = load i32, i32* %i1, align 4
  %133 = add i32 %132, 1
  %134 = icmp sle i32 %133, 2
  br i1 %134, label %loop.body43, label %loop.end50

loop.body43:                                      ; preds = %loop.head42
  %135 = load i32, i32* %i1, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %i1, align 4
  store i32 0, i32* %j2, align 4
  br label %loop.head44

loop.head44:                                      ; preds = %ifcont48, %loop.body43
  %137 = load i32, i32* %j2, align 4
  %138 = add i32 %137, 1
  %139 = icmp sle i32 %138, 2
  br i1 %139, label %loop.body45, label %loop.end49

loop.body45:                                      ; preds = %loop.head44
  %140 = load i32, i32* %j2, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %j2, align 4
  %142 = load i32, i32* %i1, align 4
  %143 = load i32, i32* %j2, align 4
  %144 = add i32 %142, %143
  %145 = load i32, i32* %i1, align 4
  %146 = load i32, i32* %j2, align 4
  %147 = add i32 %145, %146
  %148 = sdiv i32 %147, 2
  %149 = mul i32 2, %148
  %150 = sub i32 %144, %149
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %then46, label %else47

then46:                                           ; preds = %loop.body45
  %152 = load i32, i32* %i1, align 4
  %153 = load i32, i32* %j2, align 4
  %154 = sub i32 %152, 1
  %155 = mul i32 1, %154
  %156 = add i32 0, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 2, %157
  %159 = add i32 %156, %158
  %160 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %159
  store i1 true, i1* %160, align 1
  br label %ifcont48

else47:                                           ; preds = %loop.body45
  %161 = load i32, i32* %i1, align 4
  %162 = load i32, i32* %j2, align 4
  %163 = sub i32 %161, 1
  %164 = mul i32 1, %163
  %165 = add i32 0, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 2, %166
  %168 = add i32 %165, %167
  %169 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %168
  store i1 false, i1* %169, align 1
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  br label %loop.head44

loop.end49:                                       ; preds = %loop.head44
  br label %loop.head42

loop.end50:                                       ; preds = %loop.head42
  %170 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 0
  %171 = load i1, i1* %170, align 1
  br i1 %171, label %then51, label %else52

then51:                                           ; preds = %loop.end50
  %172 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.48, i32 0, i32 0), align 8
  %173 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.50, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @12, i32 0, i32 0), i8* %172, i8* %173)
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %loop.end50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  %174 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 2
  %175 = load i1, i1* %174, align 1
  %176 = xor i1 %175, true
  br i1 %176, label %then54, label %else55

then54:                                           ; preds = %ifcont53
  %177 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.52, i32 0, i32 0), align 8
  %178 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.54, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %177, i8* %178)
  call void @exit(i32 1)
  br label %ifcont56

else55:                                           ; preds = %ifcont53
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  %179 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 1
  %180 = load i1, i1* %179, align 1
  %181 = xor i1 %180, true
  br i1 %181, label %then57, label %else58

then57:                                           ; preds = %ifcont56
  %182 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.56, i32 0, i32 0), align 8
  %183 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.58, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %182, i8* %183)
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %ifcont56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  %184 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 3
  %185 = load i1, i1* %184, align 1
  br i1 %185, label %then60, label %else61

then60:                                           ; preds = %ifcont59
  %186 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.60, i32 0, i32 0), align 8
  %187 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.62, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %186, i8* %187)
  call void @exit(i32 1)
  br label %ifcont62

else61:                                           ; preds = %ifcont59
  br label %ifcont62

ifcont62:                                         ; preds = %else61, %then60
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont62
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
