; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@21 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@31 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@32 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@33 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@36 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@38 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@39 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@42 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@45 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@47 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x i1], align 1
  %b = alloca [4 x i1], align 1
  %c = alloca [4 x i1], align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %2 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  store i1 true, i1* %2, align 1
  store i32 2, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %3 = load i32, i32* %i, align 4
  %4 = icmp sle i32 %3, 3
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i, align 4
  %6 = sub i32 %5, 1
  %7 = mul i32 1, %6
  %8 = add i32 0, %7
  %9 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %8
  %10 = load i32, i32* %i, align 4
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1
  %13 = mul i32 1, %12
  %14 = add i32 0, %13
  %15 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %14
  %16 = load i1, i1* %15, align 1
  %17 = xor i1 %16, true
  store i1 %17, i1* %9, align 1
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %20 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %21 = load i1, i1* %20, align 1
  %22 = xor i1 %21, true
  br i1 %22, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %23 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 1
  %24 = load i1, i1* %23, align 1
  br i1 %24, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %25 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 2
  %26 = load i1, i1* %25, align 1
  %27 = xor i1 %26, true
  br i1 %27, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %28 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  store i1 false, i1* %28, align 1
  store i32 12, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %29 = load i32, i32* %i, align 4
  %30 = icmp sle i32 %29, 14
  br i1 %30, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %31 = load i32, i32* %i, align 4
  %32 = sub i32 %31, 10
  %33 = sub i32 %32, 1
  %34 = mul i32 1, %33
  %35 = add i32 0, %34
  %36 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %35
  %37 = load i32, i32* %i, align 4
  %38 = sub i32 %37, 10
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1
  %41 = mul i32 1, %40
  %42 = add i32 0, %41
  %43 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %42
  %44 = load i1, i1* %43, align 1
  %45 = xor i1 %44, true
  store i1 %45, i1* %36, align 1
  %46 = load i32, i32* %i, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %i, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %48 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %49 = load i1, i1* %48, align 1
  br i1 %49, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %50 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %51 = load i1, i1* %50, align 1
  %52 = xor i1 %51, true
  br i1 %52, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %53 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %54 = load i1, i1* %53, align 1
  br i1 %54, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %55 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %56 = load i1, i1* %55, align 1
  %57 = xor i1 %56, true
  br i1 %57, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 1, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %58 = load i32, i32* %i, align 4
  %59 = icmp sle i32 %58, 3
  br i1 %59, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %60 = load i32, i32* %i, align 4
  %61 = sub i32 %60, 1
  %62 = mul i32 1, %61
  %63 = add i32 0, %62
  %64 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %63
  %65 = load i32, i32* %i, align 4
  %66 = sub i32 %65, 1
  %67 = mul i32 1, %66
  %68 = add i32 0, %67
  %69 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %68
  %70 = load i1, i1* %69, align 1
  %71 = icmp eq i1 %70, false
  %72 = select i1 %71, i1 %70, i1 false
  store i1 %72, i1* %64, align 1
  %73 = load i32, i32* %i, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %i, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %75 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %76 = load i1, i1* %75, align 1
  br i1 %76, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %77 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %78 = load i1, i1* %77, align 1
  br i1 %78, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %79 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %80 = load i1, i1* %79, align 1
  br i1 %80, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %81 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %82 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %83 = load i1, i1* %82, align 1
  %84 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %85 = load i1, i1* %84, align 1
  %86 = icmp eq i1 %83, false
  %87 = select i1 %86, i1 %85, i1 %83
  %88 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %89 = load i1, i1* %88, align 1
  %90 = icmp eq i1 %87, false
  %91 = select i1 %90, i1 %89, i1 %87
  %92 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %93 = load i1, i1* %92, align 1
  %94 = icmp eq i1 %91, false
  %95 = select i1 %94, i1 %93, i1 %91
  store i1 %95, i1* %81, align 1
  %96 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %97 = load i1, i1* %96, align 1
  %98 = xor i1 %97, true
  br i1 %98, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %99 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %100 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %101 = load i1, i1* %100, align 1
  store i1 %101, i1* %99, align 1
  %102 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %103 = load i1, i1* %102, align 1
  %104 = xor i1 %103, true
  br i1 %104, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 1, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end47, %ifcont39
  %105 = load i32, i32* %i, align 4
  %106 = icmp sle i32 %105, 2
  br i1 %106, label %loop.body41, label %loop.end48

loop.body41:                                      ; preds = %loop.head40
  store i32 1, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %ifcont46, %loop.body41
  %107 = load i32, i32* %j, align 4
  %108 = icmp sle i32 %107, 2
  br i1 %108, label %loop.body43, label %loop.end47

loop.body43:                                      ; preds = %loop.head42
  %109 = load i32, i32* %i, align 4
  %110 = load i32, i32* %j, align 4
  %111 = add i32 %109, %110
  %112 = load i32, i32* %i, align 4
  %113 = load i32, i32* %j, align 4
  %114 = add i32 %112, %113
  %115 = sdiv i32 %114, 2
  %116 = mul i32 2, %115
  %117 = sub i32 %111, %116
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %then44, label %else45

then44:                                           ; preds = %loop.body43
  %119 = load i32, i32* %i, align 4
  %120 = load i32, i32* %j, align 4
  %121 = sub i32 %119, 1
  %122 = mul i32 1, %121
  %123 = add i32 0, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 2, %124
  %126 = add i32 %123, %125
  %127 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %126
  store i1 true, i1* %127, align 1
  br label %ifcont46

else45:                                           ; preds = %loop.body43
  %128 = load i32, i32* %i, align 4
  %129 = load i32, i32* %j, align 4
  %130 = sub i32 %128, 1
  %131 = mul i32 1, %130
  %132 = add i32 0, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 2, %133
  %135 = add i32 %132, %134
  %136 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %135
  store i1 false, i1* %136, align 1
  br label %ifcont46

ifcont46:                                         ; preds = %else45, %then44
  %137 = load i32, i32* %j, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %j, align 4
  br label %loop.head42

loop.end47:                                       ; preds = %loop.head42
  %139 = load i32, i32* %i, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %i, align 4
  br label %loop.head40

loop.end48:                                       ; preds = %loop.head40
  %141 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 0
  %142 = load i1, i1* %141, align 1
  br i1 %142, label %then49, label %else50

then49:                                           ; preds = %loop.end48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.end48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %143 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 2
  %144 = load i1, i1* %143, align 1
  %145 = xor i1 %144, true
  br i1 %145, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %146 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 1
  %147 = load i1, i1* %146, align 1
  %148 = xor i1 %147, true
  br i1 %148, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %149 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 3
  %150 = load i1, i1* %149, align 1
  br i1 %150, label %then58, label %else59

then58:                                           ; preds = %ifcont57
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont60

else59:                                           ; preds = %ifcont57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
