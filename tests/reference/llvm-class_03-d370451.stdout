; ModuleID = 'LFortran'
source_filename = "LFortran"

%person = type { i8*, i8*, i32, i8* }
%employee = type { %person, i32, i8* }

@0 = private unnamed_addr constant [5 x i8] c"Jack\00", align 1
@1 = private unnamed_addr constant [6 x i8] c"Smith\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"Jill\00", align 1
@4 = private unnamed_addr constant [6 x i8] c"Smith\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@6 = private unnamed_addr constant [6 x i8] c"sales\00", align 1
@7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@9 = private unnamed_addr constant [17 x i8] c"%s%s%s%s%d%s%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c" \00", align 1
@11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@12 = private unnamed_addr constant [25 x i8] c"%s%s%s%s%d%s%s%s%s%s%d%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %jack = alloca %person, align 8
  %2 = getelementptr %person, %person* %jack, i32 0, i32 2
  %3 = getelementptr %person, %person* %jack, i32 0, i32 0
  %4 = getelementptr %person, %person* %jack, i32 0, i32 1
  %5 = getelementptr %person, %person* %jack, i32 0, i32 3
  %jill = alloca %employee, align 8
  %6 = getelementptr %employee, %employee* %jill, i32 0, i32 2
  %7 = getelementptr %employee, %employee* %jill, i32 0, i32 1
  %8 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %9 = getelementptr %person, %person* %8, i32 0, i32 2
  %10 = getelementptr %person, %person* %8, i32 0, i32 0
  %11 = getelementptr %person, %person* %8, i32 0, i32 1
  %12 = getelementptr %person, %person* %8, i32 0, i32 3
  %13 = getelementptr %person, %person* %jack, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %13, align 8
  %14 = getelementptr %person, %person* %jack, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8** %14, align 8
  %15 = getelementptr %person, %person* %jack, i32 0, i32 2
  store i32 1984, i32* %15, align 4
  %16 = getelementptr %person, %person* %jack, i32 0, i32 3
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i8** %16, align 8
  %17 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %18 = getelementptr %person, %person* %17, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8** %18, align 8
  %19 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %20 = getelementptr %person, %person* %19, i32 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i32 0, i32 0), i8** %20, align 8
  %21 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %22 = getelementptr %person, %person* %21, i32 0, i32 2
  store i32 1984, i32* %22, align 4
  %23 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %24 = getelementptr %person, %person* %23, i32 0, i32 3
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %24, align 8
  %25 = getelementptr %employee, %employee* %jill, i32 0, i32 1
  store i32 2003, i32* %25, align 4
  %26 = getelementptr %employee, %employee* %jill, i32 0, i32 2
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i32 0, i32 0), i8** %26, align 8
  %27 = getelementptr %person, %person* %jack, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr %person, %person* %jack, i32 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr %person, %person* %jack, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr %person, %person* %jack, i32 0, i32 3
  %34 = load i8*, i8** %33, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @9, i32 0, i32 0), i8* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i32 %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0))
  %35 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %36 = getelementptr %person, %person* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %39 = getelementptr %person, %person* %38, i32 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %42 = getelementptr %person, %person* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr %employee, %employee* %jill, i32 0, i32 0
  %45 = getelementptr %person, %person* %44, i32 0, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr %employee, %employee* %jill, i32 0, i32 2
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr %employee, %employee* %jill, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @12, i32 0, i32 0), i8* %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i8* %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i8* %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0))
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_printf(i8*, ...)
