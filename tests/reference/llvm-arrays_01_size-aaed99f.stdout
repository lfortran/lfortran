; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 3, i32* %10, align 4
  %11 = alloca i32, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr %array, %array* %a, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca i32, i32 %13, align 4
  store i32* %14, i32** %12, align 8
  %b = alloca %array, align 8
  %15 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %b, i32 0, i32 2
  %17 = alloca i32, align 4
  store i32 1, i32* %17, align 4
  %18 = load i32, i32* %17, align 4
  %19 = alloca %dimension_descriptor, i32 %18, align 8
  %20 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %20, align 4
  store %dimension_descriptor* %19, %dimension_descriptor** %16, align 8
  %21 = load %dimension_descriptor*, %dimension_descriptor** %16, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 2
  store i32 1, i32* %23, align 4
  store i32 1, i32* %24, align 4
  store i32 4, i32* %25, align 4
  %26 = alloca i32, align 4
  store i32 4, i32* %26, align 4
  %27 = getelementptr %array, %array* %b, i32 0, i32 0
  %28 = load i32, i32* %26, align 4
  %29 = alloca i32, i32 %28, align 4
  store i32* %29, i32** %27, align 8
  %i = alloca i32, align 4
  %size_a = alloca i32, align 4
  %size_b = alloca i32, align 4
  %30 = getelementptr %array, %array* %a, i32 0, i32 2
  %31 = load %dimension_descriptor*, %dimension_descriptor** %30, align 8
  %32 = getelementptr %array, %array* %a, i32 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = alloca i32, align 4
  store i32 1, i32* %34, align 4
  %35 = alloca i32, align 4
  store i32 0, i32* %35, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, %33
  br i1 %37, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %38 = load i32, i32* %35, align 4
  %39 = load i32, i32* %34, align 4
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 %38
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = mul i32 %39, %42
  store i32 %43, i32* %34, align 4
  %44 = add i32 %38, 1
  store i32 %44, i32* %35, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %45 = load i32, i32* %34, align 4
  store i32 %45, i32* %size_a, align 4
  %46 = getelementptr %array, %array* %b, i32 0, i32 2
  %47 = load %dimension_descriptor*, %dimension_descriptor** %46, align 8
  %48 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %47, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %size_b, align 4
  %51 = load i32, i32* %size_a, align 4
  %52 = icmp ne i32 %51, 3
  br i1 %52, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %53 = load i32, i32* %size_b, align 4
  %54 = icmp ne i32 %53, 4
  br i1 %54, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  store i32 0, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %ifcont3
  %55 = load i32, i32* %i, align 4
  %56 = add i32 %55, 1
  %57 = load i32, i32* %size_a, align 4
  %58 = icmp sle i32 %56, %57
  br i1 %58, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %59 = load i32, i32* %i, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %i, align 4
  %61 = load i32, i32* %i, align 4
  %62 = getelementptr %array, %array* %a, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %61, %66
  %68 = mul i32 1, %67
  %69 = add i32 0, %68
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = mul i32 1, %71
  %73 = getelementptr %array, %array* %a, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds i32, i32* %74, i32 %69
  %76 = load i32, i32* %i, align 4
  %77 = add i32 %76, 10
  store i32 %77, i32* %75, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %78 = getelementptr %array, %array* %a, i32 0, i32 2
  %79 = load %dimension_descriptor*, %dimension_descriptor** %78, align 8
  %80 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %79, i32 0
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 1, %82
  %84 = mul i32 1, %83
  %85 = add i32 0, %84
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = mul i32 1, %87
  %89 = getelementptr %array, %array* %a, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds i32, i32* %90, i32 %85
  %92 = load i32, i32* %91, align 4
  %93 = icmp ne i32 %92, 11
  br i1 %93, label %then7, label %else8

then7:                                            ; preds = %loop.end6
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont9

else8:                                            ; preds = %loop.end6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %94 = getelementptr %array, %array* %a, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 2, %98
  %100 = mul i32 1, %99
  %101 = add i32 0, %100
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = mul i32 1, %103
  %105 = getelementptr %array, %array* %a, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds i32, i32* %106, i32 %101
  %108 = load i32, i32* %107, align 4
  %109 = icmp ne i32 %108, 12
  br i1 %109, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %ifcont9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %110 = getelementptr %array, %array* %a, i32 0, i32 2
  %111 = load %dimension_descriptor*, %dimension_descriptor** %110, align 8
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %111, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 3, %114
  %116 = mul i32 1, %115
  %117 = add i32 0, %116
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = mul i32 1, %119
  %121 = getelementptr %array, %array* %a, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = getelementptr inbounds i32, i32* %122, i32 %117
  %124 = load i32, i32* %123, align 4
  %125 = icmp ne i32 %124, 13
  br i1 %125, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  store i32 10, i32* %i, align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.body17, %ifcont15
  %126 = load i32, i32* %i, align 4
  %127 = add i32 %126, 1
  %128 = load i32, i32* %size_b, align 4
  %129 = add i32 10, %128
  %130 = icmp sle i32 %127, %129
  br i1 %130, label %loop.body17, label %loop.end18

loop.body17:                                      ; preds = %loop.head16
  %131 = load i32, i32* %i, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %i, align 4
  %133 = load i32, i32* %i, align 4
  %134 = sub i32 %133, 10
  %135 = getelementptr %array, %array* %b, i32 0, i32 2
  %136 = load %dimension_descriptor*, %dimension_descriptor** %135, align 8
  %137 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %136, i32 0
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %137, i32 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = sub i32 %134, %139
  %141 = mul i32 1, %140
  %142 = add i32 0, %141
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %137, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = mul i32 1, %144
  %146 = getelementptr %array, %array* %b, i32 0, i32 0
  %147 = load i32*, i32** %146, align 8
  %148 = getelementptr inbounds i32, i32* %147, i32 %142
  %149 = load i32, i32* %i, align 4
  store i32 %149, i32* %148, align 4
  br label %loop.head16

loop.end18:                                       ; preds = %loop.head16
  %150 = getelementptr %array, %array* %b, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 1, %154
  %156 = mul i32 1, %155
  %157 = add i32 0, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 1, %159
  %161 = getelementptr %array, %array* %b, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = getelementptr inbounds i32, i32* %162, i32 %157
  %164 = load i32, i32* %163, align 4
  %165 = icmp ne i32 %164, 11
  br i1 %165, label %then19, label %else20

then19:                                           ; preds = %loop.end18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %loop.end18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  %166 = getelementptr %array, %array* %b, i32 0, i32 2
  %167 = load %dimension_descriptor*, %dimension_descriptor** %166, align 8
  %168 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %167, i32 0
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = sub i32 2, %170
  %172 = mul i32 1, %171
  %173 = add i32 0, %172
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 2
  %175 = load i32, i32* %174, align 4
  %176 = mul i32 1, %175
  %177 = getelementptr %array, %array* %b, i32 0, i32 0
  %178 = load i32*, i32** %177, align 8
  %179 = getelementptr inbounds i32, i32* %178, i32 %173
  %180 = load i32, i32* %179, align 4
  %181 = icmp ne i32 %180, 12
  br i1 %181, label %then22, label %else23

then22:                                           ; preds = %ifcont21
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  %182 = getelementptr %array, %array* %b, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %183, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 3, %186
  %188 = mul i32 1, %187
  %189 = add i32 0, %188
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = mul i32 1, %191
  %193 = getelementptr %array, %array* %b, i32 0, i32 0
  %194 = load i32*, i32** %193, align 8
  %195 = getelementptr inbounds i32, i32* %194, i32 %189
  %196 = load i32, i32* %195, align 4
  %197 = icmp ne i32 %196, 13
  br i1 %197, label %then25, label %else26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %ifcont24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %198 = getelementptr %array, %array* %b, i32 0, i32 2
  %199 = load %dimension_descriptor*, %dimension_descriptor** %198, align 8
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 4, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr %array, %array* %b, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = getelementptr inbounds i32, i32* %210, i32 %205
  %212 = load i32, i32* %211, align 4
  %213 = icmp ne i32 %212, 14
  br i1 %213, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  store i32 0, i32* %i, align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.body32, %ifcont30
  %214 = load i32, i32* %i, align 4
  %215 = add i32 %214, 1
  %216 = load i32, i32* %size_a, align 4
  %217 = icmp sle i32 %215, %216
  br i1 %217, label %loop.body32, label %loop.end33

loop.body32:                                      ; preds = %loop.head31
  %218 = load i32, i32* %i, align 4
  %219 = add i32 %218, 1
  store i32 %219, i32* %i, align 4
  %220 = load i32, i32* %i, align 4
  %221 = getelementptr %array, %array* %b, i32 0, i32 2
  %222 = load %dimension_descriptor*, %dimension_descriptor** %221, align 8
  %223 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %222, i32 0
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = sub i32 %220, %225
  %227 = mul i32 1, %226
  %228 = add i32 0, %227
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %223, i32 0, i32 2
  %230 = load i32, i32* %229, align 4
  %231 = mul i32 1, %230
  %232 = getelementptr %array, %array* %b, i32 0, i32 0
  %233 = load i32*, i32** %232, align 8
  %234 = getelementptr inbounds i32, i32* %233, i32 %228
  %235 = load i32, i32* %i, align 4
  %236 = getelementptr %array, %array* %a, i32 0, i32 2
  %237 = load %dimension_descriptor*, %dimension_descriptor** %236, align 8
  %238 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %237, i32 0
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = sub i32 %235, %240
  %242 = mul i32 1, %241
  %243 = add i32 0, %242
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %238, i32 0, i32 2
  %245 = load i32, i32* %244, align 4
  %246 = mul i32 1, %245
  %247 = getelementptr %array, %array* %a, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = getelementptr inbounds i32, i32* %248, i32 %243
  %250 = load i32, i32* %249, align 4
  %251 = sub i32 %250, 10
  store i32 %251, i32* %234, align 4
  br label %loop.head31

loop.end33:                                       ; preds = %loop.head31
  %252 = getelementptr %array, %array* %b, i32 0, i32 2
  %253 = load %dimension_descriptor*, %dimension_descriptor** %252, align 8
  %254 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %253, i32 0
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %254, i32 0, i32 1
  %256 = load i32, i32* %255, align 4
  %257 = sub i32 1, %256
  %258 = mul i32 1, %257
  %259 = add i32 0, %258
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %254, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = mul i32 1, %261
  %263 = getelementptr %array, %array* %b, i32 0, i32 0
  %264 = load i32*, i32** %263, align 8
  %265 = getelementptr inbounds i32, i32* %264, i32 %259
  %266 = load i32, i32* %265, align 4
  %267 = icmp ne i32 %266, 1
  br i1 %267, label %then34, label %else35

then34:                                           ; preds = %loop.end33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.end33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %268 = getelementptr %array, %array* %b, i32 0, i32 2
  %269 = load %dimension_descriptor*, %dimension_descriptor** %268, align 8
  %270 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %269, i32 0
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = sub i32 2, %272
  %274 = mul i32 1, %273
  %275 = add i32 0, %274
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 2
  %277 = load i32, i32* %276, align 4
  %278 = mul i32 1, %277
  %279 = getelementptr %array, %array* %b, i32 0, i32 0
  %280 = load i32*, i32** %279, align 8
  %281 = getelementptr inbounds i32, i32* %280, i32 %275
  %282 = load i32, i32* %281, align 4
  %283 = icmp ne i32 %282, 2
  br i1 %283, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  %284 = getelementptr %array, %array* %b, i32 0, i32 2
  %285 = load %dimension_descriptor*, %dimension_descriptor** %284, align 8
  %286 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %285, i32 0
  %287 = getelementptr %dimension_descriptor, %dimension_descriptor* %286, i32 0, i32 1
  %288 = load i32, i32* %287, align 4
  %289 = sub i32 3, %288
  %290 = mul i32 1, %289
  %291 = add i32 0, %290
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %286, i32 0, i32 2
  %293 = load i32, i32* %292, align 4
  %294 = mul i32 1, %293
  %295 = getelementptr %array, %array* %b, i32 0, i32 0
  %296 = load i32*, i32** %295, align 8
  %297 = getelementptr inbounds i32, i32* %296, i32 %291
  %298 = load i32, i32* %297, align 4
  %299 = icmp ne i32 %298, 3
  br i1 %299, label %then40, label %else41

then40:                                           ; preds = %ifcont39
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont42

else41:                                           ; preds = %ifcont39
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  %300 = getelementptr %array, %array* %b, i32 0, i32 2
  %301 = load %dimension_descriptor*, %dimension_descriptor** %300, align 8
  %302 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %301, i32 0
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = sub i32 4, %304
  %306 = mul i32 1, %305
  %307 = add i32 0, %306
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 2
  %309 = load i32, i32* %308, align 4
  %310 = mul i32 1, %309
  %311 = getelementptr %array, %array* %b, i32 0, i32 0
  %312 = load i32*, i32** %311, align 8
  %313 = getelementptr inbounds i32, i32* %312, i32 %307
  %314 = getelementptr %array, %array* %b, i32 0, i32 2
  %315 = load %dimension_descriptor*, %dimension_descriptor** %314, align 8
  %316 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %315, i32 0
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = sub i32 1, %318
  %320 = mul i32 1, %319
  %321 = add i32 0, %320
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 2
  %323 = load i32, i32* %322, align 4
  %324 = mul i32 1, %323
  %325 = getelementptr %array, %array* %b, i32 0, i32 0
  %326 = load i32*, i32** %325, align 8
  %327 = getelementptr inbounds i32, i32* %326, i32 %321
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr %array, %array* %b, i32 0, i32 2
  %330 = load %dimension_descriptor*, %dimension_descriptor** %329, align 8
  %331 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %330, i32 0
  %332 = getelementptr %dimension_descriptor, %dimension_descriptor* %331, i32 0, i32 1
  %333 = load i32, i32* %332, align 4
  %334 = sub i32 2, %333
  %335 = mul i32 1, %334
  %336 = add i32 0, %335
  %337 = getelementptr %dimension_descriptor, %dimension_descriptor* %331, i32 0, i32 2
  %338 = load i32, i32* %337, align 4
  %339 = mul i32 1, %338
  %340 = getelementptr %array, %array* %b, i32 0, i32 0
  %341 = load i32*, i32** %340, align 8
  %342 = getelementptr inbounds i32, i32* %341, i32 %336
  %343 = load i32, i32* %342, align 4
  %344 = add i32 %328, %343
  %345 = getelementptr %array, %array* %b, i32 0, i32 2
  %346 = load %dimension_descriptor*, %dimension_descriptor** %345, align 8
  %347 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %346, i32 0
  %348 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = sub i32 3, %349
  %351 = mul i32 1, %350
  %352 = add i32 0, %351
  %353 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 2
  %354 = load i32, i32* %353, align 4
  %355 = mul i32 1, %354
  %356 = getelementptr %array, %array* %b, i32 0, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = getelementptr inbounds i32, i32* %357, i32 %352
  %359 = load i32, i32* %358, align 4
  %360 = add i32 %344, %359
  %361 = getelementptr %array, %array* %a, i32 0, i32 2
  %362 = load %dimension_descriptor*, %dimension_descriptor** %361, align 8
  %363 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %362, i32 0
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = sub i32 1, %365
  %367 = mul i32 1, %366
  %368 = add i32 0, %367
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 2
  %370 = load i32, i32* %369, align 4
  %371 = mul i32 1, %370
  %372 = getelementptr %array, %array* %a, i32 0, i32 0
  %373 = load i32*, i32** %372, align 8
  %374 = getelementptr inbounds i32, i32* %373, i32 %368
  %375 = load i32, i32* %374, align 4
  %376 = add i32 %360, %375
  store i32 %376, i32* %313, align 4
  %377 = getelementptr %array, %array* %b, i32 0, i32 2
  %378 = load %dimension_descriptor*, %dimension_descriptor** %377, align 8
  %379 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %378, i32 0
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = sub i32 4, %381
  %383 = mul i32 1, %382
  %384 = add i32 0, %383
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 2
  %386 = load i32, i32* %385, align 4
  %387 = mul i32 1, %386
  %388 = getelementptr %array, %array* %b, i32 0, i32 0
  %389 = load i32*, i32** %388, align 8
  %390 = getelementptr inbounds i32, i32* %389, i32 %384
  %391 = load i32, i32* %390, align 4
  %392 = icmp ne i32 %391, 17
  br i1 %392, label %then43, label %else44

then43:                                           ; preds = %ifcont42
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont45

else44:                                           ; preds = %ifcont42
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %393 = getelementptr %array, %array* %b, i32 0, i32 2
  %394 = load %dimension_descriptor*, %dimension_descriptor** %393, align 8
  %395 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %394, i32 0
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 1
  %397 = load i32, i32* %396, align 4
  %398 = sub i32 4, %397
  %399 = mul i32 1, %398
  %400 = add i32 0, %399
  %401 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 2
  %402 = load i32, i32* %401, align 4
  %403 = mul i32 1, %402
  %404 = getelementptr %array, %array* %b, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = getelementptr inbounds i32, i32* %405, i32 %400
  %407 = getelementptr %array, %array* %a, i32 0, i32 2
  %408 = load %dimension_descriptor*, %dimension_descriptor** %407, align 8
  %409 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %408, i32 0
  %410 = getelementptr %dimension_descriptor, %dimension_descriptor* %409, i32 0, i32 1
  %411 = load i32, i32* %410, align 4
  %412 = sub i32 1, %411
  %413 = mul i32 1, %412
  %414 = add i32 0, %413
  %415 = getelementptr %dimension_descriptor, %dimension_descriptor* %409, i32 0, i32 2
  %416 = load i32, i32* %415, align 4
  %417 = mul i32 1, %416
  %418 = getelementptr %array, %array* %a, i32 0, i32 0
  %419 = load i32*, i32** %418, align 8
  %420 = getelementptr inbounds i32, i32* %419, i32 %414
  %421 = load i32, i32* %420, align 4
  store i32 %421, i32* %406, align 4
  %422 = getelementptr %array, %array* %b, i32 0, i32 2
  %423 = load %dimension_descriptor*, %dimension_descriptor** %422, align 8
  %424 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %423, i32 0
  %425 = getelementptr %dimension_descriptor, %dimension_descriptor* %424, i32 0, i32 1
  %426 = load i32, i32* %425, align 4
  %427 = sub i32 4, %426
  %428 = mul i32 1, %427
  %429 = add i32 0, %428
  %430 = getelementptr %dimension_descriptor, %dimension_descriptor* %424, i32 0, i32 2
  %431 = load i32, i32* %430, align 4
  %432 = mul i32 1, %431
  %433 = getelementptr %array, %array* %b, i32 0, i32 0
  %434 = load i32*, i32** %433, align 8
  %435 = getelementptr inbounds i32, i32* %434, i32 %429
  %436 = load i32, i32* %435, align 4
  %437 = icmp ne i32 %436, 11
  br i1 %437, label %then46, label %else47

then46:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %ifcont45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
