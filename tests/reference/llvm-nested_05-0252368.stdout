; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_x = global i32 0
@__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y = global float 0.000000e+00
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.5 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define void @__module_nested_05_a_b() {
.entry:
  %x = alloca i32, align 4
  %y = alloca float, align 4
  store i32 6, i32* %x, align 4
  store float 5.500000e+00, float* %y, align 4
  %0 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i32 0, i32 0, i32* %x)
  %1 = call i64 @_lfortran_str_len(i8* %0)
  %2 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %2 to %string_descriptor*
  %3 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %1, i64* %4, align 4
  %5 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  %7 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i32 0, i32 0, float* %y)
  %8 = call i64 @_lfortran_str_len(i8* %7)
  %9 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc1 = bitcast i8* %9 to %string_descriptor*
  %10 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %7, i8** %10, align 8
  %11 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %8, i64* %11, align 4
  %12 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0))
  %14 = load i32, i32* %x, align 4
  store i32 %14, i32* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_x, align 4
  %15 = load float, float* %y, align 4
  store float %15, float* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y, align 4
  call void @b.__module_nested_05_a_c()
  %16 = load i32, i32* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_x, align 4
  store i32 %16, i32* %x, align 4
  %17 = load float, float* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y, align 4
  store float %17, float* %y, align 4
  %18 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.4, i32 0, i32 0), i32 0, i32 0, i32* %x)
  %19 = call i64 @_lfortran_str_len(i8* %18)
  %20 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %20 to %string_descriptor*
  %21 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %18, i8** %21, align 8
  %22 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %19, i64* %22, align 4
  %23 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0))
  %25 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.5, i32 0, i32 0), i32 0, i32 0, float* %y)
  %26 = call i64 @_lfortran_str_len(i8* %25)
  %27 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc3 = bitcast i8* %27 to %string_descriptor*
  %28 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  store i8* %25, i8** %28, align 8
  %29 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  store i64 %26, i64* %29, align 4
  %30 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  br label %return

return:                                           ; preds = %.entry
  ret void
}

define void @b.__module_nested_05_a_c() {
.entry:
  %0 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, i32* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_x)
  %1 = call i64 @_lfortran_str_len(i8* %0)
  %2 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %2 to %string_descriptor*
  %3 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %1, i64* %4, align 4
  %5 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  %7 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i32 0, i32 0, float* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y)
  %8 = call i64 @_lfortran_str_len(i8* %7)
  %9 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc1 = bitcast i8* %9 to %string_descriptor*
  %10 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %7, i8** %10, align 8
  %11 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %8, i64* %11, align 4
  %12 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  store i32 4, i32* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_x, align 4
  store float 3.500000e+00, float* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y, align 4
  br label %return

return:                                           ; preds = %.entry
  ret void
}

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, ...)

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  call void @__module_nested_05_a_b()
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lpython_free_argv()
