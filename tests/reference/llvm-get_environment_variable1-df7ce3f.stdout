; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [4 x i8] c"PWD\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"PATH\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define void @_lcompilers_get_environment_variable_(i8** %name, i8** %value) {
.entry:
  %0 = load i8*, i8** %name, align 8
  %1 = load i8*, i8* %0, align 8
  %2 = call i8* @_lfortran_get_env_variable(i8* %1)
  store i8* %2, i8** %value, align 8
  br label %return

return:                                           ; preds = %.entry
  ret void
}

declare i8* @_lfortran_get_env_variable(i8*)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value1 = alloca i8*, align 8
  %call_arg_value = alloca i8*, align 8
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %path = alloca i8*, align 8
  %2 = call i8* @_lfortran_malloc(i32 256)
  call void @_lfortran_string_init(i32 256, i8* %2)
  store i8* %2, i8** %path, align 8
  %3 = load i8*, i8** %path, align 8
  %pwd = alloca i8*, align 8
  %4 = call i8* @_lfortran_malloc(i32 256)
  call void @_lfortran_string_init(i32 256, i8* %4)
  store i8* %4, i8** %pwd, align 8
  %5 = load i8*, i8** %pwd, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i8** %call_arg_value, align 8
  %6 = load i8*, i8** %call_arg_value, align 8
  %7 = call i8* @_lfortran_get_env_variable(i8* %6)
  store i8* %7, i8** %pwd, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8** %call_arg_value1, align 8
  %8 = load i8*, i8** %call_arg_value1, align 8
  %9 = call i8* @_lfortran_get_env_variable(i8* %8)
  store i8* %9, i8** %path, align 8
  %10 = load i8*, i8** %pwd, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  %11 = load i8*, i8** %path, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lfortran_malloc(i32)

declare void @_lfortran_string_init(i32, i8*)

declare void @_lfortran_printf(i8*, ...)

declare void @_lpython_free_argv()
