; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1

define i32 @__module_module_13_f1() {
.entry:
  %f1 = alloca i32, align 4
  %0 = call i32 @__module_module_13_f2()
  store i32 %0, i32* %f1, align 4
  br label %return

return:                                           ; preds = %.entry
  %1 = load i32, i32* %f1, align 4
  ret i32 %1
}

define i32 @__module_module_13_f2() {
.entry:
  %f2 = alloca i32, align 4
  store i32 5, i32* %f2, align 4
  br label %return

return:                                           ; preds = %.entry
  %0 = load i32, i32* %f2, align 4
  ret i32 %0
}

define i32 @main() {
.entry:
  %f = alloca i32, align 4
  %0 = call i32 @__module_module_13_f1()
  store i32 %0, i32* %f, align 4
  %1 = load i32, i32* %f, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
