; ModuleID = 'LFortran'
source_filename = "LFortran"

%model_t = type { %array* }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@7 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define void @decode_idx(i32* %idx, i32* %__1idx, i32* %__2idx) {
.entry:
  %0 = load i32, i32* %__1idx, align 4
  %1 = load i32, i32* %__2idx, align 4
  %2 = sub i32 4, %0
  %3 = mul i32 1, %2
  %4 = add i32 0, %3
  %5 = mul i32 1, %1
  %6 = getelementptr inbounds i32, i32* %idx, i32 %4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %9 = load i32, i32* %__1idx, align 4
  %10 = load i32, i32* %__2idx, align 4
  %11 = sub i32 5, %9
  %12 = mul i32 1, %11
  %13 = add i32 0, %12
  %14 = mul i32 1, %10
  %15 = getelementptr inbounds i32, i32* %idx, i32 %13
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 5
  br i1 %17, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  br label %return

return:                                           ; preds = %ifcont3
  ret void
}

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value4 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %__1_t = alloca i32, align 4
  %__1_v = alloca i32, align 4
  %m = alloca %model_t, align 8
  %2 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  store %array* null, %array** %2, align 8
  %arr_desc = alloca %array, align 8
  %3 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %7 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 1, i32* %7, align 4
  %8 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %8, align 8
  store %array* %arr_desc, %array** %2, align 8
  %9 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %10 = load %array*, %array** %9, align 8
  %11 = getelementptr %array, %array* %10, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array, %array* %10, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  %14 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %13, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 2
  store i32 1, i32* %15, align 4
  store i32 1, i32* %16, align 4
  store i32 10, i32* %17, align 4
  %18 = getelementptr %array, %array* %10, i32 0, i32 0
  %19 = alloca i32, align 4
  store i32 40, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = call i8* (i32, ...) @_lfortran_malloc(i32 %20)
  %22 = bitcast i8* %21 to i32*
  store i32* %22, i32** %18, align 8
  %23 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %24 = load %array*, %array** %23, align 8
  %25 = getelementptr %array, %array* %24, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %__1_v, align 4
  %30 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %31 = load %array*, %array** %30, align 8
  %32 = getelementptr %array, %array* %31, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %36, 1
  store i32 %37, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %38 = load i32, i32* %__1_t, align 4
  %39 = add i32 %38, 1
  %40 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %41 = load %array*, %array** %40, align 8
  %42 = getelementptr %array, %array* %41, i32 0, i32 2
  %43 = load %dimension_descriptor*, %dimension_descriptor** %42, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, %46
  %50 = sub i32 %49, 1
  %51 = icmp sle i32 %39, %50
  br i1 %51, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %52 = load i32, i32* %__1_t, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %__1_t, align 4
  %54 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %55 = load i32, i32* %__1_t, align 4
  %56 = load %array*, %array** %54, align 8
  %57 = getelementptr %array, %array* %56, i32 0, i32 2
  %58 = load %dimension_descriptor*, %dimension_descriptor** %57, align 8
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %58, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %55, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 %64, %62
  %66 = add i32 0, %65
  %67 = getelementptr %array, %array* %56, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %66, %68
  %70 = getelementptr %array, %array* %56, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i32 %69
  store i32 0, i32* %72, align 4
  %73 = load i32, i32* %__1_v, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %__1_v, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %75 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %76 = load %array*, %array** %75, align 8
  %77 = getelementptr %array, %array* %76, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  %79 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 5, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 %84, %82
  %86 = add i32 0, %85
  %87 = getelementptr %array, %array* %76, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %86, %88
  %90 = getelementptr %array, %array* %76, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds i32, i32* %91, i32 %89
  store i32 5, i32* %92, align 4
  %93 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %94 = load %array*, %array** %93, align 8
  %95 = getelementptr %array, %array* %94, i32 0, i32 2
  %96 = load %dimension_descriptor*, %dimension_descriptor** %95, align 8
  %97 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %96, i32 0
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = sub i32 %99, 1
  store i32 %100, i32* %__1_k, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %101 = load i32, i32* %__1_k, align 4
  %102 = add i32 %101, 1
  %103 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %104 = load %array*, %array** %103, align 8
  %105 = getelementptr %array, %array* %104, i32 0, i32 2
  %106 = load %dimension_descriptor*, %dimension_descriptor** %105, align 8
  %107 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %106, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, %109
  %113 = sub i32 %112, 1
  %114 = icmp sle i32 %102, %113
  br i1 %114, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %115 = load i32, i32* %__1_k, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %__1_k, align 4
  %117 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %118 = load i32, i32* %__1_k, align 4
  %119 = load %array*, %array** %117, align 8
  %120 = getelementptr %array, %array* %119, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %118, %124
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = mul i32 %127, %125
  %129 = add i32 0, %128
  %130 = getelementptr %array, %array* %119, i32 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %129, %131
  %133 = getelementptr %array, %array* %119, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds i32, i32* %134, i32 %132
  %136 = load i32, i32* %135, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i32 %136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0))
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  %137 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %138 = load %array*, %array** %137, align 8
  %139 = getelementptr %array, %array* %138, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = getelementptr %array, %array* %138, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds i32, i32* %140, i32 %142
  %144 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %145 = load %array*, %array** %144, align 8
  %146 = getelementptr %array, %array* %145, i32 0, i32 2
  %147 = load %dimension_descriptor*, %dimension_descriptor** %146, align 8
  %148 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %147, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* %call_arg_value, align 4
  %151 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %152 = load %array*, %array** %151, align 8
  %153 = getelementptr %array, %array* %152, i32 0, i32 2
  %154 = load %dimension_descriptor*, %dimension_descriptor** %153, align 8
  %155 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %154, i32 0
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %155, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  store i32 %157, i32* %call_arg_value4, align 4
  call void @decode_idx(i32* %143, i32* %call_arg_value, i32* %call_arg_value4)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)
