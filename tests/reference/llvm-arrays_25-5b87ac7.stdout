; ModuleID = 'LFortran'
source_filename = "LFortran"

%model_t = type { %array* }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define void @decode_integer____0(i32* %idx, i32* %__1idx, i32* %__2idx) {
.entry:
  %0 = load i32, i32* %__1idx, align 4
  %1 = load i32, i32* %__2idx, align 4
  %2 = sub i32 4, %0
  %3 = mul i32 1, %2
  %4 = add i32 0, %3
  %5 = mul i32 1, %1
  %6 = getelementptr inbounds i32, i32* %idx, i32 %4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %9 = load i32, i32* %__1idx, align 4
  %10 = load i32, i32* %__2idx, align 4
  %11 = sub i32 5, %9
  %12 = mul i32 1, %11
  %13 = add i32 0, %12
  %14 = mul i32 1, %10
  %15 = getelementptr inbounds i32, i32* %idx, i32 %13
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 5
  br i1 %17, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  br label %return

return:                                           ; preds = %ifcont3
  ret void
}

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value4 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %__1_t = alloca i32, align 4
  %m = alloca %model_t, align 8
  %2 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  store %array* null, %array** %2, align 8
  %arr_desc = alloca %array, align 8
  %3 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %7 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 1, i32* %7, align 4
  %8 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %8, align 8
  store %array* %arr_desc, %array** %2, align 8
  %9 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %10 = load %array*, %array** %9, align 8
  %11 = getelementptr %array, %array* %10, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr %array, %array* %10, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  %14 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %13, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 2
  store i32 1, i32* %15, align 4
  store i32 1, i32* %16, align 4
  store i32 10, i32* %17, align 4
  %18 = getelementptr %array, %array* %10, i32 0, i32 0
  %19 = alloca i32, align 4
  store i32 40, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = call i8* @_lfortran_malloc(i32 %20)
  %22 = bitcast i8* %21 to i32*
  store i32* %22, i32** %18, align 8
  %23 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %24 = load %array*, %array** %23, align 8
  %25 = getelementptr %array, %array* %24, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %30 = load i32, i32* %__1_t, align 4
  %31 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %32 = load %array*, %array** %31, align 8
  %33 = getelementptr %array, %array* %32, i32 0, i32 2
  %34 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  %35 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %34, i32 0
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, %37
  %41 = sub i32 %40, 1
  %42 = icmp sle i32 %30, %41
  br i1 %42, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %43 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %44 = load i32, i32* %__1_t, align 4
  %45 = load %array*, %array** %43, align 8
  %46 = getelementptr %array, %array* %45, i32 0, i32 2
  %47 = load %dimension_descriptor*, %dimension_descriptor** %46, align 8
  %48 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %47, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 %44, %50
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 %53, %51
  %55 = add i32 0, %54
  %56 = getelementptr %array, %array* %45, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %55, %57
  %59 = getelementptr %array, %array* %45, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds i32, i32* %60, i32 %58
  store i32 0, i32* %61, align 4
  %62 = load i32, i32* %__1_t, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %__1_t, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %64 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %65 = load %array*, %array** %64, align 8
  %66 = getelementptr %array, %array* %65, i32 0, i32 2
  %67 = load %dimension_descriptor*, %dimension_descriptor** %66, align 8
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %67, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = sub i32 5, %70
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = mul i32 %73, %71
  %75 = add i32 0, %74
  %76 = getelementptr %array, %array* %65, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %75, %77
  %79 = getelementptr %array, %array* %65, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds i32, i32* %80, i32 %78
  store i32 5, i32* %81, align 4
  %82 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %83 = load %array*, %array** %82, align 8
  %84 = getelementptr %array, %array* %83, i32 0, i32 2
  %85 = load %dimension_descriptor*, %dimension_descriptor** %84, align 8
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %85, i32 0
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %__1_k, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %89 = load i32, i32* %__1_k, align 4
  %90 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %91 = load %array*, %array** %90, align 8
  %92 = getelementptr %array, %array* %91, i32 0, i32 2
  %93 = load %dimension_descriptor*, %dimension_descriptor** %92, align 8
  %94 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %93, i32 0
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = add i32 %98, %96
  %100 = sub i32 %99, 1
  %101 = icmp sle i32 %89, %100
  br i1 %101, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %102 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %103 = load i32, i32* %__1_k, align 4
  %104 = load %array*, %array** %102, align 8
  %105 = getelementptr %array, %array* %104, i32 0, i32 2
  %106 = load %dimension_descriptor*, %dimension_descriptor** %105, align 8
  %107 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %106, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 %103, %109
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = mul i32 %112, %110
  %114 = add i32 0, %113
  %115 = getelementptr %array, %array* %104, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %114, %116
  %118 = getelementptr %array, %array* %104, i32 0, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = getelementptr inbounds i32, i32* %119, i32 %117
  %121 = load i32, i32* %120, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i32 %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %122 = load i32, i32* %__1_k, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %__1_k, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  %124 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %125 = load %array*, %array** %124, align 8
  %126 = getelementptr %array, %array* %125, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = getelementptr %array, %array* %125, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds i32, i32* %127, i32 %129
  %131 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %132 = load %array*, %array** %131, align 8
  %133 = getelementptr %array, %array* %132, i32 0, i32 2
  %134 = load %dimension_descriptor*, %dimension_descriptor** %133, align 8
  %135 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %134, i32 0
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  store i32 %137, i32* %call_arg_value, align 4
  %138 = getelementptr %model_t, %model_t* %m, i32 0, i32 0
  %139 = load %array*, %array** %138, align 8
  %140 = getelementptr %array, %array* %139, i32 0, i32 2
  %141 = load %dimension_descriptor*, %dimension_descriptor** %140, align 8
  %142 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %141, i32 0
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %call_arg_value4, align 4
  call void @decode_integer____0(i32* %130, i32* %call_arg_value, i32* %call_arg_value4)
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lfortran_malloc(i32)

declare void @_lfortran_printf(i8*, ...)
