; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %0 = load i32, i32* %i, align 4
  %1 = icmp slt i32 %0, 10
  br i1 %1, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %2 = load i32, i32* %i, align 4
  %3 = add i32 %2, 1
  store i32 %3, i32* %i, align 4
  %4 = load i32, i32* %j, align 4
  %5 = load i32, i32* %i, align 4
  %6 = add i32 %4, %5
  store i32 %6, i32* %j, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %7 = load i32, i32* %j, align 4
  %8 = icmp ne i32 %7, 55
  br i1 %8, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %9 = load i32, i32* %i, align 4
  %10 = icmp ne i32 %9, 10
  br i1 %10, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %ifcont8, %ifcont3
  %11 = load i32, i32* %i, align 4
  %12 = icmp slt i32 %11, 10
  br i1 %12, label %loop.body5, label %loop.end9

loop.body5:                                       ; preds = %loop.head4
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %i, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %then6, label %else7

then6:                                            ; preds = %loop.body5
  br label %loop.end9

unreachable_after_exit:                           ; No predecessors!
  br label %ifcont8

else7:                                            ; preds = %loop.body5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %unreachable_after_exit
  %17 = load i32, i32* %j, align 4
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %17, %18
  store i32 %19, i32* %j, align 4
  br label %loop.head4

loop.end9:                                        ; preds = %then6, %loop.head4
  %20 = load i32, i32* %j, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %22 = load i32, i32* %i, align 4
  %23 = icmp ne i32 %22, 2
  br i1 %23, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head16

loop.head16:                                      ; preds = %ifcont20, %then18, %ifcont15
  %24 = load i32, i32* %i, align 4
  %25 = icmp slt i32 %24, 10
  br i1 %25, label %loop.body17, label %loop.end21

loop.body17:                                      ; preds = %loop.head16
  %26 = load i32, i32* %i, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %i, align 4
  %28 = load i32, i32* %i, align 4
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %then18, label %else19

then18:                                           ; preds = %loop.body17
  br label %loop.head16

unreachable_after_cycle:                          ; No predecessors!
  br label %ifcont20

else19:                                           ; preds = %loop.body17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %unreachable_after_cycle
  %30 = load i32, i32* %j, align 4
  %31 = load i32, i32* %i, align 4
  %32 = add i32 %30, %31
  store i32 %32, i32* %j, align 4
  br label %loop.head16

loop.end21:                                       ; preds = %loop.head16
  %33 = load i32, i32* %j, align 4
  %34 = icmp ne i32 %33, 53
  br i1 %34, label %then22, label %else23

then22:                                           ; preds = %loop.end21
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %loop.end21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  %35 = load i32, i32* %i, align 4
  %36 = icmp ne i32 %35, 10
  br i1 %36, label %then25, label %else26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %ifcont24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  ret i32 0
}

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
