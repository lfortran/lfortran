(module
    (type (;0;) (func (param i32) (result)))
    (type (;1;) (func (param i64) (result)))
    (type (;2;) (func (param f32) (result)))
    (type (;3;) (func (param f64) (result)))
    (type (;4;) (func (param i32 i32) (result)))
    (type (;5;) (func (param) (result)))
    (type (;6;) (func (param i32) (result)))
    (type (;7;) (func (param i32) (result i32)))
    (type (;8;) (func (param i32 i32) (result i32 i32)))
    (type (;9;) (func (param i32) (result i32)))
    (type (;10;) (func (param f64) (result f64)))
    (type (;11;) (func (param f32) (result f32)))
    (type (;12;) (func (param) (result)))
    (import "js" "print_i32" (func (;0;) (type 0)))
    (import "js" "print_i64" (func (;1;) (type 1)))
    (import "js" "print_f32" (func (;2;) (type 2)))
    (import "js" "print_f64" (func (;3;) (type 3)))
    (import "js" "print_str" (func (;4;) (type 4)))
    (import "js" "flush_buf" (func (;5;) (type 5)))
    (import "js" "set_exit_code" (func (;6;) (type 6)))
    (import "js" "memory" (memory (;0;) 100 100))
    (func $7 (type 7) (param i32) (result i32)
        (local i32)
        local.get 1
        return
    )
    (func $8 (type 8) (param i32 i32) (result i32 i32)
        (local)
        local.get 0
        local.get 1
        return
    )
    (func $9 (type 9) (param i32) (result i32)
        (local i32)
        i32.const 4
        local.set 1
        local.get 1
        return
    )
    (func $10 (type 10) (param f64) (result f64)
        (local f64)
        local.get 0
        f64.const 0.000000
        f64.ge
        if
            local.get 0
            local.set 1
        else
            local.get 0
            f64.neg
            local.set 1
        end
        local.get 1
        return
    )
    (func $11 (type 11) (param f32) (result f32)
        (local f32)
        local.get 0
        f32.const 0.000000
        f32.ge
        if
            local.get 0
            local.set 1
        else
            local.get 0
            f32.neg
            local.set 1
        end
        local.get 1
        return
    )
    (func $12 (type 12) (param) (result)
        (local i32 f64 f32 f64 f32)
        i32.const 8
        local.set 0
        f32.const 3.000000
        local.set 4
        local.get 4
        f32.const 2.000000
        drop
        local.get 4
        f32.mul
        local.set 2
        local.get 4
        call 2
        local.get 2
        call 2
        call 5
        local.get 2
        f32.const 9.000000
        f32.sub
        call 11
        f32.const 0.000001
        f32.gt
        if
            i32.const 0
            i32.const 10
            call 4
            call 5
            i32.const 1
            call 6
            unreachable
        end
        f64.const 3.000000
        local.set 3
        local.get 3
        f64.const 2.000000
        drop
        local.get 3
        f64.mul
        local.set 1
        local.get 3
        call 3
        local.get 1
        call 3
        call 5
        local.get 1
        f64.const 9.000000
        f64.sub
        call 10
        f64.const 0.000000
        f64.gt
        if
            i32.const 10
            i32.const 10
            call 4
            call 5
            i32.const 1
            call 6
            unreachable
        end
        i32.const 0
        call 6
        return
    )
    (export "char" (func $7))
    (export "move_alloc" (func $8))
    (export "kind" (func $9))
    (export "dabs" (func $10))
    (export "sabs" (func $11))
    (export "_lcompilers_main" (func $12))
    (data (;0;) (i32.const 0) "ERROR STOP")
    (data (;1;) (i32.const 10) "ERROR STOP")
)
