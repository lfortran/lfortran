; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type <{ float, float }>
%string_descriptor = type <{ i8*, i64 }>

@associate_02.t1 = internal global i32 2
@associate_02.t2 = internal global double 2.000000e+00
@associate_02.t3 = internal global %complex_4 zeroinitializer
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.5 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.6 = private unnamed_addr constant [8 x i8] c"{R4,R4}\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.7 = private unnamed_addr constant [8 x i8] c"{R4,R4}\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %p1 = alloca i32*, align 8
  store i32* null, i32** %p1, align 8
  %p2 = alloca double*, align 8
  store double* null, double** %p2, align 8
  %p3 = alloca %complex_4*, align 8
  store %complex_4* null, %complex_4** %p3, align 8
  %2 = alloca %complex_4, align 8
  %3 = getelementptr %complex_4, %complex_4* %2, i32 0, i32 0
  %4 = getelementptr %complex_4, %complex_4* %2, i32 0, i32 1
  store float 2.000000e+00, float* %3, align 4
  store float 3.000000e+00, float* %4, align 4
  %5 = load %complex_4, %complex_4* %2, align 1
  store %complex_4 %5, %complex_4* @associate_02.t3, align 1
  store i32* @associate_02.t1, i32** %p1, align 8
  store double* @associate_02.t2, double** %p2, align 8
  store %complex_4* @associate_02.t3, %complex_4** %p3, align 8
  %6 = load i32*, i32** %p1, align 8
  store i32 1, i32* %6, align 4
  %7 = load double*, double** %p2, align 8
  store double 4.000000e+00, double* %7, align 8
  %8 = alloca i64, align 8
  %9 = load i32*, i32** %p1, align 8
  %10 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i64* %8, i32 0, i32 0, i32* %9)
  %11 = load i64, i64* %8, align 4
  %12 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %12 to %string_descriptor*
  %13 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %10, i8** %13, align 8
  %14 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %11, i64* %14, align 4
  %15 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %18 = load i64, i64* %17, align 4
  %19 = trunc i64 %18 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %16, i32 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  %20 = alloca i64, align 8
  %21 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i64* %20, i32 0, i32 0, i32* @associate_02.t1)
  %22 = load i64, i64* %20, align 4
  %23 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc1 = bitcast i8* %23 to %string_descriptor*
  %24 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %21, i8** %24, align 8
  %25 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %22, i64* %25, align 4
  %26 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %29 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %27, i32 %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  %31 = load double*, double** %p2, align 8
  %32 = load double, double* %31, align 8
  %33 = load i32*, i32** %p1, align 8
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to double
  %36 = fadd double %32, %35
  %37 = fptosi double %36 to i32
  store i32 %37, i32* @associate_02.t1, align 4
  %38 = alloca i64, align 8
  %39 = load i32*, i32** %p1, align 8
  %40 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i64* %38, i32 0, i32 0, i32* %39)
  %41 = load i64, i64* %38, align 4
  %42 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %42 to %string_descriptor*
  %43 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %40, i8** %43, align 8
  %44 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %41, i64* %44, align 4
  %45 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %48 = load i64, i64* %47, align 4
  %49 = trunc i64 %48 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %46, i32 %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1)
  %50 = alloca i64, align 8
  %51 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i64* %50, i32 0, i32 0, i32* @associate_02.t1)
  %52 = load i64, i64* %50, align 4
  %53 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc3 = bitcast i8* %53 to %string_descriptor*
  %54 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  store i8* %51, i8** %54, align 8
  %55 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  store i64 %52, i64* %55, align 4
  %56 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  %59 = load i64, i64* %58, align 4
  %60 = trunc i64 %59 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %57, i32 %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1)
  store i32 8, i32* @associate_02.t1, align 4
  %61 = alloca i64, align 8
  %62 = load i32*, i32** %p1, align 8
  %63 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.4, i32 0, i32 0), i64* %61, i32 0, i32 0, i32* %62)
  %64 = load i64, i64* %61, align 4
  %65 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc4 = bitcast i8* %65 to %string_descriptor*
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  store i8* %63, i8** %66, align 8
  %67 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  store i64 %64, i64* %67, align 4
  %68 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %69, i32 %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 1)
  %73 = alloca i64, align 8
  %74 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.5, i32 0, i32 0), i64* %73, i32 0, i32 0, i32* @associate_02.t1)
  %75 = load i64, i64* %73, align 4
  %76 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc5 = bitcast i8* %76 to %string_descriptor*
  %77 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  store i8* %74, i8** %77, align 8
  %78 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  store i64 %75, i64* %78, align 4
  %79 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  %82 = load i64, i64* %81, align 4
  %83 = trunc i64 %82 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %80, i32 %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 1)
  %84 = load %complex_4*, %complex_4** %p3, align 8
  %85 = alloca %complex_4, align 8
  %86 = getelementptr %complex_4, %complex_4* %85, i32 0, i32 0
  %87 = getelementptr %complex_4, %complex_4* %85, i32 0, i32 1
  store float 2.000000e+00, float* %86, align 4
  store float 0.000000e+00, float* %87, align 4
  %88 = load %complex_4, %complex_4* %85, align 1
  %89 = load %complex_4*, %complex_4** %p3, align 8
  %90 = load %complex_4, %complex_4* %89, align 1
  %91 = alloca %complex_4, align 8
  store %complex_4 %88, %complex_4* %91, align 1
  %92 = alloca %complex_4, align 8
  store %complex_4 %90, %complex_4* %92, align 1
  %93 = alloca %complex_4, align 8
  call void @_lfortran_complex_mul_32(%complex_4* %91, %complex_4* %92, %complex_4* %93)
  %94 = load %complex_4, %complex_4* %93, align 1
  store %complex_4 %94, %complex_4* %84, align 1
  %95 = alloca i64, align 8
  %96 = load %complex_4*, %complex_4** %p3, align 8
  %97 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @serialization_info.6, i32 0, i32 0), i64* %95, i32 0, i32 0, %complex_4* %96)
  %98 = load i64, i64* %95, align 4
  %99 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc6 = bitcast i8* %99 to %string_descriptor*
  %100 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  store i8* %97, i8** %100, align 8
  %101 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  store i64 %98, i64* %101, align 4
  %102 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  %105 = load i64, i64* %104, align 4
  %106 = trunc i64 %105 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %103, i32 %106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i32 1)
  %107 = alloca i64, align 8
  %108 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @serialization_info.7, i32 0, i32 0), i64* %107, i32 0, i32 0, %complex_4* @associate_02.t3)
  %109 = load i64, i64* %107, align 4
  %110 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc7 = bitcast i8* %110 to %string_descriptor*
  %111 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  store i8* %108, i8** %111, align 8
  %112 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  store i64 %109, i64* %112, align 4
  %113 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  %116 = load i64, i64* %115, align 4
  %117 = trunc i64 %116 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %114, i32 %117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lfortran_complex_mul_32(%complex_4*, %complex_4*, %complex_4*)

declare void @_lpython_free_argv()
