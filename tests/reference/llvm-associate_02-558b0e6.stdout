; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type <{ float, float }>
%string_descriptor = type <{ i8*, i64 }>

@associate_02.t1 = internal global i32 2
@associate_02.t2 = internal global double 2.000000e+00
@associate_02.t3 = internal global %complex_4 zeroinitializer
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.5 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.6 = private unnamed_addr constant [8 x i8] c"{R4,R4}\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.7 = private unnamed_addr constant [8 x i8] c"{R4,R4}\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %p1 = alloca i32*, align 8
  store i32* null, i32** %p1, align 8
  %p2 = alloca double*, align 8
  store double* null, double** %p2, align 8
  %p3 = alloca %complex_4*, align 8
  store %complex_4* null, %complex_4** %p3, align 8
  %2 = alloca %complex_4, align 8
  %3 = getelementptr %complex_4, %complex_4* %2, i32 0, i32 0
  %4 = getelementptr %complex_4, %complex_4* %2, i32 0, i32 1
  store float 2.000000e+00, float* %3, align 4
  store float 3.000000e+00, float* %4, align 4
  %5 = load %complex_4, %complex_4* %2, align 1
  store %complex_4 %5, %complex_4* @associate_02.t3, align 1
  store i32* @associate_02.t1, i32** %p1, align 8
  store double* @associate_02.t2, double** %p2, align 8
  store %complex_4* @associate_02.t3, %complex_4** %p3, align 8
  %6 = load i32*, i32** %p1, align 8
  store i32 1, i32* %6, align 4
  %7 = load double*, double** %p2, align 8
  store double 4.000000e+00, double* %7, align 8
  %8 = load i32*, i32** %p1, align 8
  %9 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, i32* %8)
  %10 = call i64 @_lfortran_str_len(i8* %9)
  %11 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %11 to %string_descriptor*
  %12 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %9, i8** %12, align 8
  %13 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %10, i64* %13, align 4
  %14 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %17 = load i64, i64* %16, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %15, i64 %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i64 1)
  %18 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i32 0, i32 0, i32* @associate_02.t1)
  %19 = call i64 @_lfortran_str_len(i8* %18)
  %20 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc1 = bitcast i8* %20 to %string_descriptor*
  %21 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %18, i8** %21, align 8
  %22 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %19, i64* %22, align 4
  %23 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  %26 = load i64, i64* %25, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %24, i64 %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i64 1)
  %27 = load double*, double** %p2, align 8
  %28 = load double, double* %27, align 8
  %29 = load i32*, i32** %p1, align 8
  %30 = load i32, i32* %29, align 4
  %31 = sitofp i32 %30 to double
  %32 = fadd double %28, %31
  %33 = fptosi double %32 to i32
  store i32 %33, i32* @associate_02.t1, align 4
  %34 = load i32*, i32** %p1, align 8
  %35 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i32 0, i32 0, i32* %34)
  %36 = call i64 @_lfortran_str_len(i8* %35)
  %37 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %37 to %string_descriptor*
  %38 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %35, i8** %38, align 8
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %36, i64* %39, align 4
  %40 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %43 = load i64, i64* %42, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %41, i64 %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i64 1)
  %44 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i32 0, i32 0, i32* @associate_02.t1)
  %45 = call i64 @_lfortran_str_len(i8* %44)
  %46 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc3 = bitcast i8* %46 to %string_descriptor*
  %47 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  store i8* %44, i8** %47, align 8
  %48 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  store i64 %45, i64* %48, align 4
  %49 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  %52 = load i64, i64* %51, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %50, i64 %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i64 1)
  store i32 8, i32* @associate_02.t1, align 4
  %53 = load i32*, i32** %p1, align 8
  %54 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.4, i32 0, i32 0), i32 0, i32 0, i32* %53)
  %55 = call i64 @_lfortran_str_len(i8* %54)
  %56 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc4 = bitcast i8* %56 to %string_descriptor*
  %57 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  store i8* %54, i8** %57, align 8
  %58 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  store i64 %55, i64* %58, align 4
  %59 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  %62 = load i64, i64* %61, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %60, i64 %62, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i64 1)
  %63 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.5, i32 0, i32 0), i32 0, i32 0, i32* @associate_02.t1)
  %64 = call i64 @_lfortran_str_len(i8* %63)
  %65 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc5 = bitcast i8* %65 to %string_descriptor*
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  store i8* %63, i8** %66, align 8
  %67 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  store i64 %64, i64* %67, align 4
  %68 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  %71 = load i64, i64* %70, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %69, i64 %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i64 1)
  %72 = load %complex_4*, %complex_4** %p3, align 8
  %73 = alloca %complex_4, align 8
  %74 = getelementptr %complex_4, %complex_4* %73, i32 0, i32 0
  %75 = getelementptr %complex_4, %complex_4* %73, i32 0, i32 1
  store float 2.000000e+00, float* %74, align 4
  store float 0.000000e+00, float* %75, align 4
  %76 = load %complex_4, %complex_4* %73, align 1
  %77 = load %complex_4*, %complex_4** %p3, align 8
  %78 = load %complex_4, %complex_4* %77, align 1
  %79 = alloca %complex_4, align 8
  store %complex_4 %76, %complex_4* %79, align 1
  %80 = alloca %complex_4, align 8
  store %complex_4 %78, %complex_4* %80, align 1
  %81 = alloca %complex_4, align 8
  call void @_lfortran_complex_mul_32(%complex_4* %79, %complex_4* %80, %complex_4* %81)
  %82 = load %complex_4, %complex_4* %81, align 1
  store %complex_4 %82, %complex_4* %72, align 1
  %83 = load %complex_4*, %complex_4** %p3, align 8
  %84 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @serialization_info.6, i32 0, i32 0), i32 0, i32 0, %complex_4* %83)
  %85 = call i64 @_lfortran_str_len(i8* %84)
  %86 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc6 = bitcast i8* %86 to %string_descriptor*
  %87 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  store i8* %84, i8** %87, align 8
  %88 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  store i64 %85, i64* %88, align 4
  %89 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  %92 = load i64, i64* %91, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %90, i64 %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i64 1)
  %93 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @serialization_info.7, i32 0, i32 0), i32 0, i32 0, %complex_4* @associate_02.t3)
  %94 = call i64 @_lfortran_str_len(i8* %93)
  %95 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc7 = bitcast i8* %95 to %string_descriptor*
  %96 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  store i8* %93, i8** %96, align 8
  %97 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  store i64 %94, i64* %97, align 4
  %98 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  %101 = load i64, i64* %100, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %99, i64 %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i64 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i64, i8*, i64)

declare void @_lfortran_complex_mul_32(%complex_4*, %complex_4*, %complex_4*)

declare void @_lpython_free_argv()
