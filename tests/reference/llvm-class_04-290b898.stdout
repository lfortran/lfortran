; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>
%__vtab_foo_c = type { i64 }
%foo_c = type <{ %foo_b, %bar_c }>
%foo_b = type <{ %foo_a, %bar_b }>
%foo_a = type <{ %bar_a }>
%bar_a = type <{ i32 }>
%bar_b = type <{ %bar_a, i32 }>
%bar_c = type <{ %bar_b, i32 }>

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.3 = private constant [2 x i8] c"\0A\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.3, i32 0, i32 0), i64 1 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %2 = alloca %__vtab_foo_c, align 8
  %3 = getelementptr %__vtab_foo_c, %__vtab_foo_c* %2, i32 0, i32 0
  store i64 0, i64* %3, align 4
  %foo = alloca %foo_c, align 8
  %4 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 1
  %5 = getelementptr %bar_c, %bar_c* %4, i32 0, i32 1
  %6 = getelementptr %bar_c, %bar_c* %4, i32 0, i32 0
  %7 = getelementptr %bar_b, %bar_b* %6, i32 0, i32 1
  %8 = getelementptr %bar_b, %bar_b* %6, i32 0, i32 0
  %9 = getelementptr %bar_a, %bar_a* %8, i32 0, i32 0
  %10 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 0
  %11 = getelementptr %foo_b, %foo_b* %10, i32 0, i32 1
  %12 = getelementptr %bar_b, %bar_b* %11, i32 0, i32 1
  %13 = getelementptr %bar_b, %bar_b* %11, i32 0, i32 0
  %14 = getelementptr %bar_a, %bar_a* %13, i32 0, i32 0
  %15 = getelementptr %foo_b, %foo_b* %10, i32 0, i32 0
  %16 = getelementptr %foo_a, %foo_a* %15, i32 0, i32 0
  %17 = getelementptr %bar_a, %bar_a* %16, i32 0, i32 0
  %18 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 0
  %19 = getelementptr %foo_b, %foo_b* %18, i32 0, i32 0
  %20 = getelementptr %foo_a, %foo_a* %19, i32 0, i32 0
  %21 = getelementptr %bar_a, %bar_a* %20, i32 0, i32 0
  store i32 -20, i32* %21, align 4
  %22 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 0
  %23 = getelementptr %foo_b, %foo_b* %22, i32 0, i32 1
  %24 = getelementptr %bar_b, %bar_b* %23, i32 0, i32 1
  store i32 9, i32* %24, align 4
  %25 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 1
  %26 = getelementptr %bar_c, %bar_c* %25, i32 0, i32 1
  store i32 11, i32* %26, align 4
  %27 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 0
  %28 = getelementptr %foo_b, %foo_b* %27, i32 0, i32 0
  %29 = getelementptr %foo_a, %foo_a* %28, i32 0, i32 0
  %30 = getelementptr %bar_a, %bar_a* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = alloca i32, align 4
  store i32 %31, i32* %32, align 4
  %33 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, i32* %32)
  %34 = call i64 @_lfortran_str_len(i8* %33)
  %35 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %35 to %string_descriptor*
  %36 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %33, i8** %36, align 8
  %37 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %34, i64* %37, align 4
  %38 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %41 = load i64, i64* %40, align 4
  %42 = trunc i64 %41 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %39, i32 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  %43 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 0
  %44 = getelementptr %foo_b, %foo_b* %43, i32 0, i32 1
  %45 = getelementptr %bar_b, %bar_b* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = alloca i32, align 4
  store i32 %46, i32* %47, align 4
  %48 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i32 0, i32 0, i32* %47)
  %49 = call i64 @_lfortran_str_len(i8* %48)
  %50 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc1 = bitcast i8* %50 to %string_descriptor*
  %51 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %48, i8** %51, align 8
  %52 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %49, i64* %52, align 4
  %53 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  %56 = load i64, i64* %55, align 4
  %57 = trunc i64 %56 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %54, i32 %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  %58 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 1
  %59 = getelementptr %bar_c, %bar_c* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = alloca i32, align 4
  store i32 %60, i32* %61, align 4
  %62 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i32 0, i32 0, i32* %61)
  %63 = call i64 @_lfortran_str_len(i8* %62)
  %64 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %64 to %string_descriptor*
  %65 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %62, i8** %65, align 8
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %63, i64* %66, align 4
  %67 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %70 = load i64, i64* %69, align 4
  %71 = trunc i64 %70 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %68, i32 %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1)
  %72 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 0
  %73 = getelementptr %foo_b, %foo_b* %72, i32 0, i32 0
  %74 = getelementptr %foo_a, %foo_a* %73, i32 0, i32 0
  %75 = getelementptr %bar_a, %bar_a* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 0
  %78 = getelementptr %foo_b, %foo_b* %77, i32 0, i32 1
  %79 = getelementptr %bar_b, %bar_b* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %76, %80
  %82 = getelementptr %foo_c, %foo_c* %foo, i32 0, i32 1
  %83 = getelementptr %bar_c, %bar_c* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %81, %84
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %then, label %else

then:                                             ; preds = %.entry
  %87 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %88 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %87, i8* %88)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
