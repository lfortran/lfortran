; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [31 x i8] c"                              \00", align 1
@1 = private unnamed_addr constant [11 x i8] c"          \00", align 1
@2 = private unnamed_addr constant [15 x i8] c"This is a test\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [18 x i8] c"test is not found\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [25 x i8] c"test is found at index: \00", align 1
@11 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1

define i32 @__module_lfortran_intrinsic_string_index(i8** %string_, i8** %substring_) {
.entry:
  %found = alloca i1, align 1
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %pos = alloca i32, align 4
  store i1 true, i1* %found, align 1
  store i32 0, i32* %idx, align 4
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %ifcont11, %.entry
  %0 = load i32, i32* %i, align 4
  %1 = load i8*, i8** %string_, align 8
  %2 = alloca i8*, align 8
  store i8* %1, i8** %2, align 8
  %3 = call i32 @_lfortran_str_len(i8** %2)
  %4 = icmp slt i32 %0, %3
  %5 = load i1, i1* %found, align 1
  %6 = icmp eq i1 %4, false
  %7 = alloca i1, align 1
  br i1 %6, label %then, label %else

then:                                             ; preds = %loop.head
  store i1 %4, i1* %7, align 1
  br label %ifcont

else:                                             ; preds = %loop.head
  store i1 %5, i1* %7, align 1
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %8 = load i1, i1* %7, align 1
  br i1 %8, label %loop.body, label %loop.end12

loop.body:                                        ; preds = %ifcont
  store i32 0, i32* %k, align 4
  store i32 1, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %ifcont8, %loop.body
  %9 = load i32, i32* %j, align 4
  %10 = load i8*, i8** %substring_, align 8
  %11 = alloca i8*, align 8
  store i8* %10, i8** %11, align 8
  %12 = call i32 @_lfortran_str_len(i8** %11)
  %13 = icmp slt i32 %9, %12
  %14 = load i1, i1* %found, align 1
  %15 = icmp eq i1 %13, false
  %16 = alloca i1, align 1
  br i1 %15, label %then2, label %else3

then2:                                            ; preds = %loop.head1
  store i1 %13, i1* %16, align 1
  br label %ifcont4

else3:                                            ; preds = %loop.head1
  store i1 %14, i1* %16, align 1
  br label %ifcont4

ifcont4:                                          ; preds = %else3, %then2
  %17 = load i1, i1* %16, align 1
  br i1 %17, label %loop.body5, label %loop.end

loop.body5:                                       ; preds = %ifcont4
  %18 = load i32, i32* %i, align 4
  %19 = load i32, i32* %k, align 4
  %20 = add i32 %18, %19
  store i32 %20, i32* %pos, align 4
  %21 = load i32, i32* %pos, align 4
  %22 = load i8*, i8** %string_, align 8
  %23 = call i8* @_lfortran_str_item(i8* %22, i32 %21)
  %24 = load i32, i32* %j, align 4
  %25 = load i8*, i8** %substring_, align 8
  %26 = call i8* @_lfortran_str_item(i8* %25, i32 %24)
  %27 = load i8, i8* %23, align 1
  %28 = load i8, i8* %26, align 1
  %29 = icmp ne i8 %27, %28
  br i1 %29, label %then6, label %else7

then6:                                            ; preds = %loop.body5
  store i1 false, i1* %found, align 1
  br label %ifcont8

else7:                                            ; preds = %loop.body5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %30 = load i32, i32* %k, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %k, align 4
  %32 = load i32, i32* %j, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %j, align 4
  br label %loop.head1

loop.end:                                         ; preds = %ifcont4
  %34 = load i1, i1* %found, align 1
  br i1 %34, label %then9, label %else10

then9:                                            ; preds = %loop.end
  %35 = load i32, i32* %i, align 4
  store i32 %35, i32* %idx, align 4
  store i1 false, i1* %found, align 1
  br label %ifcont11

else10:                                           ; preds = %loop.end
  store i1 true, i1* %found, align 1
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  %36 = load i32, i32* %i, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %i, align 4
  br label %loop.head

loop.end12:                                       ; preds = %ifcont
  br label %return

return:                                           ; preds = %loop.end12
  %38 = load i32, i32* %idx, align 4
  ret i32 %38
}

declare i32 @_lfortran_str_len(i8**)

declare i8* @_lfortran_str_item(i8*, i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %mystring = alloca i8*, align 8
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @0, i32 0, i32 0), i8** %mystring, align 8
  %teststring = alloca i8*, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1, i32 0, i32 0), i8** %teststring, align 8
  call void @_lfortran_strcpy(i8** %mystring, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @2, i32 0, i32 0), i8 0)
  call void @_lfortran_strcpy(i8** %teststring, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8 0)
  %2 = call i32 @__module_lfortran_intrinsic_string_index(i8** %mystring, i8** %teststring)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  br label %ifcont

else:                                             ; preds = %.entry
  %4 = call i32 @__module_lfortran_intrinsic_string_index(i8** %mystring, i8** %teststring)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_strcpy(i8**, i8*, i8)

declare void @_lfortran_printf(i8*, ...)
