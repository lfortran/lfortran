; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data = private constant [27 x i8] c"Line 1 - Condition is true\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([27 x i8], [27 x i8]* @string_const_data, i32 0, i32 0), i64 26 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.1 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.1, i32 0, i32 0), i64 10 }>
@string_const_data.3 = private constant [2 x i8] c"\0A\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.3, i32 0, i32 0), i64 1 }>
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.5 = private constant [28 x i8] c"Line 1 - Condition is false\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([28 x i8], [28 x i8]* @string_const_data.5, i32 0, i32 0), i64 27 }>
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.7 = private constant [27 x i8] c"Line 2 - Condition is true\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([27 x i8], [27 x i8]* @string_const_data.7, i32 0, i32 0), i64 26 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.9 = private constant [28 x i8] c"Line 2 - Condition is false\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([28 x i8], [28 x i8]* @string_const_data.9, i32 0, i32 0), i64 27 }>
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.15 = private constant [29 x i8] c"Line xor - Condition is true\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([29 x i8], [29 x i8]* @string_const_data.15, i32 0, i32 0), i64 28 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.17 = private constant [30 x i8] c"Line xor - Condition is false\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([30 x i8], [30 x i8]* @string_const_data.17, i32 0, i32 0), i64 29 }>
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.23 = private constant [27 x i8] c"Line 3 - Condition is true\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([27 x i8], [27 x i8]* @string_const_data.23, i32 0, i32 0), i64 26 }>
@16 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.25 = private constant [28 x i8] c"Line 3 - Condition is false\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([28 x i8], [28 x i8]* @string_const_data.25, i32 0, i32 0), i64 27 }>
@18 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.31 = private constant [27 x i8] c"Line 4 - Condition is true\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([27 x i8], [27 x i8]* @string_const_data.31, i32 0, i32 0), i64 26 }>
@21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.33 = private constant [28 x i8] c"Line 4 - Condition is false\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([28 x i8], [28 x i8]* @string_const_data.33, i32 0, i32 0), i64 27 }>
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@24 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.39 = private constant [27 x i8] c"Line 5 - Condition is true\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([27 x i8], [27 x i8]* @string_const_data.39, i32 0, i32 0), i64 26 }>
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.41 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.41, i32 0, i32 0), i64 10 }>
@string_const_data.43 = private constant [2 x i8] c"\0A\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.43, i32 0, i32 0), i64 1 }>
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.45 = private constant [28 x i8] c"Line 5 - Condition is false\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([28 x i8], [28 x i8]* @string_const_data.45, i32 0, i32 0), i64 27 }>
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.47 = private constant [27 x i8] c"Line 6 - Condition is true\00"
@string_const.48 = private global %string_descriptor <{ i8* getelementptr inbounds ([27 x i8], [27 x i8]* @string_const_data.47, i32 0, i32 0), i64 26 }>
@31 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@32 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.49 = private constant [28 x i8] c"Line 6 - Condition is false\00"
@string_const.50 = private global %string_descriptor <{ i8* getelementptr inbounds ([28 x i8], [28 x i8]* @string_const_data.49, i32 0, i32 0), i64 27 }>
@33 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.51 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.51, i32 0, i32 0), i64 10 }>
@string_const_data.53 = private constant [2 x i8] c"\0A\00"
@string_const.54 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.53, i32 0, i32 0), i64 1 }>
@34 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.55 = private constant [27 x i8] c"Line 7 - Condition is true\00"
@string_const.56 = private global %string_descriptor <{ i8* getelementptr inbounds ([27 x i8], [27 x i8]* @string_const_data.55, i32 0, i32 0), i64 26 }>
@36 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.57 = private constant [28 x i8] c"Line 7 - Condition is false\00"
@string_const.58 = private global %string_descriptor <{ i8* getelementptr inbounds ([28 x i8], [28 x i8]* @string_const_data.57, i32 0, i32 0), i64 27 }>
@38 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.59 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.60 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.59, i32 0, i32 0), i64 10 }>
@string_const_data.61 = private constant [2 x i8] c"\0A\00"
@string_const.62 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.61, i32 0, i32 0), i64 1 }>
@39 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.63 = private constant [31 x i8] c"Line 8 xor - Condition is true\00"
@string_const.64 = private global %string_descriptor <{ i8* getelementptr inbounds ([31 x i8], [31 x i8]* @string_const_data.63, i32 0, i32 0), i64 30 }>
@41 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.65 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.66 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.65, i32 0, i32 0), i64 10 }>
@string_const_data.67 = private constant [2 x i8] c"\0A\00"
@string_const.68 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.67, i32 0, i32 0), i64 1 }>
@42 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.69 = private constant [32 x i8] c"Line 8 xor - Condition is false\00"
@string_const.70 = private global %string_descriptor <{ i8* getelementptr inbounds ([32 x i8], [32 x i8]* @string_const_data.69, i32 0, i32 0), i64 31 }>
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca i1, align 1
  %b = alloca i1, align 1
  store i1 true, i1* %a, align 1
  store i1 false, i1* %b, align 1
  %2 = load i1, i1* %a, align 1
  %3 = load i1, i1* %b, align 1
  %4 = icmp eq i1 %2, false
  %5 = select i1 %4, i1 %2, i1 %3
  br i1 %5, label %then, label %else

then:                                             ; preds = %.entry
  %6 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  %7 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  %8 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %7, i8* %8)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  %9 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0))
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %10 = load i1, i1* %a, align 1
  %11 = load i1, i1* %b, align 1
  %12 = icmp eq i1 %10, false
  %13 = select i1 %12, i1 %11, i1 %10
  br i1 %13, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %14 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  br label %ifcont3

else2:                                            ; preds = %ifcont
  %15 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %16 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %17 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %16, i8* %17)
  call void @exit(i32 1)
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %18 = load i1, i1* %a, align 1
  %19 = load i1, i1* %b, align 1
  %20 = icmp eq i1 %18, false
  %21 = xor i1 %18, %19
  br i1 %21, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  %22 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  %23 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0))
  %24 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %25 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %24, i8* %25)
  call void @exit(i32 1)
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i1 false, i1* %a, align 1
  store i1 true, i1* %b, align 1
  %26 = load i1, i1* %a, align 1
  %27 = load i1, i1* %b, align 1
  %28 = icmp eq i1 %26, false
  %29 = select i1 %28, i1 %26, i1 %27
  %30 = xor i1 %29, true
  br i1 %30, label %then7, label %else8

then7:                                            ; preds = %ifcont6
  %31 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i32 0, i32 0), i8* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i32 0, i32 0))
  br label %ifcont9

else8:                                            ; preds = %ifcont6
  %32 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0))
  %33 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %34 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* %33, i8* %34)
  call void @exit(i32 1)
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %35 = load i1, i1* %b, align 1
  %36 = load i1, i1* %a, align 1
  %37 = icmp eq i1 %35, false
  %38 = xor i1 %35, %36
  br i1 %38, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  %39 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0), i8* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @20, i32 0, i32 0))
  br label %ifcont12

else11:                                           ; preds = %ifcont9
  %40 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0))
  %41 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %42 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @24, i32 0, i32 0), i8* %41, i8* %42)
  call void @exit(i32 1)
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %43 = load i1, i1* %b, align 1
  %44 = load i1, i1* %a, align 1
  %45 = icmp eq i1 %43, false
  %46 = xor i1 %43, %44
  %47 = xor i1 %46, true
  br i1 %47, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  %48 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  %49 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  %50 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* %49, i8* %50)
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  %51 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  store i1 true, i1* %a, align 1
  store i1 true, i1* %b, align 1
  %52 = load i1, i1* %a, align 1
  %53 = load i1, i1* %b, align 1
  %54 = icmp eq i1 %52, false
  %55 = select i1 %54, i1 %52, i1 %53
  br i1 %55, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  %56 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.48, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0))
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  %57 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.50, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @33, i32 0, i32 0), i8* %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @32, i32 0, i32 0))
  %58 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.52, i32 0, i32 0), align 8
  %59 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.54, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @34, i32 0, i32 0), i8* %58, i8* %59)
  call void @exit(i32 1)
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %60 = load i1, i1* %a, align 1
  %61 = load i1, i1* %b, align 1
  %62 = icmp eq i1 %60, false
  %63 = select i1 %62, i1 %61, i1 %60
  br i1 %63, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  %64 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.56, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @36, i32 0, i32 0), i8* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0))
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  %65 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.58, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i8* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  %66 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.60, i32 0, i32 0), align 8
  %67 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.62, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @39, i32 0, i32 0), i8* %66, i8* %67)
  call void @exit(i32 1)
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  %68 = load i1, i1* %a, align 1
  %69 = load i1, i1* %b, align 1
  %70 = icmp eq i1 %68, false
  %71 = xor i1 %68, %69
  br i1 %71, label %then22, label %else23

then22:                                           ; preds = %ifcont21
  %72 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.64, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i8* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  %73 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.66, i32 0, i32 0), align 8
  %74 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.68, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @42, i32 0, i32 0), i8* %73, i8* %74)
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %ifcont21
  %75 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.70, i32 0, i32 0), align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* %75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0))
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont24
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lfortran_printf(i8*, ...)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
