; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_8 = type { double, double }
%complex_4 = type { float, float }

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [30 x i8] c"(%lf,%lf)%s(%f,%f)%s(%f,%f)%s\00", align 1

define i32 @main() {
.entry:
  %v = alloca %complex_8, align 8
  %x = alloca %complex_4, align 8
  %zero = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %zero, align 4
  %4 = alloca %complex_4, align 8
  %5 = getelementptr %complex_4, %complex_4* %4, i32 0, i32 0
  %6 = getelementptr %complex_4, %complex_4* %4, i32 0, i32 1
  store float 0x3FF0CCCCC0000000, float* %5, align 4
  store float 0x3FF0CCCCC0000000, float* %6, align 4
  %7 = load %complex_4, %complex_4* %4, align 4
  %8 = alloca %complex_4, align 8
  store %complex_4 %7, %complex_4* %8, align 4
  %9 = getelementptr %complex_4, %complex_4* %8, i32 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fpext float %10 to double
  %12 = alloca %complex_4, align 8
  store %complex_4 %7, %complex_4* %12, align 4
  %13 = getelementptr %complex_4, %complex_4* %12, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fpext float %14 to double
  %16 = alloca %complex_8, align 8
  %17 = getelementptr %complex_8, %complex_8* %16, i32 0, i32 0
  %18 = getelementptr %complex_8, %complex_8* %16, i32 0, i32 1
  store double %11, double* %17, align 8
  store double %15, double* %18, align 8
  %19 = load %complex_8, %complex_8* %16, align 8
  store %complex_8 %19, %complex_8* %v, align 8
  %20 = alloca %complex_8, align 8
  %21 = getelementptr %complex_8, %complex_8* %20, i32 0, i32 0
  %22 = getelementptr %complex_8, %complex_8* %20, i32 0, i32 1
  store double 1.050000e+00, double* %21, align 8
  store double 1.050000e+00, double* %22, align 8
  %23 = load %complex_8, %complex_8* %20, align 8
  %24 = alloca %complex_8, align 8
  store %complex_8 %23, %complex_8* %24, align 8
  %25 = getelementptr %complex_8, %complex_8* %24, i32 0, i32 0
  %26 = load double, double* %25, align 8
  %27 = fptrunc double %26 to float
  %28 = alloca %complex_8, align 8
  store %complex_8 %23, %complex_8* %28, align 8
  %29 = getelementptr %complex_8, %complex_8* %28, i32 0, i32 1
  %30 = load double, double* %29, align 8
  %31 = fptrunc double %30 to float
  %32 = alloca %complex_4, align 8
  %33 = getelementptr %complex_4, %complex_4* %32, i32 0, i32 0
  %34 = getelementptr %complex_4, %complex_4* %32, i32 0, i32 1
  store float %27, float* %33, align 4
  store float %31, float* %34, align 4
  %35 = load %complex_4, %complex_4* %32, align 4
  store %complex_4 %35, %complex_4* %x, align 4
  %36 = load %complex_8, %complex_8* %v, align 8
  %37 = alloca %complex_8, align 8
  store %complex_8 %36, %complex_8* %37, align 8
  %38 = getelementptr %complex_8, %complex_8* %37, i32 0, i32 0
  %39 = load double, double* %38, align 8
  %40 = alloca %complex_8, align 8
  store %complex_8 %36, %complex_8* %40, align 8
  %41 = getelementptr %complex_8, %complex_8* %40, i32 0, i32 1
  %42 = load double, double* %41, align 8
  %43 = load %complex_4, %complex_4* %x, align 4
  %44 = alloca %complex_4, align 8
  store %complex_4 %43, %complex_4* %44, align 4
  %45 = getelementptr %complex_4, %complex_4* %44, i32 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fpext float %46 to double
  %48 = alloca %complex_4, align 8
  store %complex_4 %43, %complex_4* %48, align 4
  %49 = getelementptr %complex_4, %complex_4* %48, i32 0, i32 1
  %50 = load float, float* %49, align 4
  %51 = fpext float %50 to double
  %52 = load %complex_4, %complex_4* %zero, align 4
  %53 = alloca %complex_4, align 8
  store %complex_4 %52, %complex_4* %53, align 4
  %54 = getelementptr %complex_4, %complex_4* %53, i32 0, i32 0
  %55 = load float, float* %54, align 4
  %56 = fpext float %55 to double
  %57 = alloca %complex_4, align 8
  store %complex_4 %52, %complex_4* %57, align 4
  %58 = getelementptr %complex_4, %complex_4* %57, i32 0, i32 1
  %59 = load float, float* %58, align 4
  %60 = fpext float %59 to double
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @2, i32 0, i32 0), double %39, double %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), double %47, double %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), double %56, double %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
