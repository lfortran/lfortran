(module
    (type (;0;) (func (param i32) (result)))
    (type (;1;) (func (param i64) (result)))
    (type (;2;) (func (param f32) (result)))
    (type (;3;) (func (param f64) (result)))
    (type (;4;) (func (param i32 i32) (result)))
    (type (;5;) (func (param) (result)))
    (type (;6;) (func (param i32) (result i32)))
    (type (;7;) (func (param f64) (result f64)))
    (type (;8;) (func (param f32 f32) (result f32)))
    (type (;9;) (func (param) (result f32)))
    (type (;10;) (func (param) (result f32)))
    (type (;11;) (func (param) (result f64)))
    (type (;12;) (func (param f64) (result f64)))
    (type (;13;) (func (param) (result)))
    (import "js" "print_i32" (func (;0;) (type 0)))
    (import "js" "print_i64" (func (;1;) (type 1)))
    (import "js" "print_f32" (func (;2;) (type 2)))
    (import "js" "print_f64" (func (;3;) (type 3)))
    (import "js" "print_str" (func (;4;) (type 4)))
    (import "js" "flush_buf" (func (;5;) (type 5)))
    (import "js" "memory" (memory (;0;) 10 100))
    (func $6 (type 6) (param i32) (result i32)
        (local i32)
        i32.const 4
        local.set 1
        local.get 1
        return
    )
    (func $7 (type 7) (param f64) (result f64)
        (local f64)
        local.get 0
        local.get 0
        f64.mul
        local.set 1
        local.get 1
        return
    )
    (func $8 (type 8) (param f32 f32) (result f32)
        (local f32)
        local.get 0
        local.get 1
        f32.add
        local.set 2
        local.get 2
        return
    )
    (func $9 (type 9) (param) (result f32)
        (local f32)
        f32.const -2.500000
        local.set 0
        local.get 0
        return
    )
    (func $10 (type 10) (param) (result f32)
        (local f32)
        f32.const 3.140000
        local.set 0
        local.get 0
        return
    )
    (func $11 (type 11) (param) (result f64)
        (local f64)
        f64.const 3.140000
        local.set 0
        local.get 0
        return
    )
    (func $12 (type 12) (param f64) (result f64)
        (local f64 f64)
        call 11
        local.set 2
        local.get 2
        local.get 0
        call 7
        f64.mul
        local.set 1
        local.get 1
        return
    )
    (func $13 (type 13) (param) (result)
        (local i32)
        f64.const 0.000000
        call 6
        local.set 0
        f32.const -2.300000
        f32.const 5.600000
        call 8
        call 2
        call 5
        call 9
        call 2
        call 5
        call 10
        call 2
        call 5
        call 11
        call 3
        call 5
        f64.const 5.000000
        call 12
        call 3
        call 5
        return
    )
    (export "kind" (func $6))
    (export "a_sqr" (func $7))
    (export "add_floats" (func $8))
    (export "get_neg_f32" (func $9))
    (export "get_pi" (func $10))
    (export "get_pi_64" (func $11))
    (export "z_computecirclearea" (func $12))
    (export "_lcompilers_main" (func $13))
)
