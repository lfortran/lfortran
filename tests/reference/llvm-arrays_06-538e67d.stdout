; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@10 = private unnamed_addr constant [2 x i8] c" \00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@14 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@19 = private unnamed_addr constant [2 x i8] c" \00", align 1
@20 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@21 = private unnamed_addr constant [2 x i8] c" \00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@23 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@30 = private unnamed_addr constant [2 x i8] c" \00", align 1
@31 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@32 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@33 = private unnamed_addr constant [2 x i8] c" \00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@36 = private unnamed_addr constant [2 x i8] c" \00", align 1
@37 = private unnamed_addr constant [2 x i8] c" \00", align 1
@38 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@39 = private unnamed_addr constant [2 x i8] c" \00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@42 = private unnamed_addr constant [2 x i8] c" \00", align 1
@43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@44 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@45 = private unnamed_addr constant [2 x i8] c" \00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@47 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@48 = private unnamed_addr constant [2 x i8] c" \00", align 1
@49 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@50 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %array_bound168 = alloca i32, align 4
  %array_bound159 = alloca i32, align 4
  %array_bound150 = alloca i32, align 4
  %array_bound141 = alloca i32, align 4
  %array_bound132 = alloca i32, align 4
  %array_bound123 = alloca i32, align 4
  %array_bound111 = alloca i32, align 4
  %array_bound102 = alloca i32, align 4
  %array_bound93 = alloca i32, align 4
  %array_bound84 = alloca i32, align 4
  %array_bound75 = alloca i32, align 4
  %array_bound66 = alloca i32, align 4
  %array_bound60 = alloca i32, align 4
  %array_bound55 = alloca i32, align 4
  %array_bound48 = alloca i32, align 4
  %array_bound42 = alloca i32, align 4
  %array_bound37 = alloca i32, align 4
  %array_bound30 = alloca i32, align 4
  %array_bound24 = alloca i32, align 4
  %array_bound19 = alloca i32, align 4
  %array_bound12 = alloca i32, align 4
  %array_bound6 = alloca i32, align 4
  %array_bound1 = alloca i32, align 4
  %array_bound = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %__1_t = alloca i32, align 4
  %__2_k = alloca i32, align 4
  %__2_t = alloca i32, align 4
  %__3_k = alloca i32, align 4
  %__3_t = alloca i32, align 4
  %a = alloca [27 x i32], align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca [6 x i32], align 4
  store i32 4, i32* %j, align 4
  br i1 true, label %then, label %else

then:                                             ; preds = %.entry
  store i32 1, i32* %array_bound, align 4
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %2 = load i32, i32* %array_bound, align 4
  store i32 %2, i32* %__1_k, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %ifcont
  %3 = load i32, i32* %i, align 4
  %4 = add i32 %3, 1
  %5 = icmp sle i32 %4, 6
  br i1 %5, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %i, align 4
  %8 = load i32, i32* %__1_k, align 4
  %9 = sub i32 %8, 1
  %10 = mul i32 1, %9
  %11 = add i32 0, %10
  %12 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %11
  %13 = load i32, i32* %i, align 4
  %14 = mul i32 %13, 2
  store i32 %14, i32* %12, align 4
  %15 = load i32, i32* %__1_k, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %__1_k, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br i1 true, label %then2, label %else3

then2:                                            ; preds = %loop.end
  store i32 1, i32* %array_bound1, align 4
  br label %ifcont4

else3:                                            ; preds = %loop.end
  br label %ifcont4

ifcont4:                                          ; preds = %else3, %then2
  %17 = load i32, i32* %array_bound1, align 4
  %18 = sub i32 %17, 1
  store i32 %18, i32* %__1_k, align 4
  br label %loop.head5

loop.head5:                                       ; preds = %loop.body10, %ifcont4
  %19 = load i32, i32* %__1_k, align 4
  %20 = add i32 %19, 1
  br i1 true, label %then7, label %else8

then7:                                            ; preds = %loop.head5
  store i32 6, i32* %array_bound6, align 4
  br label %ifcont9

else8:                                            ; preds = %loop.head5
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %21 = load i32, i32* %array_bound6, align 4
  %22 = icmp sle i32 %20, %21
  br i1 %22, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %ifcont9
  %23 = load i32, i32* %__1_k, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %__1_k, align 4
  %25 = load i32, i32* %__1_k, align 4
  %26 = sub i32 %25, 1
  %27 = mul i32 1, %26
  %28 = add i32 0, %27
  %29 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %28
  %30 = load i32, i32* %29, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %loop.head5

loop.end11:                                       ; preds = %ifcont9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  br i1 true, label %then13, label %else14

then13:                                           ; preds = %loop.end11
  store i32 1, i32* %array_bound12, align 4
  br label %ifcont15

else14:                                           ; preds = %loop.end11
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %31 = load i32, i32* %array_bound12, align 4
  store i32 %31, i32* %__1_k, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.body17, %ifcont15
  %32 = load i32, i32* %i, align 4
  %33 = add i32 %32, 1
  %34 = icmp sle i32 %33, 3
  br i1 %34, label %loop.body17, label %loop.end18

loop.body17:                                      ; preds = %loop.head16
  %35 = load i32, i32* %i, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %i, align 4
  %37 = load i32, i32* %__1_k, align 4
  %38 = sub i32 %37, 1
  %39 = mul i32 1, %38
  %40 = add i32 0, %39
  %41 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %40
  %42 = load i32, i32* %i, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %41, align 4
  %44 = load i32, i32* %__1_k, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %__1_k, align 4
  %46 = load i32, i32* %__1_k, align 4
  %47 = sub i32 %46, 1
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %49
  %51 = load i32, i32* %i, align 4
  %52 = mul i32 %51, 2
  store i32 %52, i32* %50, align 4
  %53 = load i32, i32* %__1_k, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %__1_k, align 4
  br label %loop.head16

loop.end18:                                       ; preds = %loop.head16
  br i1 true, label %then20, label %else21

then20:                                           ; preds = %loop.end18
  store i32 1, i32* %array_bound19, align 4
  br label %ifcont22

else21:                                           ; preds = %loop.end18
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %55 = load i32, i32* %array_bound19, align 4
  %56 = sub i32 %55, 1
  store i32 %56, i32* %__1_k, align 4
  br label %loop.head23

loop.head23:                                      ; preds = %loop.body28, %ifcont22
  %57 = load i32, i32* %__1_k, align 4
  %58 = add i32 %57, 1
  br i1 true, label %then25, label %else26

then25:                                           ; preds = %loop.head23
  store i32 6, i32* %array_bound24, align 4
  br label %ifcont27

else26:                                           ; preds = %loop.head23
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %59 = load i32, i32* %array_bound24, align 4
  %60 = icmp sle i32 %58, %59
  br i1 %60, label %loop.body28, label %loop.end29

loop.body28:                                      ; preds = %ifcont27
  %61 = load i32, i32* %__1_k, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %__1_k, align 4
  %63 = load i32, i32* %__1_k, align 4
  %64 = sub i32 %63, 1
  %65 = mul i32 1, %64
  %66 = add i32 0, %65
  %67 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %66
  %68 = load i32, i32* %67, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i32 %68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  br label %loop.head23

loop.end29:                                       ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  br i1 true, label %then31, label %else32

then31:                                           ; preds = %loop.end29
  store i32 1, i32* %array_bound30, align 4
  br label %ifcont33

else32:                                           ; preds = %loop.end29
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %69 = load i32, i32* %array_bound30, align 4
  store i32 %69, i32* %__1_k, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.body35, %ifcont33
  %70 = load i32, i32* %i, align 4
  %71 = add i32 %70, 1
  %72 = icmp sle i32 %71, 2
  br i1 %72, label %loop.body35, label %loop.end36

loop.body35:                                      ; preds = %loop.head34
  %73 = load i32, i32* %i, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %i, align 4
  %75 = load i32, i32* %__1_k, align 4
  %76 = sub i32 %75, 1
  %77 = mul i32 1, %76
  %78 = add i32 0, %77
  %79 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %78
  %80 = load i32, i32* %i, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %79, align 4
  %82 = load i32, i32* %__1_k, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %__1_k, align 4
  %84 = load i32, i32* %__1_k, align 4
  %85 = sub i32 %84, 1
  %86 = mul i32 1, %85
  %87 = add i32 0, %86
  %88 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %87
  %89 = load i32, i32* %i, align 4
  %90 = sitofp i32 %89 to float
  %91 = call float @llvm.pow.f32(float %90, float 2.000000e+00)
  %92 = fptosi float %91 to i32
  store i32 %92, i32* %88, align 4
  %93 = load i32, i32* %__1_k, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %__1_k, align 4
  %95 = load i32, i32* %__1_k, align 4
  %96 = sub i32 %95, 1
  %97 = mul i32 1, %96
  %98 = add i32 0, %97
  %99 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %98
  %100 = load i32, i32* %i, align 4
  %101 = mul i32 %100, 2
  store i32 %101, i32* %99, align 4
  %102 = load i32, i32* %__1_k, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %__1_k, align 4
  br label %loop.head34

loop.end36:                                       ; preds = %loop.head34
  br i1 true, label %then38, label %else39

then38:                                           ; preds = %loop.end36
  store i32 1, i32* %array_bound37, align 4
  br label %ifcont40

else39:                                           ; preds = %loop.end36
  br label %ifcont40

ifcont40:                                         ; preds = %else39, %then38
  %104 = load i32, i32* %array_bound37, align 4
  %105 = sub i32 %104, 1
  store i32 %105, i32* %__1_k, align 4
  br label %loop.head41

loop.head41:                                      ; preds = %loop.body46, %ifcont40
  %106 = load i32, i32* %__1_k, align 4
  %107 = add i32 %106, 1
  br i1 true, label %then43, label %else44

then43:                                           ; preds = %loop.head41
  store i32 6, i32* %array_bound42, align 4
  br label %ifcont45

else44:                                           ; preds = %loop.head41
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %108 = load i32, i32* %array_bound42, align 4
  %109 = icmp sle i32 %107, %108
  br i1 %109, label %loop.body46, label %loop.end47

loop.body46:                                      ; preds = %ifcont45
  %110 = load i32, i32* %__1_k, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %__1_k, align 4
  %112 = load i32, i32* %__1_k, align 4
  %113 = sub i32 %112, 1
  %114 = mul i32 1, %113
  %115 = add i32 0, %114
  %116 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %115
  %117 = load i32, i32* %116, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i32 0, i32 0), i32 %117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  br label %loop.head41

loop.end47:                                       ; preds = %ifcont45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  br i1 true, label %then49, label %else50

then49:                                           ; preds = %loop.end47
  store i32 1, i32* %array_bound48, align 4
  br label %ifcont51

else50:                                           ; preds = %loop.end47
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %118 = load i32, i32* %array_bound48, align 4
  store i32 %118, i32* %__1_k, align 4
  store i32 1, i32* %i, align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.body53, %ifcont51
  %119 = load i32, i32* %i, align 4
  %120 = add i32 %119, 1
  %121 = icmp sle i32 %120, 2
  br i1 %121, label %loop.body53, label %loop.end54

loop.body53:                                      ; preds = %loop.head52
  %122 = load i32, i32* %i, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %i, align 4
  %124 = load i32, i32* %__1_k, align 4
  %125 = sub i32 %124, 1
  %126 = mul i32 1, %125
  %127 = add i32 0, %126
  %128 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %127
  %129 = load i32, i32* %i, align 4
  %130 = mul i32 2, %129
  store i32 %130, i32* %128, align 4
  %131 = load i32, i32* %__1_k, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %__1_k, align 4
  %133 = load i32, i32* %__1_k, align 4
  %134 = sub i32 %133, 1
  %135 = mul i32 1, %134
  %136 = add i32 0, %135
  %137 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %136
  %138 = load i32, i32* %i, align 4
  %139 = mul i32 3, %138
  store i32 %139, i32* %137, align 4
  %140 = load i32, i32* %__1_k, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %__1_k, align 4
  %142 = load i32, i32* %__1_k, align 4
  %143 = sub i32 %142, 1
  %144 = mul i32 1, %143
  %145 = add i32 0, %144
  %146 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %145
  %147 = load i32, i32* %i, align 4
  %148 = mul i32 4, %147
  store i32 %148, i32* %146, align 4
  %149 = load i32, i32* %__1_k, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %__1_k, align 4
  %151 = load i32, i32* %__1_k, align 4
  %152 = sub i32 %151, 1
  %153 = mul i32 1, %152
  %154 = add i32 0, %153
  %155 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %154
  %156 = load i32, i32* %i, align 4
  %157 = add i32 %156, 1
  store i32 %157, i32* %155, align 4
  %158 = load i32, i32* %__1_k, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %__1_k, align 4
  %160 = load i32, i32* %__1_k, align 4
  %161 = sub i32 %160, 1
  %162 = mul i32 1, %161
  %163 = add i32 0, %162
  %164 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %163
  %165 = load i32, i32* %i, align 4
  %166 = sitofp i32 %165 to float
  %167 = call float @llvm.pow.f32(float %166, float 2.000000e+00)
  %168 = fptosi float %167 to i32
  store i32 %168, i32* %164, align 4
  %169 = load i32, i32* %__1_k, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %__1_k, align 4
  %171 = load i32, i32* %__1_k, align 4
  %172 = sub i32 %171, 1
  %173 = mul i32 1, %172
  %174 = add i32 0, %173
  %175 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %174
  %176 = load i32, i32* %i, align 4
  %177 = mul i32 %176, 2
  store i32 %177, i32* %175, align 4
  %178 = load i32, i32* %__1_k, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %__1_k, align 4
  br label %loop.head52

loop.end54:                                       ; preds = %loop.head52
  br i1 true, label %then56, label %else57

then56:                                           ; preds = %loop.end54
  store i32 1, i32* %array_bound55, align 4
  br label %ifcont58

else57:                                           ; preds = %loop.end54
  br label %ifcont58

ifcont58:                                         ; preds = %else57, %then56
  %180 = load i32, i32* %array_bound55, align 4
  %181 = sub i32 %180, 1
  store i32 %181, i32* %__1_k, align 4
  br label %loop.head59

loop.head59:                                      ; preds = %loop.body64, %ifcont58
  %182 = load i32, i32* %__1_k, align 4
  %183 = add i32 %182, 1
  br i1 true, label %then61, label %else62

then61:                                           ; preds = %loop.head59
  store i32 6, i32* %array_bound60, align 4
  br label %ifcont63

else62:                                           ; preds = %loop.head59
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %184 = load i32, i32* %array_bound60, align 4
  %185 = icmp sle i32 %183, %184
  br i1 %185, label %loop.body64, label %loop.end65

loop.body64:                                      ; preds = %ifcont63
  %186 = load i32, i32* %__1_k, align 4
  %187 = add i32 %186, 1
  store i32 %187, i32* %__1_k, align 4
  %188 = load i32, i32* %__1_k, align 4
  %189 = sub i32 %188, 1
  %190 = mul i32 1, %189
  %191 = add i32 0, %190
  %192 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 %191
  %193 = load i32, i32* %192, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i32 %193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  br label %loop.head59

loop.end65:                                       ; preds = %ifcont63
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  br i1 true, label %then67, label %else68

then67:                                           ; preds = %loop.end65
  store i32 1, i32* %array_bound66, align 4
  br label %ifcont73

else68:                                           ; preds = %loop.end65
  br i1 false, label %then69, label %else70

then69:                                           ; preds = %else68
  store i32 1, i32* %array_bound66, align 4
  br label %ifcont73

else70:                                           ; preds = %else68
  br i1 false, label %then71, label %else72

then71:                                           ; preds = %else70
  store i32 1, i32* %array_bound66, align 4
  br label %ifcont73

else72:                                           ; preds = %else70
  br label %ifcont73

ifcont73:                                         ; preds = %else72, %then71, %then69, %then67
  %194 = load i32, i32* %array_bound66, align 4
  %195 = sub i32 %194, 1
  store i32 %195, i32* %__1_t, align 4
  br label %loop.head74

loop.head74:                                      ; preds = %loop.end121, %ifcont73
  %196 = load i32, i32* %__1_t, align 4
  %197 = add i32 %196, 1
  br i1 true, label %then76, label %else77

then76:                                           ; preds = %loop.head74
  store i32 3, i32* %array_bound75, align 4
  br label %ifcont82

else77:                                           ; preds = %loop.head74
  br i1 false, label %then78, label %else79

then78:                                           ; preds = %else77
  store i32 3, i32* %array_bound75, align 4
  br label %ifcont82

else79:                                           ; preds = %else77
  br i1 false, label %then80, label %else81

then80:                                           ; preds = %else79
  store i32 3, i32* %array_bound75, align 4
  br label %ifcont82

else81:                                           ; preds = %else79
  br label %ifcont82

ifcont82:                                         ; preds = %else81, %then80, %then78, %then76
  %198 = load i32, i32* %array_bound75, align 4
  %199 = icmp sle i32 %197, %198
  br i1 %199, label %loop.body83, label %loop.end122

loop.body83:                                      ; preds = %ifcont82
  %200 = load i32, i32* %__1_t, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %__1_t, align 4
  br i1 false, label %then85, label %else86

then85:                                           ; preds = %loop.body83
  store i32 1, i32* %array_bound84, align 4
  br label %ifcont91

else86:                                           ; preds = %loop.body83
  br i1 true, label %then87, label %else88

then87:                                           ; preds = %else86
  store i32 1, i32* %array_bound84, align 4
  br label %ifcont91

else88:                                           ; preds = %else86
  br i1 false, label %then89, label %else90

then89:                                           ; preds = %else88
  store i32 1, i32* %array_bound84, align 4
  br label %ifcont91

else90:                                           ; preds = %else88
  br label %ifcont91

ifcont91:                                         ; preds = %else90, %then89, %then87, %then85
  %202 = load i32, i32* %array_bound84, align 4
  %203 = sub i32 %202, 1
  store i32 %203, i32* %__2_t, align 4
  br label %loop.head92

loop.head92:                                      ; preds = %loop.end120, %ifcont91
  %204 = load i32, i32* %__2_t, align 4
  %205 = add i32 %204, 1
  br i1 false, label %then94, label %else95

then94:                                           ; preds = %loop.head92
  store i32 3, i32* %array_bound93, align 4
  br label %ifcont100

else95:                                           ; preds = %loop.head92
  br i1 true, label %then96, label %else97

then96:                                           ; preds = %else95
  store i32 3, i32* %array_bound93, align 4
  br label %ifcont100

else97:                                           ; preds = %else95
  br i1 false, label %then98, label %else99

then98:                                           ; preds = %else97
  store i32 3, i32* %array_bound93, align 4
  br label %ifcont100

else99:                                           ; preds = %else97
  br label %ifcont100

ifcont100:                                        ; preds = %else99, %then98, %then96, %then94
  %206 = load i32, i32* %array_bound93, align 4
  %207 = icmp sle i32 %205, %206
  br i1 %207, label %loop.body101, label %loop.end121

loop.body101:                                     ; preds = %ifcont100
  %208 = load i32, i32* %__2_t, align 4
  %209 = add i32 %208, 1
  store i32 %209, i32* %__2_t, align 4
  br i1 false, label %then103, label %else104

then103:                                          ; preds = %loop.body101
  store i32 1, i32* %array_bound102, align 4
  br label %ifcont109

else104:                                          ; preds = %loop.body101
  br i1 false, label %then105, label %else106

then105:                                          ; preds = %else104
  store i32 1, i32* %array_bound102, align 4
  br label %ifcont109

else106:                                          ; preds = %else104
  br i1 true, label %then107, label %else108

then107:                                          ; preds = %else106
  store i32 1, i32* %array_bound102, align 4
  br label %ifcont109

else108:                                          ; preds = %else106
  br label %ifcont109

ifcont109:                                        ; preds = %else108, %then107, %then105, %then103
  %210 = load i32, i32* %array_bound102, align 4
  %211 = sub i32 %210, 1
  store i32 %211, i32* %__3_t, align 4
  br label %loop.head110

loop.head110:                                     ; preds = %loop.body119, %ifcont109
  %212 = load i32, i32* %__3_t, align 4
  %213 = add i32 %212, 1
  br i1 false, label %then112, label %else113

then112:                                          ; preds = %loop.head110
  store i32 3, i32* %array_bound111, align 4
  br label %ifcont118

else113:                                          ; preds = %loop.head110
  br i1 false, label %then114, label %else115

then114:                                          ; preds = %else113
  store i32 3, i32* %array_bound111, align 4
  br label %ifcont118

else115:                                          ; preds = %else113
  br i1 true, label %then116, label %else117

then116:                                          ; preds = %else115
  store i32 3, i32* %array_bound111, align 4
  br label %ifcont118

else117:                                          ; preds = %else115
  br label %ifcont118

ifcont118:                                        ; preds = %else117, %then116, %then114, %then112
  %214 = load i32, i32* %array_bound111, align 4
  %215 = icmp sle i32 %213, %214
  br i1 %215, label %loop.body119, label %loop.end120

loop.body119:                                     ; preds = %ifcont118
  %216 = load i32, i32* %__3_t, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %__3_t, align 4
  %218 = load i32, i32* %__1_t, align 4
  %219 = load i32, i32* %__2_t, align 4
  %220 = load i32, i32* %__3_t, align 4
  %221 = sub i32 %218, 1
  %222 = mul i32 1, %221
  %223 = add i32 0, %222
  %224 = sub i32 %219, 1
  %225 = mul i32 3, %224
  %226 = add i32 %223, %225
  %227 = sub i32 %220, 1
  %228 = mul i32 9, %227
  %229 = add i32 %226, %228
  %230 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 %229
  store i32 7, i32* %230, align 4
  br label %loop.head110

loop.end120:                                      ; preds = %ifcont118
  br label %loop.head92

loop.end121:                                      ; preds = %ifcont100
  br label %loop.head74

loop.end122:                                      ; preds = %ifcont82
  br i1 true, label %then124, label %else125

then124:                                          ; preds = %loop.end122
  store i32 1, i32* %array_bound123, align 4
  br label %ifcont130

else125:                                          ; preds = %loop.end122
  br i1 false, label %then126, label %else127

then126:                                          ; preds = %else125
  store i32 1, i32* %array_bound123, align 4
  br label %ifcont130

else127:                                          ; preds = %else125
  br i1 false, label %then128, label %else129

then128:                                          ; preds = %else127
  store i32 1, i32* %array_bound123, align 4
  br label %ifcont130

else129:                                          ; preds = %else127
  br label %ifcont130

ifcont130:                                        ; preds = %else129, %then128, %then126, %then124
  %231 = load i32, i32* %array_bound123, align 4
  %232 = sub i32 %231, 1
  store i32 %232, i32* %__1_k, align 4
  br label %loop.head131

loop.head131:                                     ; preds = %loop.end178, %ifcont130
  %233 = load i32, i32* %__1_k, align 4
  %234 = add i32 %233, 1
  br i1 true, label %then133, label %else134

then133:                                          ; preds = %loop.head131
  store i32 3, i32* %array_bound132, align 4
  br label %ifcont139

else134:                                          ; preds = %loop.head131
  br i1 false, label %then135, label %else136

then135:                                          ; preds = %else134
  store i32 3, i32* %array_bound132, align 4
  br label %ifcont139

else136:                                          ; preds = %else134
  br i1 false, label %then137, label %else138

then137:                                          ; preds = %else136
  store i32 3, i32* %array_bound132, align 4
  br label %ifcont139

else138:                                          ; preds = %else136
  br label %ifcont139

ifcont139:                                        ; preds = %else138, %then137, %then135, %then133
  %235 = load i32, i32* %array_bound132, align 4
  %236 = icmp sle i32 %234, %235
  br i1 %236, label %loop.body140, label %loop.end179

loop.body140:                                     ; preds = %ifcont139
  %237 = load i32, i32* %__1_k, align 4
  %238 = add i32 %237, 1
  store i32 %238, i32* %__1_k, align 4
  br i1 false, label %then142, label %else143

then142:                                          ; preds = %loop.body140
  store i32 1, i32* %array_bound141, align 4
  br label %ifcont148

else143:                                          ; preds = %loop.body140
  br i1 true, label %then144, label %else145

then144:                                          ; preds = %else143
  store i32 1, i32* %array_bound141, align 4
  br label %ifcont148

else145:                                          ; preds = %else143
  br i1 false, label %then146, label %else147

then146:                                          ; preds = %else145
  store i32 1, i32* %array_bound141, align 4
  br label %ifcont148

else147:                                          ; preds = %else145
  br label %ifcont148

ifcont148:                                        ; preds = %else147, %then146, %then144, %then142
  %239 = load i32, i32* %array_bound141, align 4
  %240 = sub i32 %239, 1
  store i32 %240, i32* %__2_k, align 4
  br label %loop.head149

loop.head149:                                     ; preds = %loop.end177, %ifcont148
  %241 = load i32, i32* %__2_k, align 4
  %242 = add i32 %241, 1
  br i1 false, label %then151, label %else152

then151:                                          ; preds = %loop.head149
  store i32 3, i32* %array_bound150, align 4
  br label %ifcont157

else152:                                          ; preds = %loop.head149
  br i1 true, label %then153, label %else154

then153:                                          ; preds = %else152
  store i32 3, i32* %array_bound150, align 4
  br label %ifcont157

else154:                                          ; preds = %else152
  br i1 false, label %then155, label %else156

then155:                                          ; preds = %else154
  store i32 3, i32* %array_bound150, align 4
  br label %ifcont157

else156:                                          ; preds = %else154
  br label %ifcont157

ifcont157:                                        ; preds = %else156, %then155, %then153, %then151
  %243 = load i32, i32* %array_bound150, align 4
  %244 = icmp sle i32 %242, %243
  br i1 %244, label %loop.body158, label %loop.end178

loop.body158:                                     ; preds = %ifcont157
  %245 = load i32, i32* %__2_k, align 4
  %246 = add i32 %245, 1
  store i32 %246, i32* %__2_k, align 4
  br i1 false, label %then160, label %else161

then160:                                          ; preds = %loop.body158
  store i32 1, i32* %array_bound159, align 4
  br label %ifcont166

else161:                                          ; preds = %loop.body158
  br i1 false, label %then162, label %else163

then162:                                          ; preds = %else161
  store i32 1, i32* %array_bound159, align 4
  br label %ifcont166

else163:                                          ; preds = %else161
  br i1 true, label %then164, label %else165

then164:                                          ; preds = %else163
  store i32 1, i32* %array_bound159, align 4
  br label %ifcont166

else165:                                          ; preds = %else163
  br label %ifcont166

ifcont166:                                        ; preds = %else165, %then164, %then162, %then160
  %247 = load i32, i32* %array_bound159, align 4
  %248 = sub i32 %247, 1
  store i32 %248, i32* %__3_k, align 4
  br label %loop.head167

loop.head167:                                     ; preds = %loop.body176, %ifcont166
  %249 = load i32, i32* %__3_k, align 4
  %250 = add i32 %249, 1
  br i1 false, label %then169, label %else170

then169:                                          ; preds = %loop.head167
  store i32 3, i32* %array_bound168, align 4
  br label %ifcont175

else170:                                          ; preds = %loop.head167
  br i1 false, label %then171, label %else172

then171:                                          ; preds = %else170
  store i32 3, i32* %array_bound168, align 4
  br label %ifcont175

else172:                                          ; preds = %else170
  br i1 true, label %then173, label %else174

then173:                                          ; preds = %else172
  store i32 3, i32* %array_bound168, align 4
  br label %ifcont175

else174:                                          ; preds = %else172
  br label %ifcont175

ifcont175:                                        ; preds = %else174, %then173, %then171, %then169
  %251 = load i32, i32* %array_bound168, align 4
  %252 = icmp sle i32 %250, %251
  br i1 %252, label %loop.body176, label %loop.end177

loop.body176:                                     ; preds = %ifcont175
  %253 = load i32, i32* %__3_k, align 4
  %254 = add i32 %253, 1
  store i32 %254, i32* %__3_k, align 4
  %255 = load i32, i32* %__1_k, align 4
  %256 = load i32, i32* %__2_k, align 4
  %257 = load i32, i32* %__3_k, align 4
  %258 = sub i32 %255, 1
  %259 = mul i32 1, %258
  %260 = add i32 0, %259
  %261 = sub i32 %256, 1
  %262 = mul i32 3, %261
  %263 = add i32 %260, %262
  %264 = sub i32 %257, 1
  %265 = mul i32 9, %264
  %266 = add i32 %263, %265
  %267 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 %266
  %268 = load i32, i32* %267, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i32 %268, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  br label %loop.head167

loop.end177:                                      ; preds = %ifcont175
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  br label %loop.head149

loop.end178:                                      ; preds = %ifcont157
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0))
  br label %loop.head131

loop.end179:                                      ; preds = %ifcont139
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @50, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @49, i32 0, i32 0))
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_printf(i8*, ...)

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #0

attributes #0 = { nounwind readnone speculatable willreturn }
