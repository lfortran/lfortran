; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %array_bound49 = alloca i32, align 4
  %array_bound40 = alloca i32, align 4
  %array_bound31 = alloca i32, align 4
  %array_bound22 = alloca i32, align 4
  %array_bound14 = alloca i32, align 4
  %array_bound = alloca i32, align 4
  %__1_k = alloca i32, align 4
  %__2_k = alloca i32, align 4
  %__3_k = alloca i32, align 4
  %__libasr_index_0_ = alloca i32, align 4
  %__libasr_index_1_ = alloca i32, align 4
  %__libasr_index_2_ = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %__1_k1 = alloca i32, align 4
  %__2_k2 = alloca i32, align 4
  %__3_k3 = alloca i32, align 4
  %__libasr_index_0_4 = alloca i32, align 4
  %__libasr_index_1_5 = alloca i32, align 4
  %__libasr_index_2_6 = alloca i32, align 4
  %a = alloca [27 x i32], align 4
  %i7 = alloca i32, align 4
  %j8 = alloca i32, align 4
  %k9 = alloca i32, align 4
  %x = alloca [6 x i32], align 4
  store i32 4, i32* %j8, align 4
  %2 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  store i32 2, i32* %2, align 4
  %3 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  store i32 4, i32* %3, align 4
  %4 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  store i32 6, i32* %4, align 4
  %5 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  store i32 8, i32* %5, align 4
  %6 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  store i32 10, i32* %6, align 4
  %7 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  store i32 12, i32* %7, align 4
  %8 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 12, i8* null, i32 2, i64 %10, i32 2, i64 %13, i32 2, i64 %16, i32 2, i64 %19, i32 2, i64 %22, i32 2, i64 %25)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  %27 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  store i32 2, i32* %27, align 4
  %28 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  store i32 2, i32* %28, align 4
  %29 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  store i32 3, i32* %29, align 4
  %30 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  store i32 4, i32* %30, align 4
  %31 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  store i32 4, i32* %31, align 4
  %32 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  store i32 6, i32* %32, align 4
  %33 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 12, i8* null, i32 2, i64 %35, i32 2, i64 %38, i32 2, i64 %41, i32 2, i64 %44, i32 2, i64 %47, i32 2, i64 %50)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  %52 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  store i32 2, i32* %52, align 4
  %53 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  store i32 1, i32* %53, align 4
  %54 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  store i32 2, i32* %54, align 4
  %55 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  store i32 3, i32* %55, align 4
  %56 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  store i32 4, i32* %56, align 4
  %57 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  store i32 4, i32* %57, align 4
  %58 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 12, i8* null, i32 2, i64 %60, i32 2, i64 %63, i32 2, i64 %66, i32 2, i64 %69, i32 2, i64 %72, i32 2, i64 %75)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %77 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  store i32 4, i32* %77, align 4
  %78 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  store i32 6, i32* %78, align 4
  %79 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  store i32 8, i32* %79, align 4
  %80 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  store i32 3, i32* %80, align 4
  %81 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  store i32 4, i32* %81, align 4
  %82 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  store i32 4, i32* %82, align 4
  %83 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 4
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr [6 x i32], [6 x i32]* %x, i32 0, i32 5
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %99 to i64
  %101 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 12, i8* null, i32 2, i64 %85, i32 2, i64 %88, i32 2, i64 %91, i32 2, i64 %94, i32 2, i64 %97, i32 2, i64 %100)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  br i1 true, label %then, label %else

then:                                             ; preds = %.entry
  store i32 1, i32* %array_bound, align 4
  br label %ifcont

else:                                             ; preds = %.entry
  br i1 false, label %then10, label %else11

then10:                                           ; preds = %else
  store i32 1, i32* %array_bound, align 4
  br label %ifcont

else11:                                           ; preds = %else
  br i1 false, label %then12, label %else13

then12:                                           ; preds = %else11
  store i32 1, i32* %array_bound, align 4
  br label %ifcont

else13:                                           ; preds = %else11
  br label %ifcont

ifcont:                                           ; preds = %else13, %then12, %then10, %then
  %102 = load i32, i32* %array_bound, align 4
  %103 = sub i32 %102, 1
  store i32 %103, i32* %__libasr_index_0_4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end58, %ifcont
  %104 = load i32, i32* %__libasr_index_0_4, align 4
  %105 = add i32 %104, 1
  br i1 true, label %then15, label %else16

then15:                                           ; preds = %loop.head
  store i32 3, i32* %array_bound14, align 4
  br label %ifcont21

else16:                                           ; preds = %loop.head
  br i1 false, label %then17, label %else18

then17:                                           ; preds = %else16
  store i32 3, i32* %array_bound14, align 4
  br label %ifcont21

else18:                                           ; preds = %else16
  br i1 false, label %then19, label %else20

then19:                                           ; preds = %else18
  store i32 3, i32* %array_bound14, align 4
  br label %ifcont21

else20:                                           ; preds = %else18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19, %then17, %then15
  %106 = load i32, i32* %array_bound14, align 4
  %107 = icmp sle i32 %105, %106
  br i1 %107, label %loop.body, label %loop.end59

loop.body:                                        ; preds = %ifcont21
  %108 = load i32, i32* %__libasr_index_0_4, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %__libasr_index_0_4, align 4
  br i1 false, label %then23, label %else24

then23:                                           ; preds = %loop.body
  store i32 1, i32* %array_bound22, align 4
  br label %ifcont29

else24:                                           ; preds = %loop.body
  br i1 true, label %then25, label %else26

then25:                                           ; preds = %else24
  store i32 1, i32* %array_bound22, align 4
  br label %ifcont29

else26:                                           ; preds = %else24
  br i1 false, label %then27, label %else28

then27:                                           ; preds = %else26
  store i32 1, i32* %array_bound22, align 4
  br label %ifcont29

else28:                                           ; preds = %else26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27, %then25, %then23
  %110 = load i32, i32* %array_bound22, align 4
  %111 = sub i32 %110, 1
  store i32 %111, i32* %__libasr_index_1_5, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end, %ifcont29
  %112 = load i32, i32* %__libasr_index_1_5, align 4
  %113 = add i32 %112, 1
  br i1 false, label %then32, label %else33

then32:                                           ; preds = %loop.head30
  store i32 3, i32* %array_bound31, align 4
  br label %ifcont38

else33:                                           ; preds = %loop.head30
  br i1 true, label %then34, label %else35

then34:                                           ; preds = %else33
  store i32 3, i32* %array_bound31, align 4
  br label %ifcont38

else35:                                           ; preds = %else33
  br i1 false, label %then36, label %else37

then36:                                           ; preds = %else35
  store i32 3, i32* %array_bound31, align 4
  br label %ifcont38

else37:                                           ; preds = %else35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36, %then34, %then32
  %114 = load i32, i32* %array_bound31, align 4
  %115 = icmp sle i32 %113, %114
  br i1 %115, label %loop.body39, label %loop.end58

loop.body39:                                      ; preds = %ifcont38
  %116 = load i32, i32* %__libasr_index_1_5, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %__libasr_index_1_5, align 4
  br i1 false, label %then41, label %else42

then41:                                           ; preds = %loop.body39
  store i32 1, i32* %array_bound40, align 4
  br label %ifcont47

else42:                                           ; preds = %loop.body39
  br i1 false, label %then43, label %else44

then43:                                           ; preds = %else42
  store i32 1, i32* %array_bound40, align 4
  br label %ifcont47

else44:                                           ; preds = %else42
  br i1 true, label %then45, label %else46

then45:                                           ; preds = %else44
  store i32 1, i32* %array_bound40, align 4
  br label %ifcont47

else46:                                           ; preds = %else44
  br label %ifcont47

ifcont47:                                         ; preds = %else46, %then45, %then43, %then41
  %118 = load i32, i32* %array_bound40, align 4
  %119 = sub i32 %118, 1
  store i32 %119, i32* %__libasr_index_2_6, align 4
  br label %loop.head48

loop.head48:                                      ; preds = %loop.body57, %ifcont47
  %120 = load i32, i32* %__libasr_index_2_6, align 4
  %121 = add i32 %120, 1
  br i1 false, label %then50, label %else51

then50:                                           ; preds = %loop.head48
  store i32 3, i32* %array_bound49, align 4
  br label %ifcont56

else51:                                           ; preds = %loop.head48
  br i1 false, label %then52, label %else53

then52:                                           ; preds = %else51
  store i32 3, i32* %array_bound49, align 4
  br label %ifcont56

else53:                                           ; preds = %else51
  br i1 true, label %then54, label %else55

then54:                                           ; preds = %else53
  store i32 3, i32* %array_bound49, align 4
  br label %ifcont56

else55:                                           ; preds = %else53
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54, %then52, %then50
  %122 = load i32, i32* %array_bound49, align 4
  %123 = icmp sle i32 %121, %122
  br i1 %123, label %loop.body57, label %loop.end

loop.body57:                                      ; preds = %ifcont56
  %124 = load i32, i32* %__libasr_index_2_6, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %__libasr_index_2_6, align 4
  %126 = load i32, i32* %__libasr_index_0_4, align 4
  %127 = load i32, i32* %__libasr_index_1_5, align 4
  %128 = load i32, i32* %__libasr_index_2_6, align 4
  %129 = sub i32 %126, 1
  %130 = mul i32 1, %129
  %131 = add i32 0, %130
  %132 = sub i32 %127, 1
  %133 = mul i32 3, %132
  %134 = add i32 %131, %133
  %135 = sub i32 %128, 1
  %136 = mul i32 9, %135
  %137 = add i32 %134, %136
  %138 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 %137
  store i32 7, i32* %138, align 4
  br label %loop.head48

loop.end:                                         ; preds = %ifcont56
  br label %loop.head30

loop.end58:                                       ; preds = %ifcont38
  br label %loop.head

loop.end59:                                       ; preds = %ifcont21
  %139 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr [27 x i32], [27 x i32]* %a, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 18, i8* null, i32 2, i64 %141, i32 2, i64 %144, i32 2, i64 %147, i32 2, i64 %150, i32 2, i64 %153, i32 2, i64 %156, i32 2, i64 %159, i32 2, i64 %162, i32 2, i64 %165)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %return

return:                                           ; preds = %loop.end59
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i32, i8*, ...)

declare void @_lfortran_printf(i8*, ...)
