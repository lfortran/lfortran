; ModuleID = 'LFortran'
source_filename = "LFortran"

@bindc3.idx = internal global i32 0
@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  store i32 1, i32* @bindc3.idx, align 4
  %y = alloca i16, align 2
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  store i32 1, i32* @bindc3.idx, align 4
  %queries = alloca void*, align 8
  %x = alloca i16*, align 8
  store i16* null, i16** %x, align 8
  %y1 = alloca i16, align 2
  %2 = load void*, void** %queries, align 8
  %3 = bitcast void* %2 to i16*
  store i16* %3, i16** %x, align 8
  %4 = load i16*, i16** %x, align 8
  %5 = bitcast i16* %4 to void*
  %6 = ptrtoint void* %5 to i64
  %7 = load void*, void** %queries, align 8
  %8 = ptrtoint void* %7 to i64
  %9 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 4, i8* null, i32 19, i64 %6, i32 19, i64 %8)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  store i16* %y1, i16** %x, align 8
  %10 = load i16*, i16** %x, align 8
  %11 = bitcast i16* %10 to void*
  %12 = ptrtoint void* %11 to i64
  %13 = bitcast i16* %y1 to void*
  %14 = ptrtoint void* %13 to i64
  %15 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 4, i8* null, i32 19, i64 %12, i32 19, i64 %14)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i32, i8*, ...)

declare void @_lfortran_printf(i8*, ...)
