; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@bindc3.idx = internal global i32 1
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [10 x i8] c"CPtr,CPtr\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [10 x i8] c"CPtr,CPtr\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %y = alloca i16, align 2
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %queries = alloca void*, align 8
  %x = alloca i16*, align 8
  store i16* null, i16** %x, align 8
  %y1 = alloca i16, align 2
  %2 = load void*, void** %queries, align 8
  %3 = bitcast void* %2 to i16*
  store i16* %3, i16** %x, align 8
  %4 = alloca i64, align 8
  %5 = load i16*, i16** %x, align 8
  %6 = bitcast i16* %5 to void*
  %7 = alloca void*, align 8
  store void* %6, void** %7, align 8
  %8 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @serialization_info, i32 0, i32 0), i64* %4, i32 0, i32 0, void** %7, void** %queries)
  %9 = load i64, i64* %4, align 4
  %10 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %10 to %string_descriptor*
  %11 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %8, i8** %11, align 8
  %12 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %9, i64* %12, align 4
  %13 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %16 = load i64, i64* %15, align 4
  %17 = trunc i64 %16 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %14, i32 %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  store i16* %y1, i16** %x, align 8
  %18 = alloca i64, align 8
  %19 = load i16*, i16** %x, align 8
  %20 = bitcast i16* %19 to void*
  %21 = alloca void*, align 8
  store void* %20, void** %21, align 8
  %22 = bitcast i16* %y1 to void*
  %23 = alloca void*, align 8
  store void* %22, void** %23, align 8
  %24 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @serialization_info.1, i32 0, i32 0), i64* %18, i32 0, i32 0, void** %21, void** %23)
  %25 = load i64, i64* %18, align 4
  %26 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %26 to %string_descriptor*
  %27 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %24, i8** %27, align 8
  %28 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %25, i64* %28, align 4
  %29 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %32 = load i64, i64* %31, align 4
  %33 = trunc i64 %32 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %30, i32 %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()
