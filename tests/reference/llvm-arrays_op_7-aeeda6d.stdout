; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define void @f_x_y(i32* %x, i32* %__1x, i32* %__2x, i32* %y, i32* %__1y, i32* %__2y) {
.entry:
  %__1_t = alloca i32, align 4
  %__1_v = alloca i32, align 4
  %0 = load i32, i32* %__1x, align 4
  store i32 %0, i32* %__1_v, align 4
  %1 = load i32, i32* %__1y, align 4
  %2 = sub i32 %1, 1
  store i32 %2, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %3 = load i32, i32* %__1_t, align 4
  %4 = add i32 %3, 1
  %5 = load i32, i32* %__2y, align 4
  %6 = load i32, i32* %__1y, align 4
  %7 = add i32 %5, %6
  %8 = sub i32 %7, 1
  %9 = icmp sle i32 %4, %8
  br i1 %9, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %10 = load i32, i32* %__1_t, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %__1_t, align 4
  %12 = load i32, i32* %__1_t, align 4
  %13 = load i32, i32* %__1y, align 4
  %14 = load i32, i32* %__2y, align 4
  %15 = sub i32 %12, %13
  %16 = mul i32 1, %15
  %17 = add i32 0, %16
  %18 = mul i32 1, %14
  %19 = getelementptr inbounds i32, i32* %y, i32 %17
  %20 = load i32, i32* %__1_v, align 4
  %21 = load i32, i32* %__1x, align 4
  %22 = load i32, i32* %__2x, align 4
  %23 = sub i32 %20, %21
  %24 = mul i32 1, %23
  %25 = add i32 0, %24
  %26 = mul i32 1, %22
  %27 = getelementptr inbounds i32, i32* %x, i32 %25
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %19, align 4
  %29 = load i32, i32* %__1_v, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %__1_v, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  ret void
}

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value3 = alloca i32, align 4
  %call_arg_value2 = alloca i32, align 4
  %call_arg_value1 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %__1_t = alloca i32, align 4
  %x = alloca %array, align 8
  %2 = getelementptr %array, %array* %x, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array, %array* %x, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array, %array* %x, i32 0, i32 4
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 3, i32* %12, align 4
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = getelementptr %array, %array* %x, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = alloca i32, i32 %15, align 4
  store i32* %16, i32** %14, align 8
  %y = alloca %array, align 8
  %17 = getelementptr %array, %array* %y, i32 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr %array, %array* %y, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  %22 = getelementptr %array, %array* %y, i32 0, i32 4
  store i32 1, i32* %22, align 4
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %23 = load %dimension_descriptor*, %dimension_descriptor** %18, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 3, i32* %27, align 4
  %28 = alloca i32, align 4
  store i32 3, i32* %28, align 4
  %29 = getelementptr %array, %array* %y, i32 0, i32 0
  %30 = load i32, i32* %28, align 4
  %31 = alloca i32, i32 %30, align 4
  store i32* %31, i32** %29, align 8
  %32 = getelementptr %array, %array* %x, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %36, 1
  store i32 %37, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %38 = load i32, i32* %__1_t, align 4
  %39 = add i32 %38, 1
  %40 = getelementptr %array, %array* %x, i32 0, i32 2
  %41 = load %dimension_descriptor*, %dimension_descriptor** %40, align 8
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, %44
  %48 = sub i32 %47, 1
  %49 = icmp sle i32 %39, %48
  br i1 %49, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %50 = load i32, i32* %__1_t, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %__1_t, align 4
  %52 = load i32, i32* %__1_t, align 4
  %53 = getelementptr %array, %array* %x, i32 0, i32 2
  %54 = load %dimension_descriptor*, %dimension_descriptor** %53, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sub i32 %52, %57
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = mul i32 %60, %58
  %62 = add i32 0, %61
  %63 = getelementptr %array, %array* %x, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %62, %64
  %66 = getelementptr %array, %array* %x, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds i32, i32* %67, i32 %65
  store i32 3, i32* %68, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %69 = getelementptr %array, %array* %x, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  store i32 1, i32* %call_arg_value, align 4
  store i32 3, i32* %call_arg_value1, align 4
  %71 = getelementptr %array, %array* %y, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  store i32 1, i32* %call_arg_value2, align 4
  store i32 3, i32* %call_arg_value3, align 4
  call void @f_x_y(i32* %70, i32* %call_arg_value, i32* %call_arg_value1, i32* %72, i32* %call_arg_value2, i32* %call_arg_value3)
  %73 = getelementptr %array, %array* %y, i32 0, i32 2
  %74 = load %dimension_descriptor*, %dimension_descriptor** %73, align 8
  %75 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %74, i32 0
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %77, 1
  store i32 %78, i32* %__1_k, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end
  %79 = load i32, i32* %__1_k, align 4
  %80 = add i32 %79, 1
  %81 = getelementptr %array, %array* %y, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, %85
  %89 = sub i32 %88, 1
  %90 = icmp sle i32 %80, %89
  br i1 %90, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %91 = load i32, i32* %__1_k, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %__1_k, align 4
  %93 = load i32, i32* %__1_k, align 4
  %94 = getelementptr %array, %array* %y, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 %93, %98
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 %101, %99
  %103 = add i32 0, %102
  %104 = getelementptr %array, %array* %y, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %103, %105
  %107 = getelementptr %array, %array* %y, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = getelementptr inbounds i32, i32* %108, i32 %106
  %110 = load i32, i32* %109, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_printf(i8*, ...)
