; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@"ERROR STOP" = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %ifcont5, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 10
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %j2, align 4
  %8 = load i32, i32* %i1, align 4
  %9 = add i32 %7, %8
  store i32 %9, i32* %j2, align 4
  %10 = load i32, i32* %i1, align 4
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %then, label %else

then:                                             ; preds = %loop.body
  br label %ifcont

else:                                             ; preds = %loop.body
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %12 = load i32, i32* %i1, align 4
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %then3, label %else4

then3:                                            ; preds = %ifcont
  br label %loop.end

unreachable_after_exit:                           ; No predecessors!
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %unreachable_after_exit
  br label %loop.head

loop.end:                                         ; preds = %then3, %loop.head
  %14 = load i32, i32* %j2, align 4
  %15 = icmp ne i32 %14, 3
  br i1 %15, label %then6, label %else7

then6:                                            ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %loop.end
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %16 = alloca i64, align 8
  %17 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i64* %16, i32 0, i32 0, i32* %j2)
  %18 = load i64, i64* %16, align 4
  %19 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %19 to %string_descriptor*
  %20 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %17, i8** %20, align 8
  %21 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %18, i64* %21, align 4
  %22 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %25 = load i64, i64* %24, align 4
  %26 = trunc i64 %25 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %23, i32 %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %ifcont14, %ifcont8
  %27 = load i32, i32* %i1, align 4
  %28 = add i32 %27, 1
  %29 = icmp sle i32 %28, 10
  br i1 %29, label %loop.body10, label %loop.end15

loop.body10:                                      ; preds = %loop.head9
  %30 = load i32, i32* %i1, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %i1, align 4
  %32 = load i32, i32* %i1, align 4
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %then11, label %else13

then11:                                           ; preds = %loop.body10
  br label %loop.end15

unreachable_after_exit12:                         ; No predecessors!
  br label %ifcont14

else13:                                           ; preds = %loop.body10
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %unreachable_after_exit12
  %34 = load i32, i32* %j2, align 4
  %35 = load i32, i32* %i1, align 4
  %36 = add i32 %34, %35
  store i32 %36, i32* %j2, align 4
  br label %loop.head9

loop.end15:                                       ; preds = %then11, %loop.head9
  %37 = load i32, i32* %j2, align 4
  %38 = icmp ne i32 %37, 1
  br i1 %38, label %then16, label %else17

then16:                                           ; preds = %loop.end15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %loop.end15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %39 = alloca i64, align 8
  %40 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i64* %39, i32 0, i32 0, i32* %j2)
  %41 = load i64, i64* %39, align 4
  %42 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc19 = bitcast i8* %42 to %string_descriptor*
  %43 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc19, i32 0, i32 0
  store i8* %40, i8** %43, align 8
  %44 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc19, i32 0, i32 1
  store i64 %41, i64* %44, align 4
  %45 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc19, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc19, i32 0, i32 1
  %48 = load i64, i64* %47, align 4
  %49 = trunc i64 %48 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %46, i32 %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head20

loop.head20:                                      ; preds = %ifcont24, %then22, %ifcont18
  %50 = load i32, i32* %i1, align 4
  %51 = add i32 %50, 1
  %52 = icmp sle i32 %51, 10
  br i1 %52, label %loop.body21, label %loop.end25

loop.body21:                                      ; preds = %loop.head20
  %53 = load i32, i32* %i1, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %i1, align 4
  %55 = load i32, i32* %i1, align 4
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %then22, label %else23

then22:                                           ; preds = %loop.body21
  br label %loop.head20

unreachable_after_cycle:                          ; No predecessors!
  br label %ifcont24

else23:                                           ; preds = %loop.body21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %unreachable_after_cycle
  %57 = load i32, i32* %j2, align 4
  %58 = load i32, i32* %i1, align 4
  %59 = add i32 %57, %58
  store i32 %59, i32* %j2, align 4
  br label %loop.head20

loop.end25:                                       ; preds = %loop.head20
  %60 = load i32, i32* %j2, align 4
  %61 = icmp ne i32 %60, 53
  br i1 %61, label %then26, label %else27

then26:                                           ; preds = %loop.end25
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont28

else27:                                           ; preds = %loop.end25
  br label %ifcont28

ifcont28:                                         ; preds = %else27, %then26
  %62 = alloca i64, align 8
  %63 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i64* %62, i32 0, i32 0, i32* %j2)
  %64 = load i64, i64* %62, align 4
  %65 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc29 = bitcast i8* %65 to %string_descriptor*
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc29, i32 0, i32 0
  store i8* %63, i8** %66, align 8
  %67 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc29, i32 0, i32 1
  store i64 %64, i64* %67, align 4
  %68 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc29, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc29, i32 0, i32 1
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %69, i32 %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont28
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()
