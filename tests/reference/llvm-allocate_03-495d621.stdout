; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@1 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@3 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@5 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@7 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@10 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@12 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@14 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@15 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@16 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@19 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@20 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@21 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@23 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@25 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@29 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@30 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@31 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@32 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@33 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@34 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@35 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@36 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@38 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@39 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@40 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@41 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@42 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@44 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.4 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.5 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.4, i32 0, i32 0), i64 10 }>
@string_const_data.6 = private constant [2 x i8] c"\0A\00"
@string_const.7 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.6, i32 0, i32 0), i64 1 }>
@45 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@47 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@48 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@49 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@50 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@51 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@52 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@53 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.8 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.9 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.8, i32 0, i32 0), i64 10 }>
@string_const_data.10 = private constant [2 x i8] c"\0A\00"
@string_const.11 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.10, i32 0, i32 0), i64 1 }>
@54 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@55 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.12 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@56 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@57 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@58 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@59 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@60 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@61 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@62 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@63 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@64 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@65 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@66 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@67 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@68 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@69 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@70 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@71 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@72 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.13 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.13, i32 0, i32 0), i64 10 }>
@string_const_data.15 = private constant [2 x i8] c"\0A\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.15, i32 0, i32 0), i64 1 }>
@73 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@74 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@75 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@76 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@77 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@78 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@79 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@80 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@81 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.17 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.17, i32 0, i32 0), i64 10 }>
@string_const_data.19 = private constant [2 x i8] c"\0A\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.19, i32 0, i32 0), i64 1 }>
@82 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@83 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@84 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@85 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@86 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@87 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@88 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@89 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@90 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@91 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@92 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@93 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@94 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@95 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@96 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@97 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@98 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.21 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.21, i32 0, i32 0), i64 10 }>
@string_const_data.23 = private constant [2 x i8] c"\0A\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.23, i32 0, i32 0), i64 1 }>
@99 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@100 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.25 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@101 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@102 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@103 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@104 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@105 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@106 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@107 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@108 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@109 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %c = alloca %array*, align 8
  store %array* null, %array** %c, align 8
  %arr_desc = alloca %array, align 8
  %2 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 3, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %5, i32 0, i32 1
  store i32 1, i32* %6, align 4
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %5, i32 0, i32 2
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %8 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 3, i32* %8, align 4
  %9 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %9, align 8
  store %array* %arr_desc, %array** %c, align 8
  %r1 = alloca i32, align 4
  %stat2 = alloca i32, align 4
  store i32 1, i32* %stat2, align 4
  %10 = load %array*, %array** %c, align 8
  %11 = ptrtoint %array* %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %then, label %else

then:                                             ; preds = %.entry
  %13 = alloca %array, align 8
  %14 = getelementptr %array, %array* %13, i32 0, i32 2
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = load i32, i32* %15, align 4
  %17 = alloca %dimension_descriptor, i32 %16, align 8
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  store i32 1, i32* %18, align 4
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  store i32 1, i32* %19, align 4
  store %dimension_descriptor* %17, %dimension_descriptor** %14, align 8
  %20 = getelementptr %array, %array* %13, i32 0, i32 4
  store i32 3, i32* %20, align 4
  store %array* %13, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %21 = load %array*, %array** %c, align 8
  %22 = getelementptr %array, %array* %21, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array, %array* %21, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 3, i32* %28, align 4
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 2
  store i32 3, i32* %30, align 4
  store i32 1, i32* %31, align 4
  store i32 3, i32* %32, align 4
  %33 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 2
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  store i32 9, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 3, i32* %36, align 4
  %37 = getelementptr %array, %array* %21, i32 0, i32 0
  %38 = alloca i32, align 4
  store i32 108, i32* %38, align 4
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = call i8* @_lfortran_malloc(i64 %40)
  %42 = bitcast i8* %41 to i32*
  store i32* %42, i32** %37, align 8
  store i32 0, i32* %stat2, align 4
  %43 = load i32, i32* %stat2, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %then3, label %else4

then3:                                            ; preds = %ifcont
  %45 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  %46 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @82, i32 0, i32 0), i8* %45, i8* %46)
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %47 = load %array*, %array** %c, align 8
  %48 = getelementptr %array, %array* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = ptrtoint i32* %49 to i64
  %51 = icmp ne i64 %50, 0
  %52 = xor i1 %51, true
  br i1 %52, label %then6, label %ifcont7

then6:                                            ; preds = %ifcont5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @84, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @83, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont7:                                          ; preds = %ifcont5
  %53 = getelementptr %array, %array* %47, i32 0, i32 2
  %54 = load %dimension_descriptor*, %dimension_descriptor** %53, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 1, %57
  %61 = add i32 %57, %59
  %62 = sub i32 %61, 1
  %63 = icmp slt i32 1, %57
  %64 = icmp sgt i32 1, %62
  %65 = or i1 %63, %64
  br i1 %65, label %then8, label %ifcont9

<<<<<<< HEAD
then8:                                            ; preds = %ifcont7
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @86, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @85, i32 0, i32 0), i32 1, i32 1, i32 %57, i32 %62)
  call void @exit(i32 1)
  unreachable

ifcont9:                                          ; preds = %ifcont7
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 %67, %60
  %69 = add i32 0, %68
  %70 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = sub i32 1, %72
  %76 = add i32 %72, %74
  %77 = sub i32 %76, 1
  %78 = icmp slt i32 1, %72
  %79 = icmp sgt i32 1, %77
  %80 = or i1 %78, %79
  br i1 %80, label %then10, label %ifcont11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @88, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @87, i32 0, i32 0), i32 1, i32 2, i32 %72, i32 %77)
  call void @exit(i32 1)
  unreachable

ifcont11:                                         ; preds = %ifcont9
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 %82, %75
  %84 = add i32 %69, %83
  %85 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 2
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 1, %87
  %91 = add i32 %87, %89
  %92 = sub i32 %91, 1
  %93 = icmp slt i32 1, %87
  %94 = icmp sgt i32 1, %92
  %95 = or i1 %93, %94
  br i1 %95, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @90, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @89, i32 0, i32 0), i32 1, i32 3, i32 %87, i32 %92)
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = mul i32 %97, %90
  %99 = add i32 %84, %98
  %100 = getelementptr %array, %array* %47, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %99, %101
  %103 = getelementptr %array, %array* %47, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds i32, i32* %104, i32 %102
  store i32 3, i32* %105, align 4
  %106 = load %array*, %array** %c, align 8
  %107 = getelementptr %array, %array* %106, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = ptrtoint i32* %108 to i64
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %then14, label %else15

then14:                                           ; preds = %ifcont13
  %111 = getelementptr %array, %array* %106, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = alloca i8*, align 8
  %114 = bitcast i32* %112 to i8*
  store i8* %114, i8** %113, align 8
  %115 = load i8*, i8** %113, align 8
  call void @_lfortran_free(i8* %115)
  %116 = getelementptr %array, %array* %106, i32 0, i32 0
  store i32* null, i32** %116, align 8
  br label %ifcont16

else15:                                           ; preds = %ifcont13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  call void @h(%array** %c)
  %117 = call i32 @g(%array** %c)
  store i32 %117, i32* %r1, align 4
  %118 = load %array*, %array** %c, align 8
  %119 = getelementptr %array, %array* %118, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = ptrtoint i32* %120 to i64
  %122 = icmp ne i64 %121, 0
  %123 = xor i1 %122, true
  br i1 %123, label %then17, label %ifcont18

then17:                                           ; preds = %ifcont16
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @92, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @91, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont18:                                         ; preds = %ifcont16
  %124 = getelementptr %array, %array* %118, i32 0, i32 2
  %125 = load %dimension_descriptor*, %dimension_descriptor** %124, align 8
  %126 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %125, i32 0
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 1, %128
  %132 = add i32 %128, %130
  %133 = sub i32 %132, 1
  %134 = icmp slt i32 1, %128
  %135 = icmp sgt i32 1, %133
  %136 = or i1 %134, %135
  br i1 %136, label %then19, label %ifcont20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @94, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @93, i32 0, i32 0), i32 1, i32 1, i32 %128, i32 %133)
  call void @exit(i32 1)
  unreachable

ifcont20:                                         ; preds = %ifcont18
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = mul i32 %138, %131
  %140 = add i32 0, %139
  %141 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %125, i32 1
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 2
  %145 = load i32, i32* %144, align 4
  %146 = sub i32 1, %143
  %147 = add i32 %143, %145
  %148 = sub i32 %147, 1
  %149 = icmp slt i32 1, %143
  %150 = icmp sgt i32 1, %148
  %151 = or i1 %149, %150
  br i1 %151, label %then21, label %ifcont22

then21:                                           ; preds = %ifcont20
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @95, i32 0, i32 0), i32 1, i32 2, i32 %143, i32 %148)
  call void @exit(i32 1)
  unreachable

ifcont22:                                         ; preds = %ifcont20
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = mul i32 %153, %146
  %155 = add i32 %140, %154
  %156 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %125, i32 2
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = sub i32 1, %158
  %162 = add i32 %158, %160
  %163 = sub i32 %162, 1
  %164 = icmp slt i32 1, %158
  %165 = icmp sgt i32 1, %163
  %166 = or i1 %164, %165
  br i1 %166, label %then23, label %ifcont24

then23:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @98, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @97, i32 0, i32 0), i32 1, i32 3, i32 %158, i32 %163)
  call void @exit(i32 1)
  unreachable

ifcont24:                                         ; preds = %ifcont22
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %156, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = mul i32 %168, %161
  %170 = add i32 %155, %169
  %171 = getelementptr %array, %array* %118, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = add i32 %170, %172
  %174 = getelementptr %array, %array* %118, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = getelementptr inbounds i32, i32* %175, i32 %173
  %177 = load i32, i32* %176, align 4
  %178 = icmp ne i32 %177, 8
  br i1 %178, label %then25, label %else26
=======
ifcont11:                                         ; preds = %else10, %then9
  %125 = load %array*, %array** %c, align 8
  %126 = getelementptr %array, %array* %125, i32 0, i32 2
  %127 = load %dimension_descriptor*, %dimension_descriptor** %126, align 8
  %128 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %127, i32 0
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 1, %130
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = mul i32 %133, %131
  %135 = add i32 0, %134
  %136 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %127, i32 1
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 1, %138
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = mul i32 %141, %139
  %143 = add i32 %135, %142
  %144 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %127, i32 2
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %144, i32 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = sub i32 1, %146
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %144, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = mul i32 %149, %147
  %151 = add i32 %143, %150
  %152 = getelementptr %array, %array* %125, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %151, %153
  %155 = getelementptr %array, %array* %125, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = getelementptr inbounds i32, i32* %156, i32 %154
  %158 = load i32, i32* %157, align 4
  %159 = alloca i32, align 4
  store i32 %158, i32* %159, align 4
  %160 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.25, i32 0, i32 0), i32 0, i32 0, i32* %159)
  %161 = call i64 @_lfortran_str_len(i8* %160)
  %162 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %162 to %string_descriptor*
  %163 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %160, i8** %163, align 8
  %164 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %161, i64* %164, align 4
  %165 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %168 = load i64, i64* %167, align 4
  %169 = trunc i64 %168 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %166, i32 %169, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i32 1)
  %170 = load %array*, %array** %c, align 8
  %171 = getelementptr %array, %array* %170, i32 0, i32 0
  %172 = load i32*, i32** %171, align 8
  %173 = ptrtoint i32* %172 to i64
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %then12, label %else13

then12:                                           ; preds = %ifcont11
  %175 = getelementptr %array, %array* %170, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = alloca i8*, align 8
  %178 = bitcast i32* %176 to i8*
  store i8* %178, i8** %177, align 8
  %179 = load i8*, i8** %177, align 8
  call void @_lfortran_free(i8* %179)
  %180 = getelementptr %array, %array* %170, i32 0, i32 0
  store i32* null, i32** %180, align 8
  br label %ifcont14
>>>>>>> 1eb14410d (tests: update references)

then25:                                           ; preds = %ifcont24
  %179 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  %180 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @99, i32 0, i32 0), i8* %179, i8* %180)
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %ifcont24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %181 = load %array*, %array** %c, align 8
  %182 = getelementptr %array, %array* %181, i32 0, i32 0
  %183 = load i32*, i32** %182, align 8
  %184 = ptrtoint i32* %183 to i64
  %185 = icmp ne i64 %184, 0
  %186 = xor i1 %185, true
  br i1 %186, label %then28, label %ifcont29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @102, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @101, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont29:                                         ; preds = %ifcont27
  %187 = getelementptr %array, %array* %181, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 1, %191
  %195 = add i32 %191, %193
  %196 = sub i32 %195, 1
  %197 = icmp slt i32 1, %191
  %198 = icmp sgt i32 1, %196
  %199 = or i1 %197, %198
  br i1 %199, label %then30, label %ifcont31

then30:                                           ; preds = %ifcont29
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @104, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @103, i32 0, i32 0), i32 1, i32 1, i32 %191, i32 %196)
  call void @exit(i32 1)
  unreachable

ifcont31:                                         ; preds = %ifcont29
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 %201, %194
  %203 = add i32 0, %202
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 1
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 2
  %208 = load i32, i32* %207, align 4
  %209 = sub i32 1, %206
  %210 = add i32 %206, %208
  %211 = sub i32 %210, 1
  %212 = icmp slt i32 1, %206
  %213 = icmp sgt i32 1, %211
  %214 = or i1 %212, %213
  br i1 %214, label %then32, label %ifcont33

then32:                                           ; preds = %ifcont31
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @105, i32 0, i32 0), i32 1, i32 2, i32 %206, i32 %211)
  call void @exit(i32 1)
  unreachable

ifcont33:                                         ; preds = %ifcont31
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %216, %209
  %218 = add i32 %203, %217
  %219 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 2
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = sub i32 1, %221
  %225 = add i32 %221, %223
  %226 = sub i32 %225, 1
  %227 = icmp slt i32 1, %221
  %228 = icmp sgt i32 1, %226
  %229 = or i1 %227, %228
  br i1 %229, label %then34, label %ifcont35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @108, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @107, i32 0, i32 0), i32 1, i32 3, i32 %221, i32 %226)
  call void @exit(i32 1)
  unreachable

ifcont35:                                         ; preds = %ifcont33
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 %231, %224
  %233 = add i32 %218, %232
  %234 = getelementptr %array, %array* %181, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = add i32 %233, %235
  %237 = getelementptr %array, %array* %181, i32 0, i32 0
  %238 = load i32*, i32** %237, align 8
  %239 = getelementptr inbounds i32, i32* %238, i32 %236
  %240 = load i32, i32* %239, align 4
  %241 = alloca i32, align 4
  store i32 %240, i32* %241, align 4
  %242 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.25, i32 0, i32 0), i32 0, i32 0, i32* %241)
  %243 = call i64 @_lfortran_str_len(i8* %242)
  %244 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %244 to %string_descriptor*
  %245 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %242, i8** %245, align 8
  %246 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %243, i64* %246, align 4
  %247 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %250 = load i64, i64* %249, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @109, i32 0, i32 0), i8* %248, i64 %250, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @100, i32 0, i32 0), i64 1)
  %251 = load %array*, %array** %c, align 8
  %252 = getelementptr %array, %array* %251, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = ptrtoint i32* %253 to i64
  %255 = icmp ne i64 %254, 0
  br i1 %255, label %then36, label %else37

then36:                                           ; preds = %ifcont35
  %256 = getelementptr %array, %array* %251, i32 0, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = alloca i8*, align 8
  %259 = bitcast i32* %257 to i8*
  store i8* %259, i8** %258, align 8
  %260 = load i8*, i8** %258, align 8
  call void @_lfortran_free(i8* %260)
  %261 = getelementptr %array, %array* %251, i32 0, i32 0
  store i32* null, i32** %261, align 8
  br label %ifcont38

else37:                                           ; preds = %ifcont35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont38
  ret i32 0
}

define void @f(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = ptrtoint %array* %0 to i32
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %then, label %else

then:                                             ; preds = %.entry
  %3 = alloca %array, align 8
  %4 = getelementptr %array, %array* %3, i32 0, i32 2
  %5 = alloca i32, align 4
  store i32 3, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = alloca %dimension_descriptor, i32 %6, align 8
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  store i32 1, i32* %8, align 4
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %9, align 4
  store %dimension_descriptor* %7, %dimension_descriptor** %4, align 8
  %10 = getelementptr %array, %array* %3, i32 0, i32 4
  store i32 3, i32* %10, align 4
  store %array* %3, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %11 = load %array*, %array** %c, align 8
  %12 = getelementptr %array, %array* %11, i32 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr %array, %array* %11, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 1
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  store i32 1, i32* %16, align 4
  store i32 1, i32* %17, align 4
  store i32 3, i32* %18, align 4
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 2
  store i32 3, i32* %20, align 4
  store i32 1, i32* %21, align 4
  store i32 3, i32* %22, align 4
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  store i32 9, i32* %24, align 4
  store i32 1, i32* %25, align 4
  store i32 3, i32* %26, align 4
  %27 = getelementptr %array, %array* %11, i32 0, i32 0
  %28 = alloca i32, align 4
  store i32 108, i32* %28, align 4
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = call i8* @_lfortran_malloc(i64 %30)
  %32 = bitcast i8* %31 to i32*
  store i32* %32, i32** %27, align 8
  %33 = load %array*, %array** %c, align 8
  %34 = getelementptr %array, %array* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = ptrtoint i32* %35 to i64
  %37 = icmp ne i64 %36, 0
  %38 = xor i1 %37, true
  br i1 %38, label %then1, label %ifcont2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont2:                                          ; preds = %ifcont
  %39 = getelementptr %array, %array* %33, i32 0, i32 2
  %40 = load %dimension_descriptor*, %dimension_descriptor** %39, align 8
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %43
  %47 = add i32 %43, %45
  %48 = sub i32 %47, 1
  %49 = icmp slt i32 1, %43
  %50 = icmp sgt i32 1, %48
  %51 = or i1 %49, %50
  br i1 %51, label %then3, label %ifcont4

then3:                                            ; preds = %ifcont2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1, i32 1, i32 %43, i32 %48)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %ifcont2
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 %53, %46
  %55 = add i32 0, %54
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 1, %58
  %62 = add i32 %58, %60
  %63 = sub i32 %62, 1
  %64 = icmp slt i32 1, %58
  %65 = icmp sgt i32 1, %63
  %66 = or i1 %64, %65
  br i1 %66, label %then5, label %ifcont6

then5:                                            ; preds = %ifcont4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1, i32 2, i32 %58, i32 %63)
  call void @exit(i32 1)
  unreachable

ifcont6:                                          ; preds = %ifcont4
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 %68, %61
  %70 = add i32 %55, %69
  %71 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 1, %73
  %77 = add i32 %73, %75
  %78 = sub i32 %77, 1
  %79 = icmp slt i32 1, %73
  %80 = icmp sgt i32 1, %78
  %81 = or i1 %79, %80
  br i1 %81, label %then7, label %ifcont8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1, i32 3, i32 %73, i32 %78)
  call void @exit(i32 1)
  unreachable

ifcont8:                                          ; preds = %ifcont6
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %83, %76
  %85 = add i32 %70, %84
  %86 = getelementptr %array, %array* %33, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %85, %87
  %89 = getelementptr %array, %array* %33, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds i32, i32* %90, i32 %88
  store i32 99, i32* %91, align 4
  br label %return

return:                                           ; preds = %ifcont8
  ret void
}

define i32 @g(%array** %x) {
.entry:
  %r = alloca i32, align 4
  %0 = load %array*, %array** %x, align 8
<<<<<<< HEAD
  %1 = getelementptr %array, %array* %0, i32 0, i32 0
  %2 = load i32*, i32** %1, align 8
  %3 = ptrtoint i32* %2 to i64
  %4 = icmp ne i64 %3, 0
  %5 = xor i1 %4, true
  br i1 %5, label %then, label %ifcont

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
=======
  %1 = getelementptr %array, %array* %0, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 1, %5
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = mul i32 %8, %6
  %10 = add i32 0, %9
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %13
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = mul i32 %16, %14
  %18 = add i32 %10, %17
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 1, %21
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = mul i32 %24, %22
  %26 = add i32 %18, %25
  %27 = getelementptr %array, %array* %0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %26, %28
  %30 = getelementptr %array, %array* %0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i32 %29
  %33 = load i32, i32* %32, align 4
  %34 = alloca i32, align 4
  store i32 %33, i32* %34, align 4
  %35 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, i32* %34)
  %36 = call i64 @_lfortran_str_len(i8* %35)
  %37 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %37 to %string_descriptor*
  %38 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %35, i8** %38, align 8
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %36, i64* %39, align 4
  %40 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %43 = load i64, i64* %42, align 4
  %44 = trunc i64 %43 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %41, i32 %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  %45 = load %array*, %array** %x, align 8
  %46 = getelementptr %array, %array* %45, i32 0, i32 2
  %47 = load %dimension_descriptor*, %dimension_descriptor** %46, align 8
  %48 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %47, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 1, %50
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 %53, %51
  %55 = add i32 0, %54
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %47, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sub i32 1, %58
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = mul i32 %61, %59
  %63 = add i32 %55, %62
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %47, i32 2
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 1, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %69, %67
  %71 = add i32 %63, %70
  %72 = getelementptr %array, %array* %45, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %71, %73
  %75 = getelementptr %array, %array* %45, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i32 %74
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %78, 8
  br i1 %79, label %then, label %else

then:                                             ; preds = %.entry
  %80 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %81 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %80, i8* %81)
>>>>>>> 1eb14410d (tests: update references)
  call void @exit(i32 1)
  unreachable

<<<<<<< HEAD
ifcont:                                           ; preds = %.entry
  %6 = getelementptr %array, %array* %0, i32 0, i32 2
  %7 = load %dimension_descriptor*, %dimension_descriptor** %6, align 8
  %8 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %7, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sub i32 1, %10
  %14 = add i32 %10, %12
  %15 = sub i32 %14, 1
  %16 = icmp slt i32 1, %10
  %17 = icmp sgt i32 1, %15
  %18 = or i1 %16, %17
  br i1 %18, label %then1, label %ifcont2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i32 1, i32 1, i32 %10, i32 %15)
=======
else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %82 = load %array*, %array** %x, align 8
  %83 = getelementptr %array, %array* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = ptrtoint i32* %84 to i64
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %87 = getelementptr %array, %array* %82, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = alloca i8*, align 8
  %90 = bitcast i32* %88 to i8*
  store i8* %90, i8** %89, align 8
  %91 = load i8*, i8** %89, align 8
  call void @_lfortran_free(i8* %91)
  %92 = getelementptr %array, %array* %82, i32 0, i32 0
  store i32* null, i32** %92, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @f(%array** %x)
  %93 = load %array*, %array** %x, align 8
  %94 = getelementptr %array, %array* %93, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 1, %98
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 %101, %99
  %103 = add i32 0, %102
  %104 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 1
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 1, %106
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %109, %107
  %111 = add i32 %103, %110
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 2
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 1, %114
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = mul i32 %117, %115
  %119 = add i32 %111, %118
  %120 = getelementptr %array, %array* %93, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %119, %121
  %123 = getelementptr %array, %array* %93, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = getelementptr inbounds i32, i32* %124, i32 %122
  %126 = load i32, i32* %125, align 4
  %127 = alloca i32, align 4
  store i32 %126, i32* %127, align 4
  %128 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i32 0, i32 0, i32* %127)
  %129 = call i64 @_lfortran_str_len(i8* %128)
  %130 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc4 = bitcast i8* %130 to %string_descriptor*
  %131 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  store i8* %128, i8** %131, align 8
  %132 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  store i64 %129, i64* %132, align 4
  %133 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  %136 = load i64, i64* %135, align 4
  %137 = trunc i64 %136 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %134, i32 %137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i32 1)
  %138 = load %array*, %array** %x, align 8
  %139 = getelementptr %array, %array* %138, i32 0, i32 2
  %140 = load %dimension_descriptor*, %dimension_descriptor** %139, align 8
  %141 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %140, i32 0
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = sub i32 1, %143
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %141, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = mul i32 %146, %144
  %148 = add i32 0, %147
  %149 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %140, i32 1
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 1, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 %154, %152
  %156 = add i32 %148, %155
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %140, i32 2
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 1, %159
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = mul i32 %162, %160
  %164 = add i32 %156, %163
  %165 = getelementptr %array, %array* %138, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %164, %166
  %168 = getelementptr %array, %array* %138, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = getelementptr inbounds i32, i32* %169, i32 %167
  %171 = load i32, i32* %170, align 4
  %172 = icmp ne i32 %171, 99
  br i1 %172, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  %173 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.5, i32 0, i32 0), align 8
  %174 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.7, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %173, i8* %174)
>>>>>>> 1eb14410d (tests: update references)
  call void @exit(i32 1)
  unreachable

ifcont2:                                          ; preds = %ifcont
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = mul i32 %20, %13
  %22 = add i32 0, %21
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %7, i32 1
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 1, %25
  %29 = add i32 %25, %27
  %30 = sub i32 %29, 1
  %31 = icmp slt i32 1, %25
  %32 = icmp sgt i32 1, %30
  %33 = or i1 %31, %32
  br i1 %33, label %then3, label %ifcont4

<<<<<<< HEAD
then3:                                            ; preds = %ifcont2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 1, i32 2, i32 %25, i32 %30)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %ifcont2
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = mul i32 %35, %28
  %37 = add i32 %22, %36
  %38 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %7, i32 2
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 1, %40
  %44 = add i32 %40, %42
  %45 = sub i32 %44, 1
  %46 = icmp slt i32 1, %40
  %47 = icmp sgt i32 1, %45
  %48 = or i1 %46, %47
  br i1 %48, label %then5, label %ifcont6

then5:                                            ; preds = %ifcont4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i32 0, i32 0), i32 1, i32 3, i32 %40, i32 %45)
  call void @exit(i32 1)
  unreachable

ifcont6:                                          ; preds = %ifcont4
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 %50, %43
  %52 = add i32 %37, %51
  %53 = getelementptr %array, %array* %0, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %52, %54
  %56 = getelementptr %array, %array* %0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds i32, i32* %57, i32 %55
  %59 = load i32, i32* %58, align 4
  %60 = alloca i32, align 4
  store i32 %59, i32* %60, align 4
  %61 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, i32* %60)
  %62 = call i64 @_lfortran_str_len(i8* %61)
  %63 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %63 to %string_descriptor*
  %64 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %61, i8** %64, align 8
  %65 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %62, i64* %65, align 4
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %69 = load i64, i64* %68, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* %67, i64 %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i64 1)
  %70 = load %array*, %array** %x, align 8
  %71 = getelementptr %array, %array* %70, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp ne i64 %73, 0
  %75 = xor i1 %74, true
  br i1 %75, label %then7, label %ifcont8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @18, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont8:                                          ; preds = %ifcont6
  %76 = getelementptr %array, %array* %70, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 1, %80
  %84 = add i32 %80, %82
  %85 = sub i32 %84, 1
  %86 = icmp slt i32 1, %80
  %87 = icmp sgt i32 1, %85
  %88 = or i1 %86, %87
  br i1 %88, label %then9, label %ifcont10

then9:                                            ; preds = %ifcont8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @20, i32 0, i32 0), i32 1, i32 1, i32 %80, i32 %85)
  call void @exit(i32 1)
  unreachable

ifcont10:                                         ; preds = %ifcont8
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = mul i32 %90, %83
  %92 = add i32 0, %91
  %93 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 1
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 1, %95
  %99 = add i32 %95, %97
  %100 = sub i32 %99, 1
  %101 = icmp slt i32 1, %95
  %102 = icmp sgt i32 1, %100
  %103 = or i1 %101, %102
  br i1 %103, label %then11, label %ifcont12

then11:                                           ; preds = %ifcont10
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i32 1, i32 2, i32 %95, i32 %100)
  call void @exit(i32 1)
  unreachable

ifcont12:                                         ; preds = %ifcont10
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = mul i32 %105, %98
  %107 = add i32 %92, %106
  %108 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 2
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 1, %110
  %114 = add i32 %110, %112
  %115 = sub i32 %114, 1
  %116 = icmp slt i32 1, %110
  %117 = icmp sgt i32 1, %115
  %118 = or i1 %116, %117
  br i1 %118, label %then13, label %ifcont14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0), i32 1, i32 3, i32 %110, i32 %115)
  call void @exit(i32 1)
  unreachable

ifcont14:                                         ; preds = %ifcont12
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = mul i32 %120, %113
  %122 = add i32 %107, %121
  %123 = getelementptr %array, %array* %70, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %122, %124
  %126 = getelementptr %array, %array* %70, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = getelementptr inbounds i32, i32* %127, i32 %125
  %129 = load i32, i32* %128, align 4
  %130 = icmp ne i32 %129, 8
  br i1 %130, label %then15, label %else

then15:                                           ; preds = %ifcont14
  %131 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %132 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* %131, i8* %132)
  call void @exit(i32 1)
  br label %ifcont16

else:                                             ; preds = %ifcont14
  br label %ifcont16

ifcont16:                                         ; preds = %else, %then15
  %133 = load %array*, %array** %x, align 8
  %134 = getelementptr %array, %array* %133, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = ptrtoint i32* %135 to i64
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %then17, label %else18

then17:                                           ; preds = %ifcont16
  %138 = getelementptr %array, %array* %133, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = alloca i8*, align 8
  %141 = bitcast i32* %139 to i8*
  store i8* %141, i8** %140, align 8
  %142 = load i8*, i8** %140, align 8
  call void @_lfortran_free(i8* %142)
  %143 = getelementptr %array, %array* %133, i32 0, i32 0
  store i32* null, i32** %143, align 8
  br label %ifcont19

else18:                                           ; preds = %ifcont16
  br label %ifcont19

ifcont19:                                         ; preds = %else18, %then17
  call void @f(%array** %x)
  %144 = load %array*, %array** %x, align 8
  %145 = getelementptr %array, %array* %144, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = ptrtoint i32* %146 to i64
  %148 = icmp ne i64 %147, 0
  %149 = xor i1 %148, true
  br i1 %149, label %then20, label %ifcont21

then20:                                           ; preds = %ifcont19
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont21:                                         ; preds = %ifcont19
  %150 = getelementptr %array, %array* %144, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 1, %154
  %158 = add i32 %154, %156
  %159 = sub i32 %158, 1
  %160 = icmp slt i32 1, %154
  %161 = icmp sgt i32 1, %159
  %162 = or i1 %160, %161
  br i1 %162, label %then22, label %ifcont23

then22:                                           ; preds = %ifcont21
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 1, i32 1, i32 %154, i32 %159)
  call void @exit(i32 1)
  unreachable

ifcont23:                                         ; preds = %ifcont21
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 %164, %157
  %166 = add i32 0, %165
  %167 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 1
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = sub i32 1, %169
  %173 = add i32 %169, %171
  %174 = sub i32 %173, 1
  %175 = icmp slt i32 1, %169
  %176 = icmp sgt i32 1, %174
  %177 = or i1 %175, %176
  br i1 %177, label %then24, label %ifcont25

then24:                                           ; preds = %ifcont23
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @32, i32 0, i32 0), i32 1, i32 2, i32 %169, i32 %174)
  call void @exit(i32 1)
  unreachable

ifcont25:                                         ; preds = %ifcont23
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 %179, %172
  %181 = add i32 %166, %180
  %182 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 2
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 1, %184
  %188 = add i32 %184, %186
  %189 = sub i32 %188, 1
  %190 = icmp slt i32 1, %184
  %191 = icmp sgt i32 1, %189
  %192 = or i1 %190, %191
  br i1 %192, label %then26, label %ifcont27

then26:                                           ; preds = %ifcont25
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0), i32 1, i32 3, i32 %184, i32 %189)
  call void @exit(i32 1)
  unreachable

ifcont27:                                         ; preds = %ifcont25
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 %194, %187
  %196 = add i32 %181, %195
  %197 = getelementptr %array, %array* %144, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = add i32 %196, %198
  %200 = getelementptr %array, %array* %144, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = getelementptr inbounds i32, i32* %201, i32 %199
  %203 = load i32, i32* %202, align 4
  %204 = alloca i32, align 4
  store i32 %203, i32* %204, align 4
  %205 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i32 0, i32 0, i32* %204)
  %206 = call i64 @_lfortran_str_len(i8* %205)
  %207 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc28 = bitcast i8* %207 to %string_descriptor*
  %208 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 0
  store i8* %205, i8** %208, align 8
  %209 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 1
  store i64 %206, i64* %209, align 4
  %210 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 1
  %213 = load i64, i64* %212, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @36, i32 0, i32 0), i8* %211, i64 %213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @27, i32 0, i32 0), i64 1)
  %214 = load %array*, %array** %x, align 8
  %215 = getelementptr %array, %array* %214, i32 0, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = ptrtoint i32* %216 to i64
  %218 = icmp ne i64 %217, 0
  %219 = xor i1 %218, true
  br i1 %219, label %then29, label %ifcont30

then29:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont30:                                         ; preds = %ifcont27
  %220 = getelementptr %array, %array* %214, i32 0, i32 2
  %221 = load %dimension_descriptor*, %dimension_descriptor** %220, align 8
  %222 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %221, i32 0
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 1, %224
  %228 = add i32 %224, %226
  %229 = sub i32 %228, 1
  %230 = icmp slt i32 1, %224
  %231 = icmp sgt i32 1, %229
  %232 = or i1 %230, %231
  br i1 %232, label %then31, label %ifcont32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @39, i32 0, i32 0), i32 1, i32 1, i32 %224, i32 %229)
  call void @exit(i32 1)
  unreachable

ifcont32:                                         ; preds = %ifcont30
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = mul i32 %234, %227
  %236 = add i32 0, %235
  %237 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %221, i32 1
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %237, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr %dimension_descriptor, %dimension_descriptor* %237, i32 0, i32 2
  %241 = load i32, i32* %240, align 4
  %242 = sub i32 1, %239
  %243 = add i32 %239, %241
  %244 = sub i32 %243, 1
  %245 = icmp slt i32 1, %239
  %246 = icmp sgt i32 1, %244
  %247 = or i1 %245, %246
  br i1 %247, label %then33, label %ifcont34

then33:                                           ; preds = %ifcont32
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @41, i32 0, i32 0), i32 1, i32 2, i32 %239, i32 %244)
  call void @exit(i32 1)
  unreachable

ifcont34:                                         ; preds = %ifcont32
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %237, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 %249, %242
  %251 = add i32 %236, %250
  %252 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %221, i32 2
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 2
  %256 = load i32, i32* %255, align 4
  %257 = sub i32 1, %254
  %258 = add i32 %254, %256
  %259 = sub i32 %258, 1
  %260 = icmp slt i32 1, %254
  %261 = icmp sgt i32 1, %259
  %262 = or i1 %260, %261
  br i1 %262, label %then35, label %ifcont36

then35:                                           ; preds = %ifcont34
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0), i32 1, i32 3, i32 %254, i32 %259)
  call void @exit(i32 1)
  unreachable

ifcont36:                                         ; preds = %ifcont34
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = mul i32 %264, %257
  %266 = add i32 %251, %265
  %267 = getelementptr %array, %array* %214, i32 0, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = add i32 %266, %268
  %270 = getelementptr %array, %array* %214, i32 0, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = getelementptr inbounds i32, i32* %271, i32 %269
  %273 = load i32, i32* %272, align 4
  %274 = icmp ne i32 %273, 99
  br i1 %274, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  %275 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.5, i32 0, i32 0), align 8
  %276 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.7, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @45, i32 0, i32 0), i8* %275, i8* %276)
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  %277 = load %array*, %array** %x, align 8
  %278 = getelementptr %array, %array* %277, i32 0, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = ptrtoint i32* %279 to i64
  %281 = icmp ne i64 %280, 0
  %282 = xor i1 %281, true
  br i1 %282, label %then40, label %ifcont41

then40:                                           ; preds = %ifcont39
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont41:                                         ; preds = %ifcont39
  %283 = getelementptr %array, %array* %277, i32 0, i32 2
  %284 = load %dimension_descriptor*, %dimension_descriptor** %283, align 8
  %285 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %284, i32 0
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 2
  %289 = load i32, i32* %288, align 4
  %290 = sub i32 1, %287
  %291 = add i32 %287, %289
  %292 = sub i32 %291, 1
  %293 = icmp slt i32 1, %287
  %294 = icmp sgt i32 1, %292
  %295 = or i1 %293, %294
  br i1 %295, label %then42, label %ifcont43

then42:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0), i32 1, i32 1, i32 %287, i32 %292)
  call void @exit(i32 1)
  unreachable

ifcont43:                                         ; preds = %ifcont41
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = mul i32 %297, %290
  %299 = add i32 0, %298
  %300 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %284, i32 1
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = sub i32 1, %302
  %306 = add i32 %302, %304
  %307 = sub i32 %306, 1
  %308 = icmp slt i32 1, %302
  %309 = icmp sgt i32 1, %307
  %310 = or i1 %308, %309
  br i1 %310, label %then44, label %ifcont45

then44:                                           ; preds = %ifcont43
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @50, i32 0, i32 0), i32 1, i32 2, i32 %302, i32 %307)
  call void @exit(i32 1)
  unreachable

ifcont45:                                         ; preds = %ifcont43
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = mul i32 %312, %305
  %314 = add i32 %299, %313
  %315 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %284, i32 2
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 2
  %319 = load i32, i32* %318, align 4
  %320 = sub i32 1, %317
  %321 = add i32 %317, %319
  %322 = sub i32 %321, 1
  %323 = icmp slt i32 1, %317
  %324 = icmp sgt i32 1, %322
  %325 = or i1 %323, %324
  br i1 %325, label %then46, label %ifcont47

then46:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @53, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i32 0, i32 0), i32 1, i32 3, i32 %317, i32 %322)
  call void @exit(i32 1)
  unreachable

ifcont47:                                         ; preds = %ifcont45
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 0
  %327 = load i32, i32* %326, align 4
  %328 = mul i32 %327, %320
  %329 = add i32 %314, %328
  %330 = getelementptr %array, %array* %277, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = add i32 %329, %331
  %333 = getelementptr %array, %array* %277, i32 0, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = getelementptr inbounds i32, i32* %334, i32 %332
  store i32 8, i32* %335, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %ifcont47
  %336 = load i32, i32* %r, align 4
  ret i32 %336
=======
ifcont7:                                          ; preds = %else6, %then5
  %175 = load %array*, %array** %x, align 8
  %176 = getelementptr %array, %array* %175, i32 0, i32 2
  %177 = load %dimension_descriptor*, %dimension_descriptor** %176, align 8
  %178 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %177, i32 0
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = sub i32 1, %180
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = mul i32 %183, %181
  %185 = add i32 0, %184
  %186 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %177, i32 1
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = sub i32 1, %188
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = mul i32 %191, %189
  %193 = add i32 %185, %192
  %194 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %177, i32 2
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sub i32 1, %196
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = mul i32 %199, %197
  %201 = add i32 %193, %200
  %202 = getelementptr %array, %array* %175, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = add i32 %201, %203
  %205 = getelementptr %array, %array* %175, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = getelementptr inbounds i32, i32* %206, i32 %204
  store i32 8, i32* %207, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %ifcont7
  %208 = load i32, i32* %r, align 4
  ret i32 %208
>>>>>>> 1eb14410d (tests: update references)
}

define void @h(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = load %array*, %array** %c, align 8
  %2 = getelementptr %array, %array* %1, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = ptrtoint i32* %3 to i64
  %5 = icmp ne i64 %4, 0
  br i1 %5, label %then, label %else

then:                                             ; preds = %.entry
  %6 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.9, i32 0, i32 0), align 8
  %7 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.11, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @54, i32 0, i32 0), i8* %6, i8* %7)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %8 = load %array*, %array** %c, align 8
  %9 = getelementptr %array, %array* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = ptrtoint i32* %10 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %13 = getelementptr %array, %array* %8, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = alloca i8*, align 8
  %16 = bitcast i32* %14 to i8*
  store i8* %16, i8** %15, align 8
  %17 = load i8*, i8** %15, align 8
  call void @_lfortran_free(i8* %17)
  %18 = getelementptr %array, %array* %8, i32 0, i32 0
  store i32* null, i32** %18, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @f(%array** %c)
  %19 = load %array*, %array** %c, align 8
<<<<<<< HEAD
  %20 = getelementptr %array, %array* %19, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = ptrtoint i32* %21 to i64
  %23 = icmp ne i64 %22, 0
  %24 = xor i1 %23, true
  br i1 %24, label %then4, label %ifcont5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @57, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @56, i32 0, i32 0))
=======
  %20 = getelementptr %array, %array* %19, i32 0, i32 2
  %21 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 1, %24
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = mul i32 %27, %25
  %29 = add i32 0, %28
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 1
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub i32 1, %32
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = mul i32 %35, %33
  %37 = add i32 %29, %36
  %38 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 2
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sub i32 1, %40
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 %43, %41
  %45 = add i32 %37, %44
  %46 = getelementptr %array, %array* %19, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %45, %47
  %49 = getelementptr %array, %array* %19, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds i32, i32* %50, i32 %48
  %52 = load i32, i32* %51, align 4
  %53 = alloca i32, align 4
  store i32 %52, i32* %53, align 4
  %54 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.12, i32 0, i32 0), i32 0, i32 0, i32* %53)
  %55 = call i64 @_lfortran_str_len(i8* %54)
  %56 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %56 to %string_descriptor*
  %57 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %54, i8** %57, align 8
  %58 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %55, i64* %58, align 4
  %59 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %62 = load i64, i64* %61, align 4
  %63 = trunc i64 %62 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %60, i32 %63, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i32 1)
  %64 = load %array*, %array** %c, align 8
  %65 = getelementptr %array, %array* %64, i32 0, i32 2
  %66 = load %dimension_descriptor*, %dimension_descriptor** %65, align 8
  %67 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %66, i32 0
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 1, %69
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = mul i32 %72, %70
  %74 = add i32 0, %73
  %75 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %66, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 1, %77
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = mul i32 %80, %78
  %82 = add i32 %74, %81
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %66, i32 2
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sub i32 1, %85
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = mul i32 %88, %86
  %90 = add i32 %82, %89
  %91 = getelementptr %array, %array* %64, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %90, %92
  %94 = getelementptr %array, %array* %64, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = getelementptr inbounds i32, i32* %95, i32 %93
  %97 = load i32, i32* %96, align 4
  %98 = icmp ne i32 %97, 99
  br i1 %98, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  %99 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  %100 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %99, i8* %100)
>>>>>>> 1eb14410d (tests: update references)
  call void @exit(i32 1)
  unreachable

ifcont5:                                          ; preds = %ifcont3
  %25 = getelementptr %array, %array* %19, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = sub i32 1, %29
  %33 = add i32 %29, %31
  %34 = sub i32 %33, 1
  %35 = icmp slt i32 1, %29
  %36 = icmp sgt i32 1, %34
  %37 = or i1 %35, %36
  br i1 %37, label %then6, label %ifcont7

<<<<<<< HEAD
then6:                                            ; preds = %ifcont5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0), i32 1, i32 1, i32 %29, i32 %34)
  call void @exit(i32 1)
  unreachable

ifcont7:                                          ; preds = %ifcont5
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = mul i32 %39, %32
  %41 = add i32 0, %40
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 1, %44
  %48 = add i32 %44, %46
  %49 = sub i32 %48, 1
  %50 = icmp slt i32 1, %44
  %51 = icmp sgt i32 1, %49
  %52 = or i1 %50, %51
  br i1 %52, label %then8, label %ifcont9

then8:                                            ; preds = %ifcont7
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @61, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @60, i32 0, i32 0), i32 1, i32 2, i32 %44, i32 %49)
  call void @exit(i32 1)
  unreachable

ifcont9:                                          ; preds = %ifcont7
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = mul i32 %54, %47
  %56 = add i32 %41, %55
  %57 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 2
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 1, %59
  %63 = add i32 %59, %61
  %64 = sub i32 %63, 1
  %65 = icmp slt i32 1, %59
  %66 = icmp sgt i32 1, %64
  %67 = or i1 %65, %66
  br i1 %67, label %then10, label %ifcont11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @62, i32 0, i32 0), i32 1, i32 3, i32 %59, i32 %64)
  call void @exit(i32 1)
  unreachable

ifcont11:                                         ; preds = %ifcont9
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %69, %62
  %71 = add i32 %56, %70
  %72 = getelementptr %array, %array* %19, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %71, %73
  %75 = getelementptr %array, %array* %19, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i32 %74
  %78 = load i32, i32* %77, align 4
  %79 = alloca i32, align 4
  store i32 %78, i32* %79, align 4
  %80 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.12, i32 0, i32 0), i32 0, i32 0, i32* %79)
  %81 = call i64 @_lfortran_str_len(i8* %80)
  %82 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %82 to %string_descriptor*
  %83 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %80, i8** %83, align 8
  %84 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %81, i64* %84, align 4
  %85 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %88 = load i64, i64* %87, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @64, i32 0, i32 0), i8* %86, i64 %88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @55, i32 0, i32 0), i64 1)
  %89 = load %array*, %array** %c, align 8
  %90 = getelementptr %array, %array* %89, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = ptrtoint i32* %91 to i64
  %93 = icmp ne i64 %92, 0
  %94 = xor i1 %93, true
  br i1 %94, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @66, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @65, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %95 = getelementptr %array, %array* %89, i32 0, i32 2
  %96 = load %dimension_descriptor*, %dimension_descriptor** %95, align 8
  %97 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %96, i32 0
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %97, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %97, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 1, %99
  %103 = add i32 %99, %101
  %104 = sub i32 %103, 1
  %105 = icmp slt i32 1, %99
  %106 = icmp sgt i32 1, %104
  %107 = or i1 %105, %106
  br i1 %107, label %then14, label %ifcont15

then14:                                           ; preds = %ifcont13
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @68, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @67, i32 0, i32 0), i32 1, i32 1, i32 %99, i32 %104)
  call void @exit(i32 1)
  unreachable

ifcont15:                                         ; preds = %ifcont13
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %97, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %109, %102
  %111 = add i32 0, %110
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %96, i32 1
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = sub i32 1, %114
  %118 = add i32 %114, %116
  %119 = sub i32 %118, 1
  %120 = icmp slt i32 1, %114
  %121 = icmp sgt i32 1, %119
  %122 = or i1 %120, %121
  br i1 %122, label %then16, label %ifcont17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @69, i32 0, i32 0), i32 1, i32 2, i32 %114, i32 %119)
  call void @exit(i32 1)
  unreachable

ifcont17:                                         ; preds = %ifcont15
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = mul i32 %124, %117
  %126 = add i32 %111, %125
  %127 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %96, i32 2
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = sub i32 1, %129
  %133 = add i32 %129, %131
  %134 = sub i32 %133, 1
  %135 = icmp slt i32 1, %129
  %136 = icmp sgt i32 1, %134
  %137 = or i1 %135, %136
  br i1 %137, label %then18, label %ifcont19

then18:                                           ; preds = %ifcont17
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @72, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @71, i32 0, i32 0), i32 1, i32 3, i32 %129, i32 %134)
  call void @exit(i32 1)
  unreachable

ifcont19:                                         ; preds = %ifcont17
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = mul i32 %139, %132
  %141 = add i32 %126, %140
  %142 = getelementptr %array, %array* %89, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = add i32 %141, %143
  %145 = getelementptr %array, %array* %89, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = getelementptr inbounds i32, i32* %146, i32 %144
  %148 = load i32, i32* %147, align 4
  %149 = icmp ne i32 %148, 99
  br i1 %149, label %then20, label %else21

then20:                                           ; preds = %ifcont19
  %150 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  %151 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @73, i32 0, i32 0), i8* %150, i8* %151)
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont19
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %152 = load %array*, %array** %c, align 8
  %153 = getelementptr %array, %array* %152, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = ptrtoint i32* %154 to i64
  %156 = icmp ne i64 %155, 0
  %157 = xor i1 %156, true
  br i1 %157, label %then23, label %ifcont24

then23:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont24:                                         ; preds = %ifcont22
  %158 = getelementptr %array, %array* %152, i32 0, i32 2
  %159 = load %dimension_descriptor*, %dimension_descriptor** %158, align 8
  %160 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 0
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 1, %162
  %166 = add i32 %162, %164
  %167 = sub i32 %166, 1
  %168 = icmp slt i32 1, %162
  %169 = icmp sgt i32 1, %167
  %170 = or i1 %168, %169
  br i1 %170, label %then25, label %ifcont26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @76, i32 0, i32 0), i32 1, i32 1, i32 %162, i32 %167)
  call void @exit(i32 1)
  unreachable

ifcont26:                                         ; preds = %ifcont24
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = mul i32 %172, %165
  %174 = add i32 0, %173
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 1
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = sub i32 1, %177
  %181 = add i32 %177, %179
  %182 = sub i32 %181, 1
  %183 = icmp slt i32 1, %177
  %184 = icmp sgt i32 1, %182
  %185 = or i1 %183, %184
  br i1 %185, label %then27, label %ifcont28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @78, i32 0, i32 0), i32 1, i32 2, i32 %177, i32 %182)
  call void @exit(i32 1)
  unreachable

ifcont28:                                         ; preds = %ifcont26
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = mul i32 %187, %180
  %189 = add i32 %174, %188
  %190 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 2
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = sub i32 1, %192
  %196 = add i32 %192, %194
  %197 = sub i32 %196, 1
  %198 = icmp slt i32 1, %192
  %199 = icmp sgt i32 1, %197
  %200 = or i1 %198, %199
  br i1 %200, label %then29, label %ifcont30

then29:                                           ; preds = %ifcont28
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @81, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @80, i32 0, i32 0), i32 1, i32 3, i32 %192, i32 %197)
  call void @exit(i32 1)
  unreachable

ifcont30:                                         ; preds = %ifcont28
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = mul i32 %202, %195
  %204 = add i32 %189, %203
  %205 = getelementptr %array, %array* %152, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = add i32 %204, %206
  %208 = getelementptr %array, %array* %152, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = getelementptr inbounds i32, i32* %209, i32 %207
  store i32 8, i32* %210, align 4
=======
ifcont6:                                          ; preds = %else5, %then4
  %101 = load %array*, %array** %c, align 8
  %102 = getelementptr %array, %array* %101, i32 0, i32 2
  %103 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  %104 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 1, %106
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %109, %107
  %111 = add i32 0, %110
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 1
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 1, %114
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = mul i32 %117, %115
  %119 = add i32 %111, %118
  %120 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 2
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = sub i32 1, %122
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 %125, %123
  %127 = add i32 %119, %126
  %128 = getelementptr %array, %array* %101, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %127, %129
  %131 = getelementptr %array, %array* %101, i32 0, i32 0
  %132 = load i32*, i32** %131, align 8
  %133 = getelementptr inbounds i32, i32* %132, i32 %130
  store i32 8, i32* %133, align 4
>>>>>>> 1eb14410d (tests: update references)
  br label %return

return:                                           ; preds = %ifcont30
  ret void
}

declare i8* @_lfortran_malloc(i64)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lfortran_free(i8*)

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lpython_free_argv()
