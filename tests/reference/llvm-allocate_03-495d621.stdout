; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@3 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@9 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@18 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@21 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1

define void @f(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 1
  store i32 0, i32* %1, align 4
  %2 = getelementptr %array, %array* %0, i32 0, i32 2
  %3 = load %dimension_descriptor*, %dimension_descriptor** %2, align 8
  %4 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 0
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 0
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 1
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %4, i32 0, i32 2
  store i32 1, i32* %5, align 4
  store i32 1, i32* %6, align 4
  store i32 3, i32* %7, align 4
  %8 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 1
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 2
  store i32 3, i32* %9, align 4
  store i32 1, i32* %10, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %3, i32 2
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  store i32 9, i32* %13, align 4
  store i32 1, i32* %14, align 4
  store i32 3, i32* %15, align 4
  %16 = getelementptr %array, %array* %0, i32 0, i32 0
  %17 = alloca i32, align 4
  store i32 108, i32* %17, align 4
  %18 = load i32, i32* %17, align 4
  %19 = call i8* (i32, ...) @_lfortran_malloc(i32 %18)
  %20 = bitcast i8* %19 to i32*
  store i32* %20, i32** %16, align 8
  %21 = load %array*, %array** %c, align 8
  %22 = getelementptr %array, %array* %21, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 1, %26
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = mul i32 %29, %27
  %31 = add i32 0, %30
  %32 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 1
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub i32 1, %34
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = mul i32 %37, %35
  %39 = add i32 %31, %38
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 2
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 1, %42
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = mul i32 %45, %43
  %47 = add i32 %39, %46
  %48 = getelementptr %array, %array* %21, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %47, %49
  %51 = getelementptr %array, %array* %21, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = getelementptr inbounds i32, i32* %52, i32 %50
  store i32 99, i32* %53, align 4
  br label %return

return:                                           ; preds = %.entry
  ret void
}

define i32 @g(%array** %x) {
.entry:
  %r = alloca i32, align 4
  %0 = load %array*, %array** %x, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 1, %5
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = mul i32 %8, %6
  %10 = add i32 0, %9
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %13
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = mul i32 %16, %14
  %18 = add i32 %10, %17
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 1, %21
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = mul i32 %24, %22
  %26 = add i32 %18, %25
  %27 = getelementptr %array, %array* %0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %26, %28
  %30 = getelementptr %array, %array* %0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i32 %29
  %33 = load i32, i32* %32, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  %34 = load %array*, %array** %x, align 8
  %35 = getelementptr %array, %array* %34, i32 0, i32 2
  %36 = load %dimension_descriptor*, %dimension_descriptor** %35, align 8
  %37 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %36, i32 0
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = sub i32 1, %39
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = mul i32 %42, %40
  %44 = add i32 0, %43
  %45 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %36, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 1, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 %50, %48
  %52 = add i32 %44, %51
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %36, i32 2
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 1, %55
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = mul i32 %58, %56
  %60 = add i32 %52, %59
  %61 = getelementptr %array, %array* %34, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %60, %62
  %64 = getelementptr %array, %array* %34, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = getelementptr inbounds i32, i32* %65, i32 %63
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 8
  br i1 %68, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %69 = load %array*, %array** %x, align 8
  %70 = getelementptr %array, %array* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = ptrtoint i32* %71 to i64
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %74 = getelementptr %array, %array* %69, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = alloca i8*, align 8
  %77 = bitcast i32* %75 to i8*
  store i8* %77, i8** %76, align 8
  %78 = load i8*, i8** %76, align 8
  call void (i8*, ...) @_lfortran_free(i8* %78)
  %79 = getelementptr %array, %array* %69, i32 0, i32 0
  store i32* null, i32** %79, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @f(%array** %x)
  %80 = load %array*, %array** %x, align 8
  %81 = getelementptr %array, %array* %80, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sub i32 1, %85
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = mul i32 %88, %86
  %90 = add i32 0, %89
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 1
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub i32 1, %93
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = mul i32 %96, %94
  %98 = add i32 %90, %97
  %99 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 2
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 1, %101
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = mul i32 %104, %102
  %106 = add i32 %98, %105
  %107 = getelementptr %array, %array* %80, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %106, %108
  %110 = getelementptr %array, %array* %80, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds i32, i32* %111, i32 %109
  %113 = load i32, i32* %112, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i32 %113, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %114 = load %array*, %array** %x, align 8
  %115 = getelementptr %array, %array* %114, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sub i32 1, %119
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = mul i32 %122, %120
  %124 = add i32 0, %123
  %125 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 1
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = sub i32 1, %127
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = mul i32 %130, %128
  %132 = add i32 %124, %131
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 2
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 1, %135
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = mul i32 %138, %136
  %140 = add i32 %132, %139
  %141 = getelementptr %array, %array* %114, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %140, %142
  %144 = getelementptr %array, %array* %114, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = getelementptr inbounds i32, i32* %145, i32 %143
  %147 = load i32, i32* %146, align 4
  %148 = icmp ne i32 %147, 99
  br i1 %148, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %149 = load %array*, %array** %x, align 8
  %150 = getelementptr %array, %array* %149, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 1, %154
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = mul i32 %157, %155
  %159 = add i32 0, %158
  %160 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 1
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = sub i32 1, %162
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = mul i32 %165, %163
  %167 = add i32 %159, %166
  %168 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 2
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = sub i32 1, %170
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = mul i32 %173, %171
  %175 = add i32 %167, %174
  %176 = getelementptr %array, %array* %149, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %175, %177
  %179 = getelementptr %array, %array* %149, i32 0, i32 0
  %180 = load i32*, i32** %179, align 8
  %181 = getelementptr inbounds i32, i32* %180, i32 %178
  store i32 8, i32* %181, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %ifcont6
  %182 = load i32, i32* %r, align 4
  ret i32 %182
}

define void @h(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 0
  %2 = load i32*, i32** %1, align 8
  %3 = ptrtoint i32* %2 to i64
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %5 = load %array*, %array** %c, align 8
  %6 = getelementptr %array, %array* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = ptrtoint i32* %7 to i64
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %10 = getelementptr %array, %array* %5, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = alloca i8*, align 8
  %13 = bitcast i32* %11 to i8*
  store i8* %13, i8** %12, align 8
  %14 = load i8*, i8** %12, align 8
  call void (i8*, ...) @_lfortran_free(i8* %14)
  %15 = getelementptr %array, %array* %5, i32 0, i32 0
  store i32* null, i32** %15, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @f(%array** %c)
  %16 = load %array*, %array** %c, align 8
  %17 = getelementptr %array, %array* %16, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %18, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 1, %21
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = mul i32 %24, %22
  %26 = add i32 0, %25
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %18, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = sub i32 1, %29
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = mul i32 %32, %30
  %34 = add i32 %26, %33
  %35 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %18, i32 2
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sub i32 1, %37
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = mul i32 %40, %38
  %42 = add i32 %34, %41
  %43 = getelementptr %array, %array* %16, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %42, %44
  %46 = getelementptr %array, %array* %16, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds i32, i32* %47, i32 %45
  %49 = load i32, i32* %48, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i32 %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  %50 = load %array*, %array** %c, align 8
  %51 = getelementptr %array, %array* %50, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 1, %55
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = mul i32 %58, %56
  %60 = add i32 0, %59
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 1
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 1, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 %66, %64
  %68 = add i32 %60, %67
  %69 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 2
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 1, %71
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 %74, %72
  %76 = add i32 %68, %75
  %77 = getelementptr %array, %array* %50, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %76, %78
  %80 = getelementptr %array, %array* %50, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds i32, i32* %81, i32 %79
  %83 = load i32, i32* %82, align 4
  %84 = icmp ne i32 %83, 99
  br i1 %84, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %85 = load %array*, %array** %c, align 8
  %86 = getelementptr %array, %array* %85, i32 0, i32 2
  %87 = load %dimension_descriptor*, %dimension_descriptor** %86, align 8
  %88 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %87, i32 0
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sub i32 1, %90
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = mul i32 %93, %91
  %95 = add i32 0, %94
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %87, i32 1
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 1, %98
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 %101, %99
  %103 = add i32 %95, %102
  %104 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %87, i32 2
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 1, %106
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %109, %107
  %111 = add i32 %103, %110
  %112 = getelementptr %array, %array* %85, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %111, %113
  %115 = getelementptr %array, %array* %85, i32 0, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = getelementptr inbounds i32, i32* %116, i32 %114
  store i32 8, i32* %117, align 4
  br label %return

return:                                           ; preds = %ifcont6
  ret void
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_free(i8*, ...)

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %c = alloca %array*, align 8
  store %array* null, %array** %c, align 8
  %arr_desc = alloca %array, align 8
  %2 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 3, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 3, i32* %6, align 4
  %7 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %7, align 8
  store %array* %arr_desc, %array** %c, align 8
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  store i32 1, i32* %stat, align 4
  %8 = load %array*, %array** %c, align 8
  %9 = getelementptr %array, %array* %8, i32 0, i32 1
  store i32 0, i32* %9, align 4
  %10 = getelementptr %array, %array* %8, i32 0, i32 2
  %11 = load %dimension_descriptor*, %dimension_descriptor** %10, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  store i32 1, i32* %13, align 4
  store i32 1, i32* %14, align 4
  store i32 3, i32* %15, align 4
  %16 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 1
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 1
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %16, i32 0, i32 2
  store i32 3, i32* %17, align 4
  store i32 1, i32* %18, align 4
  store i32 3, i32* %19, align 4
  %20 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  store i32 9, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 3, i32* %23, align 4
  %24 = getelementptr %array, %array* %8, i32 0, i32 0
  %25 = alloca i32, align 4
  store i32 108, i32* %25, align 4
  %26 = load i32, i32* %25, align 4
  %27 = call i8* (i32, ...) @_lfortran_malloc(i32 %26)
  %28 = bitcast i8* %27 to i32*
  store i32* %28, i32** %24, align 8
  store i32 0, i32* %stat, align 4
  %29 = load i32, i32* %stat, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %31 = load %array*, %array** %c, align 8
  %32 = getelementptr %array, %array* %31, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 1, %36
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = mul i32 %39, %37
  %41 = add i32 0, %40
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 1, %44
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = mul i32 %47, %45
  %49 = add i32 %41, %48
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 2
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 1, %52
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = mul i32 %55, %53
  %57 = add i32 %49, %56
  %58 = getelementptr %array, %array* %31, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %57, %59
  %61 = getelementptr %array, %array* %31, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds i32, i32* %62, i32 %60
  store i32 3, i32* %63, align 4
  %64 = load %array*, %array** %c, align 8
  %65 = getelementptr %array, %array* %64, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = ptrtoint i32* %66 to i64
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %69 = getelementptr %array, %array* %64, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = alloca i8*, align 8
  %72 = bitcast i32* %70 to i8*
  store i8* %72, i8** %71, align 8
  %73 = load i8*, i8** %71, align 8
  call void (i8*, ...) @_lfortran_free(i8* %73)
  %74 = getelementptr %array, %array* %64, i32 0, i32 0
  store i32* null, i32** %74, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @h(%array** %c)
  %75 = call i32 @g(%array** %c)
  store i32 %75, i32* %r, align 4
  %76 = load %array*, %array** %c, align 8
  %77 = getelementptr %array, %array* %76, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  %79 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 1, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 %84, %82
  %86 = add i32 0, %85
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 1
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 1, %89
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = mul i32 %92, %90
  %94 = add i32 %86, %93
  %95 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 2
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 1, %97
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = mul i32 %100, %98
  %102 = add i32 %94, %101
  %103 = getelementptr %array, %array* %76, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %102, %104
  %106 = getelementptr %array, %array* %76, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds i32, i32* %107, i32 %105
  %109 = load i32, i32* %108, align 4
  %110 = icmp ne i32 %109, 8
  br i1 %110, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %111 = load %array*, %array** %c, align 8
  %112 = getelementptr %array, %array* %111, i32 0, i32 2
  %113 = load %dimension_descriptor*, %dimension_descriptor** %112, align 8
  %114 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = sub i32 1, %116
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = mul i32 %119, %117
  %121 = add i32 0, %120
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 1
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 1, %124
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = mul i32 %127, %125
  %129 = add i32 %121, %128
  %130 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 2
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = sub i32 1, %132
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = mul i32 %135, %133
  %137 = add i32 %129, %136
  %138 = getelementptr %array, %array* %111, i32 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = add i32 %137, %139
  %141 = getelementptr %array, %array* %111, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds i32, i32* %142, i32 %140
  %144 = load i32, i32* %143, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i32 %144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  %145 = load %array*, %array** %c, align 8
  %146 = getelementptr %array, %array* %145, i32 0, i32 0
  %147 = load i32*, i32** %146, align 8
  %148 = ptrtoint i32* %147 to i64
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %then7, label %else8

then7:                                            ; preds = %ifcont6
  %150 = getelementptr %array, %array* %145, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = alloca i8*, align 8
  %153 = bitcast i32* %151 to i8*
  store i8* %153, i8** %152, align 8
  %154 = load i8*, i8** %152, align 8
  call void (i8*, ...) @_lfortran_free(i8* %154)
  %155 = getelementptr %array, %array* %145, i32 0, i32 0
  store i32* null, i32** %155, align 8
  br label %ifcont9

else8:                                            ; preds = %ifcont6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %156 = load %array*, %array** %c, align 8
  %157 = getelementptr %array, %array* %156, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = ptrtoint i32* %158 to i64
  %160 = icmp ne i64 %159, 0
  br i1 %160, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  %161 = getelementptr %array, %array* %156, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = alloca i8*, align 8
  %164 = bitcast i32* %162 to i8*
  store i8* %164, i8** %163, align 8
  %165 = load i8*, i8** %163, align 8
  call void (i8*, ...) @_lfortran_free(i8* %165)
  %166 = getelementptr %array, %array* %156, i32 0, i32 0
  store i32* null, i32** %166, align 8
  br label %ifcont12

else11:                                           ; preds = %ifcont9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)
