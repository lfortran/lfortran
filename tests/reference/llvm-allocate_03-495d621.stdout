; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.4 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.5 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.4, i32 0, i32 0), i64 10 }>
@string_const_data.6 = private constant [2 x i8] c"\0A\00"
@string_const.7 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.6, i32 0, i32 0), i64 1 }>
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.8 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.9 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.8, i32 0, i32 0), i64 10 }>
@string_const_data.10 = private constant [2 x i8] c"\0A\00"
@string_const.11 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.10, i32 0, i32 0), i64 1 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.12 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.13 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.13, i32 0, i32 0), i64 10 }>
@string_const_data.15 = private constant [2 x i8] c"\0A\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.15, i32 0, i32 0), i64 1 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.17 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.17, i32 0, i32 0), i64 10 }>
@string_const_data.19 = private constant [2 x i8] c"\0A\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.19, i32 0, i32 0), i64 1 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.21 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.21, i32 0, i32 0), i64 10 }>
@string_const_data.23 = private constant [2 x i8] c"\0A\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.23, i32 0, i32 0), i64 1 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.25 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %c = alloca %array*, align 8
  store %array* null, %array** %c, align 8
  %arr_desc = alloca %array, align 8
  %2 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 3, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 3, i32* %6, align 4
  %7 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %7, align 8
  store %array* %arr_desc, %array** %c, align 8
  %r1 = alloca i32, align 4
  %stat2 = alloca i32, align 4
  store i32 1, i32* %stat2, align 4
  %8 = load %array*, %array** %c, align 8
  %9 = ptrtoint %array* %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %then, label %else

then:                                             ; preds = %.entry
  %11 = alloca %array, align 8
  %12 = getelementptr %array, %array* %11, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array, %array* %11, i32 0, i32 4
  store i32 3, i32* %16, align 4
  store %array* %11, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %17 = load %array*, %array** %c, align 8
  %18 = getelementptr %array, %array* %17, i32 0, i32 1
  store i32 0, i32* %18, align 4
  %19 = getelementptr %array, %array* %17, i32 0, i32 2
  %20 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %21 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %20, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 1
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 2
  store i32 1, i32* %22, align 4
  store i32 1, i32* %23, align 4
  store i32 3, i32* %24, align 4
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %20, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 3, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 3, i32* %28, align 4
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %20, i32 2
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 2
  store i32 9, i32* %30, align 4
  store i32 1, i32* %31, align 4
  store i32 3, i32* %32, align 4
  %33 = getelementptr %array, %array* %17, i32 0, i32 0
  %34 = alloca i32, align 4
  store i32 108, i32* %34, align 4
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = call i8* @_lfortran_malloc(i64 %36)
  %38 = bitcast i8* %37 to i32*
  store i32* %38, i32** %33, align 8
  store i32 0, i32* %stat2, align 4
  %39 = load i32, i32* %stat2, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %then3, label %else4

then3:                                            ; preds = %ifcont
  %41 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  %42 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %41, i8* %42)
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %43 = load %array*, %array** %c, align 8
  %44 = getelementptr %array, %array* %43, i32 0, i32 2
  %45 = load %dimension_descriptor*, %dimension_descriptor** %44, align 8
  %46 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 0
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 1, %48
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = mul i32 %51, %49
  %53 = add i32 0, %52
  %54 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 1
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 1, %56
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = mul i32 %59, %57
  %61 = add i32 %53, %60
  %62 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 2
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 1, %64
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 %67, %65
  %69 = add i32 %61, %68
  %70 = getelementptr %array, %array* %43, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %69, %71
  %73 = getelementptr %array, %array* %43, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds i32, i32* %74, i32 %72
  store i32 3, i32* %75, align 4
  %76 = load %array*, %array** %c, align 8
  %77 = getelementptr %array, %array* %76, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = ptrtoint i32* %78 to i64
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  %81 = getelementptr %array, %array* %76, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = alloca i8*, align 8
  %84 = bitcast i32* %82 to i8*
  store i8* %84, i8** %83, align 8
  %85 = load i8*, i8** %83, align 8
  call void @_lfortran_free(i8* %85)
  %86 = getelementptr %array, %array* %76, i32 0, i32 0
  store i32* null, i32** %86, align 8
  br label %ifcont8

else7:                                            ; preds = %ifcont5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  call void @h(%array** %c)
  %87 = call i32 @g(%array** %c)
  store i32 %87, i32* %r1, align 4
  %88 = load %array*, %array** %c, align 8
  %89 = getelementptr %array, %array* %88, i32 0, i32 2
  %90 = load %dimension_descriptor*, %dimension_descriptor** %89, align 8
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %90, i32 0
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub i32 1, %93
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = mul i32 %96, %94
  %98 = add i32 0, %97
  %99 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %90, i32 1
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 1, %101
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = mul i32 %104, %102
  %106 = add i32 %98, %105
  %107 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %90, i32 2
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 1, %109
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = mul i32 %112, %110
  %114 = add i32 %106, %113
  %115 = getelementptr %array, %array* %88, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %114, %116
  %118 = getelementptr %array, %array* %88, i32 0, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = getelementptr inbounds i32, i32* %119, i32 %117
  %121 = load i32, i32* %120, align 4
  %122 = icmp ne i32 %121, 8
  br i1 %122, label %then9, label %else10

then9:                                            ; preds = %ifcont8
  %123 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  %124 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %123, i8* %124)
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %ifcont8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  %125 = load %array*, %array** %c, align 8
  %126 = getelementptr %array, %array* %125, i32 0, i32 2
  %127 = load %dimension_descriptor*, %dimension_descriptor** %126, align 8
  %128 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %127, i32 0
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 1, %130
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = mul i32 %133, %131
  %135 = add i32 0, %134
  %136 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %127, i32 1
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 1, %138
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = mul i32 %141, %139
  %143 = add i32 %135, %142
  %144 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %127, i32 2
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %144, i32 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = sub i32 1, %146
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %144, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = mul i32 %149, %147
  %151 = add i32 %143, %150
  %152 = getelementptr %array, %array* %125, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %151, %153
  %155 = getelementptr %array, %array* %125, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = getelementptr inbounds i32, i32* %156, i32 %154
  %158 = load i32, i32* %157, align 4
  %159 = alloca i32, align 4
  store i32 %158, i32* %159, align 4
  %160 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.25, i32 0, i32 0), i32 0, i32 0, i32* %159)
  %161 = call i64 @_lfortran_str_len(i8* %160)
  %162 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %162 to %string_descriptor*
  %163 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %160, i8** %163, align 8
  %164 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %161, i64* %164, align 4
  %165 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0))
  %167 = load %array*, %array** %c, align 8
  %168 = getelementptr %array, %array* %167, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = ptrtoint i32* %169 to i64
  %171 = icmp ne i64 %170, 0
  br i1 %171, label %then12, label %else13

then12:                                           ; preds = %ifcont11
  %172 = getelementptr %array, %array* %167, i32 0, i32 0
  %173 = load i32*, i32** %172, align 8
  %174 = alloca i8*, align 8
  %175 = bitcast i32* %173 to i8*
  store i8* %175, i8** %174, align 8
  %176 = load i8*, i8** %174, align 8
  call void @_lfortran_free(i8* %176)
  %177 = getelementptr %array, %array* %167, i32 0, i32 0
  store i32* null, i32** %177, align 8
  br label %ifcont14

else13:                                           ; preds = %ifcont11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont14
  ret i32 0
}

define void @f(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = ptrtoint %array* %0 to i32
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %then, label %else

then:                                             ; preds = %.entry
  %3 = alloca %array, align 8
  %4 = getelementptr %array, %array* %3, i32 0, i32 2
  %5 = alloca i32, align 4
  store i32 3, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = alloca %dimension_descriptor, i32 %6, align 8
  store %dimension_descriptor* %7, %dimension_descriptor** %4, align 8
  %8 = getelementptr %array, %array* %3, i32 0, i32 4
  store i32 3, i32* %8, align 4
  store %array* %3, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %9 = load %array*, %array** %c, align 8
  %10 = getelementptr %array, %array* %9, i32 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = getelementptr %array, %array* %9, i32 0, i32 2
  %12 = load %dimension_descriptor*, %dimension_descriptor** %11, align 8
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %12, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %12, i32 1
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  store i32 3, i32* %18, align 4
  store i32 1, i32* %19, align 4
  store i32 3, i32* %20, align 4
  %21 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %12, i32 2
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 1
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 2
  store i32 9, i32* %22, align 4
  store i32 1, i32* %23, align 4
  store i32 3, i32* %24, align 4
  %25 = getelementptr %array, %array* %9, i32 0, i32 0
  %26 = alloca i32, align 4
  store i32 108, i32* %26, align 4
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = call i8* @_lfortran_malloc(i64 %28)
  %30 = bitcast i8* %29 to i32*
  store i32* %30, i32** %25, align 8
  %31 = load %array*, %array** %c, align 8
  %32 = getelementptr %array, %array* %31, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 1, %36
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = mul i32 %39, %37
  %41 = add i32 0, %40
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 1, %44
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = mul i32 %47, %45
  %49 = add i32 %41, %48
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 2
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 1, %52
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = mul i32 %55, %53
  %57 = add i32 %49, %56
  %58 = getelementptr %array, %array* %31, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %57, %59
  %61 = getelementptr %array, %array* %31, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds i32, i32* %62, i32 %60
  store i32 99, i32* %63, align 4
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

define i32 @g(%array** %x) {
.entry:
  %r = alloca i32, align 4
  %0 = load %array*, %array** %x, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 1, %5
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = mul i32 %8, %6
  %10 = add i32 0, %9
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %13
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = mul i32 %16, %14
  %18 = add i32 %10, %17
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 2
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub i32 1, %21
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = mul i32 %24, %22
  %26 = add i32 %18, %25
  %27 = getelementptr %array, %array* %0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %26, %28
  %30 = getelementptr %array, %array* %0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i32 %29
  %33 = load i32, i32* %32, align 4
  %34 = alloca i32, align 4
  store i32 %33, i32* %34, align 4
  %35 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, i32* %34)
  %36 = call i64 @_lfortran_str_len(i8* %35)
  %37 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %37 to %string_descriptor*
  %38 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %35, i8** %38, align 8
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %36, i64* %39, align 4
  %40 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  %42 = load %array*, %array** %x, align 8
  %43 = getelementptr %array, %array* %42, i32 0, i32 2
  %44 = load %dimension_descriptor*, %dimension_descriptor** %43, align 8
  %45 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %44, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 1, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 %50, %48
  %52 = add i32 0, %51
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %44, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 1, %55
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = mul i32 %58, %56
  %60 = add i32 %52, %59
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %44, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 1, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 %66, %64
  %68 = add i32 %60, %67
  %69 = getelementptr %array, %array* %42, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %68, %70
  %72 = getelementptr %array, %array* %42, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = getelementptr inbounds i32, i32* %73, i32 %71
  %75 = load i32, i32* %74, align 4
  %76 = icmp ne i32 %75, 8
  br i1 %76, label %then, label %else

then:                                             ; preds = %.entry
  %77 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %78 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %77, i8* %78)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %79 = load %array*, %array** %x, align 8
  %80 = getelementptr %array, %array* %79, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = ptrtoint i32* %81 to i64
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %84 = getelementptr %array, %array* %79, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = alloca i8*, align 8
  %87 = bitcast i32* %85 to i8*
  store i8* %87, i8** %86, align 8
  %88 = load i8*, i8** %86, align 8
  call void @_lfortran_free(i8* %88)
  %89 = getelementptr %array, %array* %79, i32 0, i32 0
  store i32* null, i32** %89, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @f(%array** %x)
  %90 = load %array*, %array** %x, align 8
  %91 = getelementptr %array, %array* %90, i32 0, i32 2
  %92 = load %dimension_descriptor*, %dimension_descriptor** %91, align 8
  %93 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %92, i32 0
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = sub i32 1, %95
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 %98, %96
  %100 = add i32 0, %99
  %101 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %92, i32 1
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = sub i32 1, %103
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 %106, %104
  %108 = add i32 %100, %107
  %109 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %92, i32 2
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = sub i32 1, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 %114, %112
  %116 = add i32 %108, %115
  %117 = getelementptr %array, %array* %90, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %116, %118
  %120 = getelementptr %array, %array* %90, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = getelementptr inbounds i32, i32* %121, i32 %119
  %123 = load i32, i32* %122, align 4
  %124 = alloca i32, align 4
  store i32 %123, i32* %124, align 4
  %125 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i32 0, i32 0, i32* %124)
  %126 = call i64 @_lfortran_str_len(i8* %125)
  %127 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc4 = bitcast i8* %127 to %string_descriptor*
  %128 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  store i8* %125, i8** %128, align 8
  %129 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  store i64 %126, i64* %129, align 4
  %130 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0))
  %132 = load %array*, %array** %x, align 8
  %133 = getelementptr %array, %array* %132, i32 0, i32 2
  %134 = load %dimension_descriptor*, %dimension_descriptor** %133, align 8
  %135 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %134, i32 0
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = sub i32 1, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 %140, %138
  %142 = add i32 0, %141
  %143 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %134, i32 1
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = sub i32 1, %145
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = mul i32 %148, %146
  %150 = add i32 %142, %149
  %151 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %134, i32 2
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = sub i32 1, %153
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = mul i32 %156, %154
  %158 = add i32 %150, %157
  %159 = getelementptr %array, %array* %132, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %158, %160
  %162 = getelementptr %array, %array* %132, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds i32, i32* %163, i32 %161
  %165 = load i32, i32* %164, align 4
  %166 = icmp ne i32 %165, 99
  br i1 %166, label %then5, label %else6

then5:                                            ; preds = %ifcont3
  %167 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.5, i32 0, i32 0), align 8
  %168 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.7, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %167, i8* %168)
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont3
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %169 = load %array*, %array** %x, align 8
  %170 = getelementptr %array, %array* %169, i32 0, i32 2
  %171 = load %dimension_descriptor*, %dimension_descriptor** %170, align 8
  %172 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %171, i32 0
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = sub i32 1, %174
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = mul i32 %177, %175
  %179 = add i32 0, %178
  %180 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %171, i32 1
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %180, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = sub i32 1, %182
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %180, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = mul i32 %185, %183
  %187 = add i32 %179, %186
  %188 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %171, i32 2
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = sub i32 1, %190
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = mul i32 %193, %191
  %195 = add i32 %187, %194
  %196 = getelementptr %array, %array* %169, i32 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = add i32 %195, %197
  %199 = getelementptr %array, %array* %169, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = getelementptr inbounds i32, i32* %200, i32 %198
  store i32 8, i32* %201, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %ifcont7
  %202 = load i32, i32* %r, align 4
  ret i32 %202
}

define void @h(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = load %array*, %array** %c, align 8
  %2 = getelementptr %array, %array* %1, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = ptrtoint i32* %3 to i64
  %5 = icmp ne i64 %4, 0
  br i1 %5, label %then, label %else

then:                                             ; preds = %.entry
  %6 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.9, i32 0, i32 0), align 8
  %7 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.11, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %6, i8* %7)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %8 = load %array*, %array** %c, align 8
  %9 = getelementptr %array, %array* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = ptrtoint i32* %10 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %13 = getelementptr %array, %array* %8, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = alloca i8*, align 8
  %16 = bitcast i32* %14 to i8*
  store i8* %16, i8** %15, align 8
  %17 = load i8*, i8** %15, align 8
  call void @_lfortran_free(i8* %17)
  %18 = getelementptr %array, %array* %8, i32 0, i32 0
  store i32* null, i32** %18, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @f(%array** %c)
  %19 = load %array*, %array** %c, align 8
  %20 = getelementptr %array, %array* %19, i32 0, i32 2
  %21 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 1, %24
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = mul i32 %27, %25
  %29 = add i32 0, %28
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 1
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub i32 1, %32
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = mul i32 %35, %33
  %37 = add i32 %29, %36
  %38 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 2
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sub i32 1, %40
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 %43, %41
  %45 = add i32 %37, %44
  %46 = getelementptr %array, %array* %19, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %45, %47
  %49 = getelementptr %array, %array* %19, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds i32, i32* %50, i32 %48
  %52 = load i32, i32* %51, align 4
  %53 = alloca i32, align 4
  store i32 %52, i32* %53, align 4
  %54 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.12, i32 0, i32 0), i32 0, i32 0, i32* %53)
  %55 = call i64 @_lfortran_str_len(i8* %54)
  %56 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %56 to %string_descriptor*
  %57 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %54, i8** %57, align 8
  %58 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %55, i64* %58, align 4
  %59 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %61 = load %array*, %array** %c, align 8
  %62 = getelementptr %array, %array* %61, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 1, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %69, %67
  %71 = add i32 0, %70
  %72 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 1
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sub i32 1, %74
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = mul i32 %77, %75
  %79 = add i32 %71, %78
  %80 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 2
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 1, %82
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 %85, %83
  %87 = add i32 %79, %86
  %88 = getelementptr %array, %array* %61, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %87, %89
  %91 = getelementptr %array, %array* %61, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = getelementptr inbounds i32, i32* %92, i32 %90
  %94 = load i32, i32* %93, align 4
  %95 = icmp ne i32 %94, 99
  br i1 %95, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  %96 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  %97 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %96, i8* %97)
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %98 = load %array*, %array** %c, align 8
  %99 = getelementptr %array, %array* %98, i32 0, i32 2
  %100 = load %dimension_descriptor*, %dimension_descriptor** %99, align 8
  %101 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = sub i32 1, %103
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 %106, %104
  %108 = add i32 0, %107
  %109 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 1
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = sub i32 1, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 %114, %112
  %116 = add i32 %108, %115
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 2
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sub i32 1, %119
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = mul i32 %122, %120
  %124 = add i32 %116, %123
  %125 = getelementptr %array, %array* %98, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %124, %126
  %128 = getelementptr %array, %array* %98, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = getelementptr inbounds i32, i32* %129, i32 %127
  store i32 8, i32* %130, align 4
  br label %return

return:                                           ; preds = %ifcont6
  ret void
}

declare i8* @_lfortran_malloc(i64)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare void @_lfortran_printf(i8*, ...)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_free(i8*)

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lpython_free_argv()
