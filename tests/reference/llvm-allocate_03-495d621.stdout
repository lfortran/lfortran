; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@1 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@3 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@5 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@7 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@10 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@12 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@14 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@15 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@16 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@19 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@20 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@21 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@23 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@25 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@"ERROR STOP" = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@29 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@30 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@31 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@32 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@33 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@34 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@36 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@37 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@38 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@39 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@41 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@42 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@43 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@44 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@45 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@47 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@48 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@49 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@50 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@51 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@52 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@53 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@54 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@55 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@56 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@57 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@58 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@59 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@60 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@61 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@62 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@63 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@64 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@65 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@66 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@67 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@68 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@69 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@70 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@71 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@72 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@73 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@74 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@75 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@76 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@77 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@78 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@79 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@80 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@81 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@82 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@83 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@84 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@85 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@86 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@87 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@88 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@89 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@90 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@91 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@92 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@93 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@94 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@95 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@96 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@97 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@98 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@99 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@100 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@101 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@102 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@103 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@104 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@105 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@106 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@107 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@108 = private unnamed_addr constant [45 x i8] c"Runtime Error: Array '%s' is not allocated.\0A\00", align 1
@109 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@110 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@111 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@112 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@113 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@114 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@115 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %c = alloca %array*, align 8
  store %array* null, %array** %c, align 8
  %arr_desc = alloca %array, align 8
  %2 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 3, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %5, i32 0, i32 1
  store i32 1, i32* %6, align 4
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %5, i32 0, i32 2
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %8 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 3, i32* %8, align 4
  %9 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %9, align 8
  store %array* %arr_desc, %array** %c, align 8
  %r1 = alloca i32, align 4
  %stat2 = alloca i32, align 4
  store i32 1, i32* %stat2, align 4
  %10 = load %array*, %array** %c, align 8
  %11 = ptrtoint %array* %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %then, label %else

then:                                             ; preds = %.entry
  %13 = alloca %array, align 8
  %14 = getelementptr %array, %array* %13, i32 0, i32 2
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = load i32, i32* %15, align 4
  %17 = alloca %dimension_descriptor, i32 %16, align 8
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  store i32 1, i32* %18, align 4
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  store i32 1, i32* %19, align 4
  store %dimension_descriptor* %17, %dimension_descriptor** %14, align 8
  %20 = getelementptr %array, %array* %13, i32 0, i32 4
  store i32 3, i32* %20, align 4
  store %array* %13, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %21 = load %array*, %array** %c, align 8
  %22 = getelementptr %array, %array* %21, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array, %array* %21, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 3, i32* %28, align 4
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 2
  store i32 3, i32* %30, align 4
  store i32 1, i32* %31, align 4
  store i32 3, i32* %32, align 4
  %33 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 2
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  store i32 9, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 3, i32* %36, align 4
  %37 = getelementptr %array, %array* %21, i32 0, i32 0
  %38 = alloca i32, align 4
  store i32 108, i32* %38, align 4
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = call i8* @_lfortran_malloc(i64 %40)
  %42 = bitcast i8* %41 to i32*
  store i32* %42, i32** %37, align 8
  store i32 0, i32* %stat2, align 4
  %43 = load i32, i32* %stat2, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %then3, label %else4

then3:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @86, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %45 = load %array*, %array** %c, align 8
  %46 = getelementptr %array, %array* %45, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = ptrtoint i32* %47 to i64
  %49 = icmp ne i64 %48, 0
  %50 = xor i1 %49, true
  br i1 %50, label %then6, label %ifcont7

then6:                                            ; preds = %ifcont5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @89, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @88, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont7:                                          ; preds = %ifcont5
  %51 = getelementptr %array, %array* %45, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = sub i32 1, %55
  %59 = add i32 %55, %57
  %60 = sub i32 %59, 1
  %61 = icmp slt i32 1, %55
  %62 = icmp sgt i32 1, %60
  %63 = or i1 %61, %62
  br i1 %63, label %then8, label %ifcont9

then8:                                            ; preds = %ifcont7
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @90, i32 0, i32 0), i32 1, i32 1, i32 %55, i32 %60)
  call void @exit(i32 1)
  unreachable

ifcont9:                                          ; preds = %ifcont7
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 %65, %58
  %67 = add i32 0, %66
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 1
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 1, %70
  %74 = add i32 %70, %72
  %75 = sub i32 %74, 1
  %76 = icmp slt i32 1, %70
  %77 = icmp sgt i32 1, %75
  %78 = or i1 %76, %77
  br i1 %78, label %then10, label %ifcont11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @93, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @92, i32 0, i32 0), i32 1, i32 2, i32 %70, i32 %75)
  call void @exit(i32 1)
  unreachable

ifcont11:                                         ; preds = %ifcont9
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = mul i32 %80, %73
  %82 = add i32 %67, %81
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 2
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 1, %85
  %89 = add i32 %85, %87
  %90 = sub i32 %89, 1
  %91 = icmp slt i32 1, %85
  %92 = icmp sgt i32 1, %90
  %93 = or i1 %91, %92
  br i1 %93, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @94, i32 0, i32 0), i32 1, i32 3, i32 %85, i32 %90)
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 %95, %88
  %97 = add i32 %82, %96
  %98 = getelementptr %array, %array* %45, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %97, %99
  %101 = getelementptr %array, %array* %45, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = getelementptr inbounds i32, i32* %102, i32 %100
  store i32 3, i32* %103, align 4
  %104 = load %array*, %array** %c, align 8
  %105 = getelementptr %array, %array* %104, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = ptrtoint i32* %106 to i64
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %then14, label %else15

then14:                                           ; preds = %ifcont13
  %109 = getelementptr %array, %array* %104, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = alloca i8*, align 8
  %112 = bitcast i32* %110 to i8*
  store i8* %112, i8** %111, align 8
  %113 = load i8*, i8** %111, align 8
  call void @_lfortran_free(i8* %113)
  %114 = getelementptr %array, %array* %104, i32 0, i32 0
  store i32* null, i32** %114, align 8
  br label %ifcont16

else15:                                           ; preds = %ifcont13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  call void @h(%array** %c)
  %115 = call i32 @g(%array** %c)
  store i32 %115, i32* %r1, align 4
  %116 = load %array*, %array** %c, align 8
  %117 = getelementptr %array, %array* %116, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = ptrtoint i32* %118 to i64
  %120 = icmp ne i64 %119, 0
  %121 = xor i1 %120, true
  br i1 %121, label %then17, label %ifcont18

then17:                                           ; preds = %ifcont16
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @97, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @96, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont18:                                         ; preds = %ifcont16
  %122 = getelementptr %array, %array* %116, i32 0, i32 2
  %123 = load %dimension_descriptor*, %dimension_descriptor** %122, align 8
  %124 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %123, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = sub i32 1, %126
  %130 = add i32 %126, %128
  %131 = sub i32 %130, 1
  %132 = icmp slt i32 1, %126
  %133 = icmp sgt i32 1, %131
  %134 = or i1 %132, %133
  br i1 %134, label %then19, label %ifcont20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @99, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @98, i32 0, i32 0), i32 1, i32 1, i32 %126, i32 %131)
  call void @exit(i32 1)
  unreachable

ifcont20:                                         ; preds = %ifcont18
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %124, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = mul i32 %136, %129
  %138 = add i32 0, %137
  %139 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %123, i32 1
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = sub i32 1, %141
  %145 = add i32 %141, %143
  %146 = sub i32 %145, 1
  %147 = icmp slt i32 1, %141
  %148 = icmp sgt i32 1, %146
  %149 = or i1 %147, %148
  br i1 %149, label %then21, label %ifcont22

then21:                                           ; preds = %ifcont20
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @100, i32 0, i32 0), i32 1, i32 2, i32 %141, i32 %146)
  call void @exit(i32 1)
  unreachable

ifcont22:                                         ; preds = %ifcont20
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = mul i32 %151, %144
  %153 = add i32 %138, %152
  %154 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %123, i32 2
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = sub i32 1, %156
  %160 = add i32 %156, %158
  %161 = sub i32 %160, 1
  %162 = icmp slt i32 1, %156
  %163 = icmp sgt i32 1, %161
  %164 = or i1 %162, %163
  br i1 %164, label %then23, label %ifcont24

then23:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @103, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @102, i32 0, i32 0), i32 1, i32 3, i32 %156, i32 %161)
  call void @exit(i32 1)
  unreachable

ifcont24:                                         ; preds = %ifcont22
  %165 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = mul i32 %166, %159
  %168 = add i32 %153, %167
  %169 = getelementptr %array, %array* %116, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %168, %170
  %172 = getelementptr %array, %array* %116, i32 0, i32 0
  %173 = load i32*, i32** %172, align 8
  %174 = getelementptr inbounds i32, i32* %173, i32 %171
  %175 = load i32, i32* %174, align 4
  %176 = icmp ne i32 %175, 8
  br i1 %176, label %then25, label %else26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @105, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @104, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %ifcont24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %177 = alloca i64, align 8
  %178 = load %array*, %array** %c, align 8
  %179 = getelementptr %array, %array* %178, i32 0, i32 0
  %180 = load i32*, i32** %179, align 8
  %181 = ptrtoint i32* %180 to i64
  %182 = icmp ne i64 %181, 0
  %183 = xor i1 %182, true
  br i1 %183, label %then28, label %ifcont29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @108, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @107, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont29:                                         ; preds = %ifcont27
  %184 = getelementptr %array, %array* %178, i32 0, i32 2
  %185 = load %dimension_descriptor*, %dimension_descriptor** %184, align 8
  %186 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %185, i32 0
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = sub i32 1, %188
  %192 = add i32 %188, %190
  %193 = sub i32 %192, 1
  %194 = icmp slt i32 1, %188
  %195 = icmp sgt i32 1, %193
  %196 = or i1 %194, %195
  br i1 %196, label %then30, label %ifcont31

then30:                                           ; preds = %ifcont29
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @109, i32 0, i32 0), i32 1, i32 1, i32 %188, i32 %193)
  call void @exit(i32 1)
  unreachable

ifcont31:                                         ; preds = %ifcont29
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 %198, %191
  %200 = add i32 0, %199
  %201 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %185, i32 1
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = sub i32 1, %203
  %207 = add i32 %203, %205
  %208 = sub i32 %207, 1
  %209 = icmp slt i32 1, %203
  %210 = icmp sgt i32 1, %208
  %211 = or i1 %209, %210
  br i1 %211, label %then32, label %ifcont33

then32:                                           ; preds = %ifcont31
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @112, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i32 0, i32 0), i32 1, i32 2, i32 %203, i32 %208)
  call void @exit(i32 1)
  unreachable

ifcont33:                                         ; preds = %ifcont31
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %201, i32 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = mul i32 %213, %206
  %215 = add i32 %200, %214
  %216 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %185, i32 2
  %217 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 1, %218
  %222 = add i32 %218, %220
  %223 = sub i32 %222, 1
  %224 = icmp slt i32 1, %218
  %225 = icmp sgt i32 1, %223
  %226 = or i1 %224, %225
  br i1 %226, label %then34, label %ifcont35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @114, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @113, i32 0, i32 0), i32 1, i32 3, i32 %218, i32 %223)
  call void @exit(i32 1)
  unreachable

ifcont35:                                         ; preds = %ifcont33
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %216, i32 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = mul i32 %228, %221
  %230 = add i32 %215, %229
  %231 = getelementptr %array, %array* %178, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = add i32 %230, %232
  %234 = getelementptr %array, %array* %178, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = getelementptr inbounds i32, i32* %235, i32 %233
  %237 = load i32, i32* %236, align 4
  %238 = alloca i32, align 4
  store i32 %237, i32* %238, align 4
  %239 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i64* %177, i32 0, i32 0, i32* %238)
  %240 = load i64, i64* %177, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %241 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %239, i8** %241, align 8
  %242 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %240, i64* %242, align 4
  %243 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %246 = load i64, i64* %245, align 4
  %247 = trunc i64 %246 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @115, i32 0, i32 0), i8* %244, i32 %247, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @106, i32 0, i32 0), i32 1)
  %248 = load %array*, %array** %c, align 8
  %249 = getelementptr %array, %array* %248, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = ptrtoint i32* %250 to i64
  %252 = icmp ne i64 %251, 0
  br i1 %252, label %then36, label %else37

then36:                                           ; preds = %ifcont35
  %253 = getelementptr %array, %array* %248, i32 0, i32 0
  %254 = load i32*, i32** %253, align 8
  %255 = alloca i8*, align 8
  %256 = bitcast i32* %254 to i8*
  store i8* %256, i8** %255, align 8
  %257 = load i8*, i8** %255, align 8
  call void @_lfortran_free(i8* %257)
  %258 = getelementptr %array, %array* %248, i32 0, i32 0
  store i32* null, i32** %258, align 8
  br label %ifcont38

else37:                                           ; preds = %ifcont35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont38
  ret i32 0
}

define void @f(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = ptrtoint %array* %0 to i32
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %then, label %else

then:                                             ; preds = %.entry
  %3 = alloca %array, align 8
  %4 = getelementptr %array, %array* %3, i32 0, i32 2
  %5 = alloca i32, align 4
  store i32 3, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = alloca %dimension_descriptor, i32 %6, align 8
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  store i32 1, i32* %8, align 4
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %9, align 4
  store %dimension_descriptor* %7, %dimension_descriptor** %4, align 8
  %10 = getelementptr %array, %array* %3, i32 0, i32 4
  store i32 3, i32* %10, align 4
  store %array* %3, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %11 = load %array*, %array** %c, align 8
  %12 = getelementptr %array, %array* %11, i32 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr %array, %array* %11, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 1
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  store i32 1, i32* %16, align 4
  store i32 1, i32* %17, align 4
  store i32 3, i32* %18, align 4
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 2
  store i32 3, i32* %20, align 4
  store i32 1, i32* %21, align 4
  store i32 3, i32* %22, align 4
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  store i32 9, i32* %24, align 4
  store i32 1, i32* %25, align 4
  store i32 3, i32* %26, align 4
  %27 = getelementptr %array, %array* %11, i32 0, i32 0
  %28 = alloca i32, align 4
  store i32 108, i32* %28, align 4
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = call i8* @_lfortran_malloc(i64 %30)
  %32 = bitcast i8* %31 to i32*
  store i32* %32, i32** %27, align 8
  %33 = load %array*, %array** %c, align 8
  %34 = getelementptr %array, %array* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = ptrtoint i32* %35 to i64
  %37 = icmp ne i64 %36, 0
  %38 = xor i1 %37, true
  br i1 %38, label %then1, label %ifcont2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont2:                                          ; preds = %ifcont
  %39 = getelementptr %array, %array* %33, i32 0, i32 2
  %40 = load %dimension_descriptor*, %dimension_descriptor** %39, align 8
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %43
  %47 = add i32 %43, %45
  %48 = sub i32 %47, 1
  %49 = icmp slt i32 1, %43
  %50 = icmp sgt i32 1, %48
  %51 = or i1 %49, %50
  br i1 %51, label %then3, label %ifcont4

then3:                                            ; preds = %ifcont2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1, i32 1, i32 %43, i32 %48)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %ifcont2
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 %53, %46
  %55 = add i32 0, %54
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 1, %58
  %62 = add i32 %58, %60
  %63 = sub i32 %62, 1
  %64 = icmp slt i32 1, %58
  %65 = icmp sgt i32 1, %63
  %66 = or i1 %64, %65
  br i1 %66, label %then5, label %ifcont6

then5:                                            ; preds = %ifcont4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1, i32 2, i32 %58, i32 %63)
  call void @exit(i32 1)
  unreachable

ifcont6:                                          ; preds = %ifcont4
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 %68, %61
  %70 = add i32 %55, %69
  %71 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 1, %73
  %77 = add i32 %73, %75
  %78 = sub i32 %77, 1
  %79 = icmp slt i32 1, %73
  %80 = icmp sgt i32 1, %78
  %81 = or i1 %79, %80
  br i1 %81, label %then7, label %ifcont8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1, i32 3, i32 %73, i32 %78)
  call void @exit(i32 1)
  unreachable

ifcont8:                                          ; preds = %ifcont6
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %83, %76
  %85 = add i32 %70, %84
  %86 = getelementptr %array, %array* %33, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %85, %87
  %89 = getelementptr %array, %array* %33, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds i32, i32* %90, i32 %88
  store i32 99, i32* %91, align 4
  br label %return

return:                                           ; preds = %ifcont8
  ret void
}

define i32 @g(%array** %x) {
.entry:
  %r = alloca i32, align 4
  %0 = alloca i64, align 8
  %1 = load %array*, %array** %x, align 8
  %2 = getelementptr %array, %array* %1, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = ptrtoint i32* %3 to i64
  %5 = icmp ne i64 %4, 0
  %6 = xor i1 %5, true
  br i1 %6, label %then, label %ifcont

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont:                                           ; preds = %.entry
  %7 = getelementptr %array, %array* %1, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 1, %11
  %15 = add i32 %11, %13
  %16 = sub i32 %15, 1
  %17 = icmp slt i32 1, %11
  %18 = icmp sgt i32 1, %16
  %19 = or i1 %17, %18
  br i1 %19, label %then1, label %ifcont2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i32 1, i32 1, i32 %11, i32 %16)
  call void @exit(i32 1)
  unreachable

ifcont2:                                          ; preds = %ifcont
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = mul i32 %21, %14
  %23 = add i32 0, %22
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 1
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = sub i32 1, %26
  %30 = add i32 %26, %28
  %31 = sub i32 %30, 1
  %32 = icmp slt i32 1, %26
  %33 = icmp sgt i32 1, %31
  %34 = or i1 %32, %33
  br i1 %34, label %then3, label %ifcont4

then3:                                            ; preds = %ifcont2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 1, i32 2, i32 %26, i32 %31)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %ifcont2
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = mul i32 %36, %29
  %38 = add i32 %23, %37
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 2
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = sub i32 1, %41
  %45 = add i32 %41, %43
  %46 = sub i32 %45, 1
  %47 = icmp slt i32 1, %41
  %48 = icmp sgt i32 1, %46
  %49 = or i1 %47, %48
  br i1 %49, label %then5, label %ifcont6

then5:                                            ; preds = %ifcont4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i32 0, i32 0), i32 1, i32 3, i32 %41, i32 %46)
  call void @exit(i32 1)
  unreachable

ifcont6:                                          ; preds = %ifcont4
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = mul i32 %51, %44
  %53 = add i32 %38, %52
  %54 = getelementptr %array, %array* %1, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %53, %55
  %57 = getelementptr %array, %array* %1, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i32 %56
  %60 = load i32, i32* %59, align 4
  %61 = alloca i32, align 4
  store i32 %60, i32* %61, align 4
  %62 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i64* %0, i32 0, i32 0, i32* %61)
  %63 = load i64, i64* %0, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %64 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %62, i8** %64, align 8
  %65 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %63, i64* %65, align 4
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %69 = load i64, i64* %68, align 4
  %70 = trunc i64 %69 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* %67, i32 %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 1)
  %71 = load %array*, %array** %x, align 8
  %72 = getelementptr %array, %array* %71, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = ptrtoint i32* %73 to i64
  %75 = icmp ne i64 %74, 0
  %76 = xor i1 %75, true
  br i1 %76, label %then7, label %ifcont8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @18, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont8:                                          ; preds = %ifcont6
  %77 = getelementptr %array, %array* %71, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  %79 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 1, %81
  %85 = add i32 %81, %83
  %86 = sub i32 %85, 1
  %87 = icmp slt i32 1, %81
  %88 = icmp sgt i32 1, %86
  %89 = or i1 %87, %88
  br i1 %89, label %then9, label %ifcont10

then9:                                            ; preds = %ifcont8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @20, i32 0, i32 0), i32 1, i32 1, i32 %81, i32 %86)
  call void @exit(i32 1)
  unreachable

ifcont10:                                         ; preds = %ifcont8
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 %91, %84
  %93 = add i32 0, %92
  %94 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 1
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 1, %96
  %100 = add i32 %96, %98
  %101 = sub i32 %100, 1
  %102 = icmp slt i32 1, %96
  %103 = icmp sgt i32 1, %101
  %104 = or i1 %102, %103
  br i1 %104, label %then11, label %ifcont12

then11:                                           ; preds = %ifcont10
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i32 1, i32 2, i32 %96, i32 %101)
  call void @exit(i32 1)
  unreachable

ifcont12:                                         ; preds = %ifcont10
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 %106, %99
  %108 = add i32 %93, %107
  %109 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 2
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 1, %111
  %115 = add i32 %111, %113
  %116 = sub i32 %115, 1
  %117 = icmp slt i32 1, %111
  %118 = icmp sgt i32 1, %116
  %119 = or i1 %117, %118
  br i1 %119, label %then13, label %ifcont14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0), i32 1, i32 3, i32 %111, i32 %116)
  call void @exit(i32 1)
  unreachable

ifcont14:                                         ; preds = %ifcont12
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %109, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = mul i32 %121, %114
  %123 = add i32 %108, %122
  %124 = getelementptr %array, %array* %71, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %123, %125
  %127 = getelementptr %array, %array* %71, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = getelementptr inbounds i32, i32* %128, i32 %126
  %130 = load i32, i32* %129, align 4
  %131 = icmp ne i32 %130, 8
  br i1 %131, label %then15, label %else

then15:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @26, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont16

else:                                             ; preds = %ifcont14
  br label %ifcont16

ifcont16:                                         ; preds = %else, %then15
  %132 = load %array*, %array** %x, align 8
  %133 = getelementptr %array, %array* %132, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = ptrtoint i32* %134 to i64
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %then17, label %else18

then17:                                           ; preds = %ifcont16
  %137 = getelementptr %array, %array* %132, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = alloca i8*, align 8
  %140 = bitcast i32* %138 to i8*
  store i8* %140, i8** %139, align 8
  %141 = load i8*, i8** %139, align 8
  call void @_lfortran_free(i8* %141)
  %142 = getelementptr %array, %array* %132, i32 0, i32 0
  store i32* null, i32** %142, align 8
  br label %ifcont19

else18:                                           ; preds = %ifcont16
  br label %ifcont19

ifcont19:                                         ; preds = %else18, %then17
  call void @f(%array** %x)
  %143 = alloca i64, align 8
  %144 = load %array*, %array** %x, align 8
  %145 = getelementptr %array, %array* %144, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = ptrtoint i32* %146 to i64
  %148 = icmp ne i64 %147, 0
  %149 = xor i1 %148, true
  br i1 %149, label %then20, label %ifcont21

then20:                                           ; preds = %ifcont19
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont21:                                         ; preds = %ifcont19
  %150 = getelementptr %array, %array* %144, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 1, %154
  %158 = add i32 %154, %156
  %159 = sub i32 %158, 1
  %160 = icmp slt i32 1, %154
  %161 = icmp sgt i32 1, %159
  %162 = or i1 %160, %161
  br i1 %162, label %then22, label %ifcont23

then22:                                           ; preds = %ifcont21
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0), i32 1, i32 1, i32 %154, i32 %159)
  call void @exit(i32 1)
  unreachable

ifcont23:                                         ; preds = %ifcont21
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = mul i32 %164, %157
  %166 = add i32 0, %165
  %167 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 1
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = sub i32 1, %169
  %173 = add i32 %169, %171
  %174 = sub i32 %173, 1
  %175 = icmp slt i32 1, %169
  %176 = icmp sgt i32 1, %174
  %177 = or i1 %175, %176
  br i1 %177, label %then24, label %ifcont25

then24:                                           ; preds = %ifcont23
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @33, i32 0, i32 0), i32 1, i32 2, i32 %169, i32 %174)
  call void @exit(i32 1)
  unreachable

ifcont25:                                         ; preds = %ifcont23
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 %179, %172
  %181 = add i32 %166, %180
  %182 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 2
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 1, %184
  %188 = add i32 %184, %186
  %189 = sub i32 %188, 1
  %190 = icmp slt i32 1, %184
  %191 = icmp sgt i32 1, %189
  %192 = or i1 %190, %191
  br i1 %192, label %then26, label %ifcont27

then26:                                           ; preds = %ifcont25
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), i32 1, i32 3, i32 %184, i32 %189)
  call void @exit(i32 1)
  unreachable

ifcont27:                                         ; preds = %ifcont25
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 %194, %187
  %196 = add i32 %181, %195
  %197 = getelementptr %array, %array* %144, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = add i32 %196, %198
  %200 = getelementptr %array, %array* %144, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = getelementptr inbounds i32, i32* %201, i32 %199
  %203 = load i32, i32* %202, align 4
  %204 = alloca i32, align 4
  store i32 %203, i32* %204, align 4
  %205 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i64* %143, i32 0, i32 0, i32* %204)
  %206 = load i64, i64* %143, align 4
  %stringFormat_desc28 = alloca %string_descriptor, align 8
  %207 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 0
  store i8* %205, i8** %207, align 8
  %208 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 1
  store i64 %206, i64* %208, align 4
  %209 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc28, i32 0, i32 1
  %212 = load i64, i64* %211, align 4
  %213 = trunc i64 %212 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i32 0, i32 0), i8* %210, i32 %213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0), i32 1)
  %214 = load %array*, %array** %x, align 8
  %215 = getelementptr %array, %array* %214, i32 0, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = ptrtoint i32* %216 to i64
  %218 = icmp ne i64 %217, 0
  %219 = xor i1 %218, true
  br i1 %219, label %then29, label %ifcont30

then29:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont30:                                         ; preds = %ifcont27
  %220 = getelementptr %array, %array* %214, i32 0, i32 2
  %221 = load %dimension_descriptor*, %dimension_descriptor** %220, align 8
  %222 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %221, i32 0
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 1, %224
  %228 = add i32 %224, %226
  %229 = sub i32 %228, 1
  %230 = icmp slt i32 1, %224
  %231 = icmp sgt i32 1, %229
  %232 = or i1 %230, %231
  br i1 %232, label %then31, label %ifcont32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0), i32 1, i32 1, i32 %224, i32 %229)
  call void @exit(i32 1)
  unreachable

ifcont32:                                         ; preds = %ifcont30
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %222, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = mul i32 %234, %227
  %236 = add i32 0, %235
  %237 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %221, i32 1
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %237, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr %dimension_descriptor, %dimension_descriptor* %237, i32 0, i32 2
  %241 = load i32, i32* %240, align 4
  %242 = sub i32 1, %239
  %243 = add i32 %239, %241
  %244 = sub i32 %243, 1
  %245 = icmp slt i32 1, %239
  %246 = icmp sgt i32 1, %244
  %247 = or i1 %245, %246
  br i1 %247, label %then33, label %ifcont34

then33:                                           ; preds = %ifcont32
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0), i32 1, i32 2, i32 %239, i32 %244)
  call void @exit(i32 1)
  unreachable

ifcont34:                                         ; preds = %ifcont32
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %237, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 %249, %242
  %251 = add i32 %236, %250
  %252 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %221, i32 2
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 2
  %256 = load i32, i32* %255, align 4
  %257 = sub i32 1, %254
  %258 = add i32 %254, %256
  %259 = sub i32 %258, 1
  %260 = icmp slt i32 1, %254
  %261 = icmp sgt i32 1, %259
  %262 = or i1 %260, %261
  br i1 %262, label %then35, label %ifcont36

then35:                                           ; preds = %ifcont34
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @44, i32 0, i32 0), i32 1, i32 3, i32 %254, i32 %259)
  call void @exit(i32 1)
  unreachable

ifcont36:                                         ; preds = %ifcont34
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = mul i32 %264, %257
  %266 = add i32 %251, %265
  %267 = getelementptr %array, %array* %214, i32 0, i32 1
  %268 = load i32, i32* %267, align 4
  %269 = add i32 %266, %268
  %270 = getelementptr %array, %array* %214, i32 0, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = getelementptr inbounds i32, i32* %271, i32 %269
  %273 = load i32, i32* %272, align 4
  %274 = icmp ne i32 %273, 99
  br i1 %274, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  %275 = load %array*, %array** %x, align 8
  %276 = getelementptr %array, %array* %275, i32 0, i32 0
  %277 = load i32*, i32** %276, align 8
  %278 = ptrtoint i32* %277 to i64
  %279 = icmp ne i64 %278, 0
  %280 = xor i1 %279, true
  br i1 %280, label %then40, label %ifcont41

then40:                                           ; preds = %ifcont39
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont41:                                         ; preds = %ifcont39
  %281 = getelementptr %array, %array* %275, i32 0, i32 2
  %282 = load %dimension_descriptor*, %dimension_descriptor** %281, align 8
  %283 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %282, i32 0
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %283, i32 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %283, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = sub i32 1, %285
  %289 = add i32 %285, %287
  %290 = sub i32 %289, 1
  %291 = icmp slt i32 1, %285
  %292 = icmp sgt i32 1, %290
  %293 = or i1 %291, %292
  br i1 %293, label %then42, label %ifcont43

then42:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @50, i32 0, i32 0), i32 1, i32 1, i32 %285, i32 %290)
  call void @exit(i32 1)
  unreachable

ifcont43:                                         ; preds = %ifcont41
  %294 = getelementptr %dimension_descriptor, %dimension_descriptor* %283, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = mul i32 %295, %288
  %297 = add i32 0, %296
  %298 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %282, i32 1
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 2
  %302 = load i32, i32* %301, align 4
  %303 = sub i32 1, %300
  %304 = add i32 %300, %302
  %305 = sub i32 %304, 1
  %306 = icmp slt i32 1, %300
  %307 = icmp sgt i32 1, %305
  %308 = or i1 %306, %307
  br i1 %308, label %then44, label %ifcont45

then44:                                           ; preds = %ifcont43
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @53, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i32 0, i32 0), i32 1, i32 2, i32 %300, i32 %305)
  call void @exit(i32 1)
  unreachable

ifcont45:                                         ; preds = %ifcont43
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 0
  %310 = load i32, i32* %309, align 4
  %311 = mul i32 %310, %303
  %312 = add i32 %297, %311
  %313 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %282, i32 2
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %313, i32 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %313, i32 0, i32 2
  %317 = load i32, i32* %316, align 4
  %318 = sub i32 1, %315
  %319 = add i32 %315, %317
  %320 = sub i32 %319, 1
  %321 = icmp slt i32 1, %315
  %322 = icmp sgt i32 1, %320
  %323 = or i1 %321, %322
  br i1 %323, label %then46, label %ifcont47

then46:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i32 0, i32 0), i32 1, i32 3, i32 %315, i32 %320)
  call void @exit(i32 1)
  unreachable

ifcont47:                                         ; preds = %ifcont45
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %313, i32 0, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = mul i32 %325, %318
  %327 = add i32 %312, %326
  %328 = getelementptr %array, %array* %275, i32 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = add i32 %327, %329
  %331 = getelementptr %array, %array* %275, i32 0, i32 0
  %332 = load i32*, i32** %331, align 8
  %333 = getelementptr inbounds i32, i32* %332, i32 %330
  store i32 8, i32* %333, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %ifcont47
  %334 = load i32, i32* %r, align 4
  ret i32 %334
}

define void @h(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = load %array*, %array** %c, align 8
  %2 = getelementptr %array, %array* %1, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = ptrtoint i32* %3 to i64
  %5 = icmp ne i64 %4, 0
  br i1 %5, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @56, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %6 = load %array*, %array** %c, align 8
  %7 = getelementptr %array, %array* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = ptrtoint i32* %8 to i64
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %11 = getelementptr %array, %array* %6, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = alloca i8*, align 8
  %14 = bitcast i32* %12 to i8*
  store i8* %14, i8** %13, align 8
  %15 = load i8*, i8** %13, align 8
  call void @_lfortran_free(i8* %15)
  %16 = getelementptr %array, %array* %6, i32 0, i32 0
  store i32* null, i32** %16, align 8
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  call void @f(%array** %c)
  %17 = alloca i64, align 8
  %18 = load %array*, %array** %c, align 8
  %19 = getelementptr %array, %array* %18, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = ptrtoint i32* %20 to i64
  %22 = icmp ne i64 %21, 0
  %23 = xor i1 %22, true
  br i1 %23, label %then4, label %ifcont5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @59, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont5:                                          ; preds = %ifcont3
  %24 = getelementptr %array, %array* %18, i32 0, i32 2
  %25 = load %dimension_descriptor*, %dimension_descriptor** %24, align 8
  %26 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 1, %28
  %32 = add i32 %28, %30
  %33 = sub i32 %32, 1
  %34 = icmp slt i32 1, %28
  %35 = icmp sgt i32 1, %33
  %36 = or i1 %34, %35
  br i1 %36, label %then6, label %ifcont7

then6:                                            ; preds = %ifcont5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @62, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @61, i32 0, i32 0), i32 1, i32 1, i32 %28, i32 %33)
  call void @exit(i32 1)
  unreachable

ifcont7:                                          ; preds = %ifcont5
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = mul i32 %38, %31
  %40 = add i32 0, %39
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %43
  %47 = add i32 %43, %45
  %48 = sub i32 %47, 1
  %49 = icmp slt i32 1, %43
  %50 = icmp sgt i32 1, %48
  %51 = or i1 %49, %50
  br i1 %51, label %then8, label %ifcont9

then8:                                            ; preds = %ifcont7
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @63, i32 0, i32 0), i32 1, i32 2, i32 %43, i32 %48)
  call void @exit(i32 1)
  unreachable

ifcont9:                                          ; preds = %ifcont7
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 %53, %46
  %55 = add i32 %40, %54
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 2
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 1, %58
  %62 = add i32 %58, %60
  %63 = sub i32 %62, 1
  %64 = icmp slt i32 1, %58
  %65 = icmp sgt i32 1, %63
  %66 = or i1 %64, %65
  br i1 %66, label %then10, label %ifcont11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @66, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @65, i32 0, i32 0), i32 1, i32 3, i32 %58, i32 %63)
  call void @exit(i32 1)
  unreachable

ifcont11:                                         ; preds = %ifcont9
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 %68, %61
  %70 = add i32 %55, %69
  %71 = getelementptr %array, %array* %18, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %70, %72
  %74 = getelementptr %array, %array* %18, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds i32, i32* %75, i32 %73
  %77 = load i32, i32* %76, align 4
  %78 = alloca i32, align 4
  store i32 %77, i32* %78, align 4
  %79 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i64* %17, i32 0, i32 0, i32* %78)
  %80 = load i64, i64* %17, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %81 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %79, i8** %81, align 8
  %82 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %80, i64* %82, align 4
  %83 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %86 = load i64, i64* %85, align 4
  %87 = trunc i64 %86 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @67, i32 0, i32 0), i8* %84, i32 %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0), i32 1)
  %88 = load %array*, %array** %c, align 8
  %89 = getelementptr %array, %array* %88, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = ptrtoint i32* %90 to i64
  %92 = icmp ne i64 %91, 0
  %93 = xor i1 %92, true
  br i1 %93, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @69, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %94 = getelementptr %array, %array* %88, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = sub i32 1, %98
  %102 = add i32 %98, %100
  %103 = sub i32 %102, 1
  %104 = icmp slt i32 1, %98
  %105 = icmp sgt i32 1, %103
  %106 = or i1 %104, %105
  br i1 %106, label %then14, label %ifcont15

then14:                                           ; preds = %ifcont13
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @70, i32 0, i32 0), i32 1, i32 1, i32 %98, i32 %103)
  call void @exit(i32 1)
  unreachable

ifcont15:                                         ; preds = %ifcont13
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = mul i32 %108, %101
  %110 = add i32 0, %109
  %111 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 1
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = sub i32 1, %113
  %117 = add i32 %113, %115
  %118 = sub i32 %117, 1
  %119 = icmp slt i32 1, %113
  %120 = icmp sgt i32 1, %118
  %121 = or i1 %119, %120
  br i1 %121, label %then16, label %ifcont17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @73, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @72, i32 0, i32 0), i32 1, i32 2, i32 %113, i32 %118)
  call void @exit(i32 1)
  unreachable

ifcont17:                                         ; preds = %ifcont15
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = mul i32 %123, %116
  %125 = add i32 %110, %124
  %126 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 2
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 1, %128
  %132 = add i32 %128, %130
  %133 = sub i32 %132, 1
  %134 = icmp slt i32 1, %128
  %135 = icmp sgt i32 1, %133
  %136 = or i1 %134, %135
  br i1 %136, label %then18, label %ifcont19

then18:                                           ; preds = %ifcont17
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0), i32 1, i32 3, i32 %128, i32 %133)
  call void @exit(i32 1)
  unreachable

ifcont19:                                         ; preds = %ifcont17
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = mul i32 %138, %131
  %140 = add i32 %125, %139
  %141 = getelementptr %array, %array* %88, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %140, %142
  %144 = getelementptr %array, %array* %88, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = getelementptr inbounds i32, i32* %145, i32 %143
  %147 = load i32, i32* %146, align 4
  %148 = icmp ne i32 %147, 99
  br i1 %148, label %then20, label %else21

then20:                                           ; preds = %ifcont19
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @76, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont19
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %149 = load %array*, %array** %c, align 8
  %150 = getelementptr %array, %array* %149, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = ptrtoint i32* %151 to i64
  %153 = icmp ne i64 %152, 0
  %154 = xor i1 %153, true
  br i1 %154, label %then23, label %ifcont24

then23:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @78, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont24:                                         ; preds = %ifcont22
  %155 = getelementptr %array, %array* %149, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = sub i32 1, %159
  %163 = add i32 %159, %161
  %164 = sub i32 %163, 1
  %165 = icmp slt i32 1, %159
  %166 = icmp sgt i32 1, %164
  %167 = or i1 %165, %166
  br i1 %167, label %then25, label %ifcont26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @81, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @80, i32 0, i32 0), i32 1, i32 1, i32 %159, i32 %164)
  call void @exit(i32 1)
  unreachable

ifcont26:                                         ; preds = %ifcont24
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = mul i32 %169, %162
  %171 = add i32 0, %170
  %172 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 1
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = sub i32 1, %174
  %178 = add i32 %174, %176
  %179 = sub i32 %178, 1
  %180 = icmp slt i32 1, %174
  %181 = icmp sgt i32 1, %179
  %182 = or i1 %180, %181
  br i1 %182, label %then27, label %ifcont28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @82, i32 0, i32 0), i32 1, i32 2, i32 %174, i32 %179)
  call void @exit(i32 1)
  unreachable

ifcont28:                                         ; preds = %ifcont26
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %172, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = mul i32 %184, %177
  %186 = add i32 %171, %185
  %187 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 2
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 1, %189
  %193 = add i32 %189, %191
  %194 = sub i32 %193, 1
  %195 = icmp slt i32 1, %189
  %196 = icmp sgt i32 1, %194
  %197 = or i1 %195, %196
  br i1 %197, label %then29, label %ifcont30

then29:                                           ; preds = %ifcont28
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @85, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @84, i32 0, i32 0), i32 1, i32 3, i32 %189, i32 %194)
  call void @exit(i32 1)
  unreachable

ifcont30:                                         ; preds = %ifcont28
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = mul i32 %199, %192
  %201 = add i32 %186, %200
  %202 = getelementptr %array, %array* %149, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = add i32 %201, %203
  %205 = getelementptr %array, %array* %149, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = getelementptr inbounds i32, i32* %206, i32 %204
  store i32 8, i32* %207, align 4
  br label %return

return:                                           ; preds = %ifcont30
  ret void
}

declare i8* @_lfortran_malloc(i64)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lfortran_free(i8*)

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lpython_free_argv()
