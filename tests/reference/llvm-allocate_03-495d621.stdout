; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@1 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@3 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@5 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@7 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@10 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@12 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@14 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@15 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@16 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@19 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@20 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@21 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@23 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@25 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@"ERROR STOP" = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@29 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@30 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@31 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@32 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@33 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@34 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@36 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@37 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@38 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@39 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@41 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@42 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@43 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@44 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@45 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@47 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@48 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@49 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@50 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@51 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@52 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@53 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@54 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@55 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@56 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@57 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@58 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@59 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@60 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@61 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@62 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@63 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@64 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@65 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@66 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@67 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@68 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@69 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@70 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@71 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@72 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@73 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@74 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@75 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@76 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@77 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@78 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@79 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@80 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@81 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@82 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@83 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@84 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@85 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@86 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@87 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@88 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@89 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@90 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@91 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@92 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@93 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@94 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@95 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@96 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@97 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@98 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@99 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@100 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@101 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@102 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@103 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@104 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@105 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@106 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@107 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@108 = private unnamed_addr constant [57 x i8] c"Runtime Error: Array '%s' is indexed but not allocated.\0A\00", align 1
@109 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@110 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@111 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@112 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@113 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@114 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@115 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %r = alloca i32, align 4
  %stat = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %c = alloca %array*, align 8
  store %array* null, %array** %c, align 8
  %arr_desc = alloca %array, align 8
  %2 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 3, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %5, i32 0, i32 1
  store i32 1, i32* %6, align 4
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %5, i32 0, i32 2
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %8 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 3, i32* %8, align 4
  %9 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %9, align 8
  store %array* %arr_desc, %array** %c, align 8
  %r1 = alloca i32, align 4
  %stat2 = alloca i32, align 4
  store i32 1, i32* %stat2, align 4
  %10 = load %array*, %array** %c, align 8
  %11 = ptrtoint %array* %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %then, label %else

then:                                             ; preds = %.entry
  %13 = alloca %array, align 8
  %14 = getelementptr %array, %array* %13, i32 0, i32 2
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = load i32, i32* %15, align 4
  %17 = alloca %dimension_descriptor, i32 %16, align 8
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  store i32 1, i32* %18, align 4
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  store i32 1, i32* %19, align 4
  store %dimension_descriptor* %17, %dimension_descriptor** %14, align 8
  %20 = getelementptr %array, %array* %13, i32 0, i32 4
  store i32 3, i32* %20, align 4
  store %array* %13, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %21 = load %array*, %array** %c, align 8
  %22 = getelementptr %array, %array* %21, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array, %array* %21, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 3, i32* %28, align 4
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 2
  store i32 3, i32* %30, align 4
  store i32 1, i32* %31, align 4
  store i32 3, i32* %32, align 4
  %33 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 2
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  store i32 9, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 3, i32* %36, align 4
  %37 = getelementptr %array, %array* %21, i32 0, i32 0
  %38 = alloca i32, align 4
  store i32 108, i32* %38, align 4
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = call i8* @_lfortran_malloc(i64 %40)
  %42 = bitcast i8* %41 to i32*
  store i32* %42, i32** %37, align 8
  store i32 0, i32* %stat2, align 4
  %43 = load i32, i32* %stat2, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %then3, label %else4

then3:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @86, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %45 = load %array*, %array** %c, align 8
  %46 = ptrtoint %array* %45 to i64
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %merge_allocated, label %check_data

check_data:                                       ; preds = %ifcont5
  %48 = getelementptr %array, %array* %45, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = ptrtoint i32* %49 to i64
  %51 = icmp ne i64 %50, 0
  br label %merge_allocated

merge_allocated:                                  ; preds = %check_data, %ifcont5
  %is_allocated = phi i1 [ false, %ifcont5 ], [ %51, %check_data ]
  %52 = xor i1 %is_allocated, true
  br i1 %52, label %then6, label %ifcont7

then6:                                            ; preds = %merge_allocated
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @89, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @88, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont7:                                          ; preds = %merge_allocated
  %53 = getelementptr %array, %array* %45, i32 0, i32 2
  %54 = load %dimension_descriptor*, %dimension_descriptor** %53, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 1, %57
  %61 = add i32 %57, %59
  %62 = sub i32 %61, 1
  %63 = icmp slt i32 1, %57
  %64 = icmp sgt i32 1, %62
  %65 = or i1 %63, %64
  br i1 %65, label %then8, label %ifcont9

then8:                                            ; preds = %ifcont7
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @90, i32 0, i32 0), i32 1, i32 1, i32 %57, i32 %62)
  call void @exit(i32 1)
  unreachable

ifcont9:                                          ; preds = %ifcont7
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = mul i32 %67, %60
  %69 = add i32 0, %68
  %70 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = sub i32 1, %72
  %76 = add i32 %72, %74
  %77 = sub i32 %76, 1
  %78 = icmp slt i32 1, %72
  %79 = icmp sgt i32 1, %77
  %80 = or i1 %78, %79
  br i1 %80, label %then10, label %ifcont11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @93, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @92, i32 0, i32 0), i32 1, i32 2, i32 %72, i32 %77)
  call void @exit(i32 1)
  unreachable

ifcont11:                                         ; preds = %ifcont9
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 %82, %75
  %84 = add i32 %69, %83
  %85 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 2
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 1, %87
  %91 = add i32 %87, %89
  %92 = sub i32 %91, 1
  %93 = icmp slt i32 1, %87
  %94 = icmp sgt i32 1, %92
  %95 = or i1 %93, %94
  br i1 %95, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @94, i32 0, i32 0), i32 1, i32 3, i32 %87, i32 %92)
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %85, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = mul i32 %97, %90
  %99 = add i32 %84, %98
  %100 = getelementptr %array, %array* %45, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %99, %101
  %103 = getelementptr %array, %array* %45, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds i32, i32* %104, i32 %102
  store i32 3, i32* %105, align 4
  %106 = load %array*, %array** %c, align 8
  %107 = ptrtoint %array* %106 to i64
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %merge_allocated15, label %check_data14

check_data14:                                     ; preds = %ifcont13
  %109 = getelementptr %array, %array* %106, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = ptrtoint i32* %110 to i64
  %112 = icmp ne i64 %111, 0
  br label %merge_allocated15

merge_allocated15:                                ; preds = %check_data14, %ifcont13
  %is_allocated16 = phi i1 [ false, %ifcont13 ], [ %112, %check_data14 ]
  br i1 %is_allocated16, label %then17, label %else18

then17:                                           ; preds = %merge_allocated15
  %113 = getelementptr %array, %array* %106, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = alloca i8*, align 8
  %116 = bitcast i32* %114 to i8*
  store i8* %116, i8** %115, align 8
  %117 = load i8*, i8** %115, align 8
  call void @_lfortran_free(i8* %117)
  %118 = getelementptr %array, %array* %106, i32 0, i32 0
  store i32* null, i32** %118, align 8
  br label %ifcont19

else18:                                           ; preds = %merge_allocated15
  br label %ifcont19

ifcont19:                                         ; preds = %else18, %then17
  call void @h(%array** %c)
  %119 = call i32 @g(%array** %c)
  store i32 %119, i32* %r1, align 4
  %120 = load %array*, %array** %c, align 8
  %121 = ptrtoint %array* %120 to i64
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %merge_allocated21, label %check_data20

check_data20:                                     ; preds = %ifcont19
  %123 = getelementptr %array, %array* %120, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = ptrtoint i32* %124 to i64
  %126 = icmp ne i64 %125, 0
  br label %merge_allocated21

merge_allocated21:                                ; preds = %check_data20, %ifcont19
  %is_allocated22 = phi i1 [ false, %ifcont19 ], [ %126, %check_data20 ]
  %127 = xor i1 %is_allocated22, true
  br i1 %127, label %then23, label %ifcont24

then23:                                           ; preds = %merge_allocated21
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @97, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @96, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont24:                                         ; preds = %merge_allocated21
  %128 = getelementptr %array, %array* %120, i32 0, i32 2
  %129 = load %dimension_descriptor*, %dimension_descriptor** %128, align 8
  %130 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 0
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = sub i32 1, %132
  %136 = add i32 %132, %134
  %137 = sub i32 %136, 1
  %138 = icmp slt i32 1, %132
  %139 = icmp sgt i32 1, %137
  %140 = or i1 %138, %139
  br i1 %140, label %then25, label %ifcont26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @99, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @98, i32 0, i32 0), i32 1, i32 1, i32 %132, i32 %137)
  call void @exit(i32 1)
  unreachable

ifcont26:                                         ; preds = %ifcont24
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = mul i32 %142, %135
  %144 = add i32 0, %143
  %145 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 1
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 1, %147
  %151 = add i32 %147, %149
  %152 = sub i32 %151, 1
  %153 = icmp slt i32 1, %147
  %154 = icmp sgt i32 1, %152
  %155 = or i1 %153, %154
  br i1 %155, label %then27, label %ifcont28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @101, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @100, i32 0, i32 0), i32 1, i32 2, i32 %147, i32 %152)
  call void @exit(i32 1)
  unreachable

ifcont28:                                         ; preds = %ifcont26
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = mul i32 %157, %150
  %159 = add i32 %144, %158
  %160 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 2
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 1, %162
  %166 = add i32 %162, %164
  %167 = sub i32 %166, 1
  %168 = icmp slt i32 1, %162
  %169 = icmp sgt i32 1, %167
  %170 = or i1 %168, %169
  br i1 %170, label %then29, label %ifcont30

then29:                                           ; preds = %ifcont28
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @103, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @102, i32 0, i32 0), i32 1, i32 3, i32 %162, i32 %167)
  call void @exit(i32 1)
  unreachable

ifcont30:                                         ; preds = %ifcont28
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = mul i32 %172, %165
  %174 = add i32 %159, %173
  %175 = getelementptr %array, %array* %120, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %174, %176
  %178 = getelementptr %array, %array* %120, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = getelementptr inbounds i32, i32* %179, i32 %177
  %181 = load i32, i32* %180, align 4
  %182 = icmp ne i32 %181, 8
  br i1 %182, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @105, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @104, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %183 = alloca i64, align 8
  %184 = load %array*, %array** %c, align 8
  %185 = ptrtoint %array* %184 to i64
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %merge_allocated35, label %check_data34

check_data34:                                     ; preds = %ifcont33
  %187 = getelementptr %array, %array* %184, i32 0, i32 0
  %188 = load i32*, i32** %187, align 8
  %189 = ptrtoint i32* %188 to i64
  %190 = icmp ne i64 %189, 0
  br label %merge_allocated35

merge_allocated35:                                ; preds = %check_data34, %ifcont33
  %is_allocated36 = phi i1 [ false, %ifcont33 ], [ %190, %check_data34 ]
  %191 = xor i1 %is_allocated36, true
  br i1 %191, label %then37, label %ifcont38

then37:                                           ; preds = %merge_allocated35
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @108, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @107, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont38:                                         ; preds = %merge_allocated35
  %192 = getelementptr %array, %array* %184, i32 0, i32 2
  %193 = load %dimension_descriptor*, %dimension_descriptor** %192, align 8
  %194 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %193, i32 0
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 2
  %198 = load i32, i32* %197, align 4
  %199 = sub i32 1, %196
  %200 = add i32 %196, %198
  %201 = sub i32 %200, 1
  %202 = icmp slt i32 1, %196
  %203 = icmp sgt i32 1, %201
  %204 = or i1 %202, %203
  br i1 %204, label %then39, label %ifcont40

then39:                                           ; preds = %ifcont38
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @109, i32 0, i32 0), i32 1, i32 1, i32 %196, i32 %201)
  call void @exit(i32 1)
  unreachable

ifcont40:                                         ; preds = %ifcont38
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = mul i32 %206, %199
  %208 = add i32 0, %207
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %193, i32 1
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 2
  %213 = load i32, i32* %212, align 4
  %214 = sub i32 1, %211
  %215 = add i32 %211, %213
  %216 = sub i32 %215, 1
  %217 = icmp slt i32 1, %211
  %218 = icmp sgt i32 1, %216
  %219 = or i1 %217, %218
  br i1 %219, label %then41, label %ifcont42

then41:                                           ; preds = %ifcont40
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @112, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @111, i32 0, i32 0), i32 1, i32 2, i32 %211, i32 %216)
  call void @exit(i32 1)
  unreachable

ifcont42:                                         ; preds = %ifcont40
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = mul i32 %221, %214
  %223 = add i32 %208, %222
  %224 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %193, i32 2
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 2
  %228 = load i32, i32* %227, align 4
  %229 = sub i32 1, %226
  %230 = add i32 %226, %228
  %231 = sub i32 %230, 1
  %232 = icmp slt i32 1, %226
  %233 = icmp sgt i32 1, %231
  %234 = or i1 %232, %233
  br i1 %234, label %then43, label %ifcont44

then43:                                           ; preds = %ifcont42
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @114, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @113, i32 0, i32 0), i32 1, i32 3, i32 %226, i32 %231)
  call void @exit(i32 1)
  unreachable

ifcont44:                                         ; preds = %ifcont42
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = mul i32 %236, %229
  %238 = add i32 %223, %237
  %239 = getelementptr %array, %array* %184, i32 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = add i32 %238, %240
  %242 = getelementptr %array, %array* %184, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = getelementptr inbounds i32, i32* %243, i32 %241
  %245 = load i32, i32* %244, align 4
  %246 = alloca i32, align 4
  store i32 %245, i32* %246, align 4
  %247 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i64* %183, i32 0, i32 0, i32* %246)
  %248 = load i64, i64* %183, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %249 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %247, i8** %249, align 8
  %250 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %248, i64* %250, align 4
  %251 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %252 = load i8*, i8** %251, align 8
  %253 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %254 = load i64, i64* %253, align 4
  %255 = trunc i64 %254 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @115, i32 0, i32 0), i8* %252, i32 %255, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @106, i32 0, i32 0), i32 1)
  call void @_lfortran_free(i8* %247)
  %256 = load %array*, %array** %c, align 8
  %257 = ptrtoint %array* %256 to i64
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %merge_allocated46, label %check_data45

check_data45:                                     ; preds = %ifcont44
  %259 = getelementptr %array, %array* %256, i32 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = ptrtoint i32* %260 to i64
  %262 = icmp ne i64 %261, 0
  br label %merge_allocated46

merge_allocated46:                                ; preds = %check_data45, %ifcont44
  %is_allocated47 = phi i1 [ false, %ifcont44 ], [ %262, %check_data45 ]
  br i1 %is_allocated47, label %then48, label %else49

then48:                                           ; preds = %merge_allocated46
  %263 = getelementptr %array, %array* %256, i32 0, i32 0
  %264 = load i32*, i32** %263, align 8
  %265 = alloca i8*, align 8
  %266 = bitcast i32* %264 to i8*
  store i8* %266, i8** %265, align 8
  %267 = load i8*, i8** %265, align 8
  call void @_lfortran_free(i8* %267)
  %268 = getelementptr %array, %array* %256, i32 0, i32 0
  store i32* null, i32** %268, align 8
  br label %ifcont50

else49:                                           ; preds = %merge_allocated46
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont50
  ret i32 0
}

define void @f(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = ptrtoint %array* %0 to i32
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %then, label %else

then:                                             ; preds = %.entry
  %3 = alloca %array, align 8
  %4 = getelementptr %array, %array* %3, i32 0, i32 2
  %5 = alloca i32, align 4
  store i32 3, i32* %5, align 4
  %6 = load i32, i32* %5, align 4
  %7 = alloca %dimension_descriptor, i32 %6, align 8
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  store i32 1, i32* %8, align 4
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %9, align 4
  store %dimension_descriptor* %7, %dimension_descriptor** %4, align 8
  %10 = getelementptr %array, %array* %3, i32 0, i32 4
  store i32 3, i32* %10, align 4
  store %array* %3, %array** %c, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %11 = load %array*, %array** %c, align 8
  %12 = getelementptr %array, %array* %11, i32 0, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr %array, %array* %11, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 1
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  store i32 1, i32* %16, align 4
  store i32 1, i32* %17, align 4
  store i32 3, i32* %18, align 4
  %19 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 0
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 1
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %19, i32 0, i32 2
  store i32 3, i32* %20, align 4
  store i32 1, i32* %21, align 4
  store i32 3, i32* %22, align 4
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  store i32 9, i32* %24, align 4
  store i32 1, i32* %25, align 4
  store i32 3, i32* %26, align 4
  %27 = getelementptr %array, %array* %11, i32 0, i32 0
  %28 = alloca i32, align 4
  store i32 108, i32* %28, align 4
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = call i8* @_lfortran_malloc(i64 %30)
  %32 = bitcast i8* %31 to i32*
  store i32* %32, i32** %27, align 8
  %33 = load %array*, %array** %c, align 8
  %34 = ptrtoint %array* %33 to i64
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %merge_allocated, label %check_data

check_data:                                       ; preds = %ifcont
  %36 = getelementptr %array, %array* %33, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = ptrtoint i32* %37 to i64
  %39 = icmp ne i64 %38, 0
  br label %merge_allocated

merge_allocated:                                  ; preds = %check_data, %ifcont
  %is_allocated = phi i1 [ false, %ifcont ], [ %39, %check_data ]
  %40 = xor i1 %is_allocated, true
  br i1 %40, label %then1, label %ifcont2

then1:                                            ; preds = %merge_allocated
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont2:                                          ; preds = %merge_allocated
  %41 = getelementptr %array, %array* %33, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 1, %45
  %49 = add i32 %45, %47
  %50 = sub i32 %49, 1
  %51 = icmp slt i32 1, %45
  %52 = icmp sgt i32 1, %50
  %53 = or i1 %51, %52
  br i1 %53, label %then3, label %ifcont4

then3:                                            ; preds = %ifcont2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1, i32 1, i32 %45, i32 %50)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %ifcont2
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = mul i32 %55, %48
  %57 = add i32 0, %56
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 1, %60
  %64 = add i32 %60, %62
  %65 = sub i32 %64, 1
  %66 = icmp slt i32 1, %60
  %67 = icmp sgt i32 1, %65
  %68 = or i1 %66, %67
  br i1 %68, label %then5, label %ifcont6

then5:                                            ; preds = %ifcont4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1, i32 2, i32 %60, i32 %65)
  call void @exit(i32 1)
  unreachable

ifcont6:                                          ; preds = %ifcont4
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = mul i32 %70, %63
  %72 = add i32 %57, %71
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 2
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 1, %75
  %79 = add i32 %75, %77
  %80 = sub i32 %79, 1
  %81 = icmp slt i32 1, %75
  %82 = icmp sgt i32 1, %80
  %83 = or i1 %81, %82
  br i1 %83, label %then7, label %ifcont8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1, i32 3, i32 %75, i32 %80)
  call void @exit(i32 1)
  unreachable

ifcont8:                                          ; preds = %ifcont6
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = mul i32 %85, %78
  %87 = add i32 %72, %86
  %88 = getelementptr %array, %array* %33, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %87, %89
  %91 = getelementptr %array, %array* %33, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = getelementptr inbounds i32, i32* %92, i32 %90
  store i32 99, i32* %93, align 4
  br label %return

return:                                           ; preds = %ifcont8
  ret void
}

define i32 @g(%array** %x) {
.entry:
  %r = alloca i32, align 4
  %0 = alloca i64, align 8
  %1 = load %array*, %array** %x, align 8
  %2 = ptrtoint %array* %1 to i64
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %merge_allocated, label %check_data

check_data:                                       ; preds = %.entry
  %4 = getelementptr %array, %array* %1, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = ptrtoint i32* %5 to i64
  %7 = icmp ne i64 %6, 0
  br label %merge_allocated

merge_allocated:                                  ; preds = %check_data, %.entry
  %is_allocated = phi i1 [ false, %.entry ], [ %7, %check_data ]
  %8 = xor i1 %is_allocated, true
  br i1 %8, label %then, label %ifcont

then:                                             ; preds = %merge_allocated
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont:                                           ; preds = %merge_allocated
  %9 = getelementptr %array, %array* %1, i32 0, i32 2
  %10 = load %dimension_descriptor*, %dimension_descriptor** %9, align 8
  %11 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %10, i32 0
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = sub i32 1, %13
  %17 = add i32 %13, %15
  %18 = sub i32 %17, 1
  %19 = icmp slt i32 1, %13
  %20 = icmp sgt i32 1, %18
  %21 = or i1 %19, %20
  br i1 %21, label %then1, label %ifcont2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i32 1, i32 1, i32 %13, i32 %18)
  call void @exit(i32 1)
  unreachable

ifcont2:                                          ; preds = %ifcont
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = mul i32 %23, %16
  %25 = add i32 0, %24
  %26 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %10, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 1, %28
  %32 = add i32 %28, %30
  %33 = sub i32 %32, 1
  %34 = icmp slt i32 1, %28
  %35 = icmp sgt i32 1, %33
  %36 = or i1 %34, %35
  br i1 %36, label %then3, label %ifcont4

then3:                                            ; preds = %ifcont2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 1, i32 2, i32 %28, i32 %33)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %ifcont2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = mul i32 %38, %31
  %40 = add i32 %25, %39
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %10, i32 2
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 1, %43
  %47 = add i32 %43, %45
  %48 = sub i32 %47, 1
  %49 = icmp slt i32 1, %43
  %50 = icmp sgt i32 1, %48
  %51 = or i1 %49, %50
  br i1 %51, label %then5, label %ifcont6

then5:                                            ; preds = %ifcont4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i32 0, i32 0), i32 1, i32 3, i32 %43, i32 %48)
  call void @exit(i32 1)
  unreachable

ifcont6:                                          ; preds = %ifcont4
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = mul i32 %53, %46
  %55 = add i32 %40, %54
  %56 = getelementptr %array, %array* %1, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %55, %57
  %59 = getelementptr %array, %array* %1, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds i32, i32* %60, i32 %58
  %62 = load i32, i32* %61, align 4
  %63 = alloca i32, align 4
  store i32 %62, i32* %63, align 4
  %64 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i64* %0, i32 0, i32 0, i32* %63)
  %65 = load i64, i64* %0, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %64, i8** %66, align 8
  %67 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %65, i64* %67, align 4
  %68 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* %69, i32 %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 1)
  call void @_lfortran_free(i8* %64)
  %73 = load %array*, %array** %x, align 8
  %74 = ptrtoint %array* %73 to i64
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %merge_allocated8, label %check_data7

check_data7:                                      ; preds = %ifcont6
  %76 = getelementptr %array, %array* %73, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = ptrtoint i32* %77 to i64
  %79 = icmp ne i64 %78, 0
  br label %merge_allocated8

merge_allocated8:                                 ; preds = %check_data7, %ifcont6
  %is_allocated9 = phi i1 [ false, %ifcont6 ], [ %79, %check_data7 ]
  %80 = xor i1 %is_allocated9, true
  br i1 %80, label %then10, label %ifcont11

then10:                                           ; preds = %merge_allocated8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @18, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont11:                                         ; preds = %merge_allocated8
  %81 = getelementptr %array, %array* %73, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 1, %85
  %89 = add i32 %85, %87
  %90 = sub i32 %89, 1
  %91 = icmp slt i32 1, %85
  %92 = icmp sgt i32 1, %90
  %93 = or i1 %91, %92
  br i1 %93, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @20, i32 0, i32 0), i32 1, i32 1, i32 %85, i32 %90)
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 %95, %88
  %97 = add i32 0, %96
  %98 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 1
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = sub i32 1, %100
  %104 = add i32 %100, %102
  %105 = sub i32 %104, 1
  %106 = icmp slt i32 1, %100
  %107 = icmp sgt i32 1, %105
  %108 = or i1 %106, %107
  br i1 %108, label %then14, label %ifcont15

then14:                                           ; preds = %ifcont13
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i32 1, i32 2, i32 %100, i32 %105)
  call void @exit(i32 1)
  unreachable

ifcont15:                                         ; preds = %ifcont13
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = mul i32 %110, %103
  %112 = add i32 %97, %111
  %113 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 2
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = sub i32 1, %115
  %119 = add i32 %115, %117
  %120 = sub i32 %119, 1
  %121 = icmp slt i32 1, %115
  %122 = icmp sgt i32 1, %120
  %123 = or i1 %121, %122
  br i1 %123, label %then16, label %ifcont17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0), i32 1, i32 3, i32 %115, i32 %120)
  call void @exit(i32 1)
  unreachable

ifcont17:                                         ; preds = %ifcont15
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 %125, %118
  %127 = add i32 %112, %126
  %128 = getelementptr %array, %array* %73, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %127, %129
  %131 = getelementptr %array, %array* %73, i32 0, i32 0
  %132 = load i32*, i32** %131, align 8
  %133 = getelementptr inbounds i32, i32* %132, i32 %130
  %134 = load i32, i32* %133, align 4
  %135 = icmp ne i32 %134, 8
  br i1 %135, label %then18, label %else

then18:                                           ; preds = %ifcont17
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @26, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont19

else:                                             ; preds = %ifcont17
  br label %ifcont19

ifcont19:                                         ; preds = %else, %then18
  %136 = load %array*, %array** %x, align 8
  %137 = ptrtoint %array* %136 to i64
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %merge_allocated21, label %check_data20

check_data20:                                     ; preds = %ifcont19
  %139 = getelementptr %array, %array* %136, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = ptrtoint i32* %140 to i64
  %142 = icmp ne i64 %141, 0
  br label %merge_allocated21

merge_allocated21:                                ; preds = %check_data20, %ifcont19
  %is_allocated22 = phi i1 [ false, %ifcont19 ], [ %142, %check_data20 ]
  br i1 %is_allocated22, label %then23, label %else24

then23:                                           ; preds = %merge_allocated21
  %143 = getelementptr %array, %array* %136, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = alloca i8*, align 8
  %146 = bitcast i32* %144 to i8*
  store i8* %146, i8** %145, align 8
  %147 = load i8*, i8** %145, align 8
  call void @_lfortran_free(i8* %147)
  %148 = getelementptr %array, %array* %136, i32 0, i32 0
  store i32* null, i32** %148, align 8
  br label %ifcont25

else24:                                           ; preds = %merge_allocated21
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %then23
  call void @f(%array** %x)
  %149 = alloca i64, align 8
  %150 = load %array*, %array** %x, align 8
  %151 = ptrtoint %array* %150 to i64
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %merge_allocated27, label %check_data26

check_data26:                                     ; preds = %ifcont25
  %153 = getelementptr %array, %array* %150, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = ptrtoint i32* %154 to i64
  %156 = icmp ne i64 %155, 0
  br label %merge_allocated27

merge_allocated27:                                ; preds = %check_data26, %ifcont25
  %is_allocated28 = phi i1 [ false, %ifcont25 ], [ %156, %check_data26 ]
  %157 = xor i1 %is_allocated28, true
  br i1 %157, label %then29, label %ifcont30

then29:                                           ; preds = %merge_allocated27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont30:                                         ; preds = %merge_allocated27
  %158 = getelementptr %array, %array* %150, i32 0, i32 2
  %159 = load %dimension_descriptor*, %dimension_descriptor** %158, align 8
  %160 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 0
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 1, %162
  %166 = add i32 %162, %164
  %167 = sub i32 %166, 1
  %168 = icmp slt i32 1, %162
  %169 = icmp sgt i32 1, %167
  %170 = or i1 %168, %169
  br i1 %170, label %then31, label %ifcont32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0), i32 1, i32 1, i32 %162, i32 %167)
  call void @exit(i32 1)
  unreachable

ifcont32:                                         ; preds = %ifcont30
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = mul i32 %172, %165
  %174 = add i32 0, %173
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 1
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = sub i32 1, %177
  %181 = add i32 %177, %179
  %182 = sub i32 %181, 1
  %183 = icmp slt i32 1, %177
  %184 = icmp sgt i32 1, %182
  %185 = or i1 %183, %184
  br i1 %185, label %then33, label %ifcont34

then33:                                           ; preds = %ifcont32
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @33, i32 0, i32 0), i32 1, i32 2, i32 %177, i32 %182)
  call void @exit(i32 1)
  unreachable

ifcont34:                                         ; preds = %ifcont32
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = mul i32 %187, %180
  %189 = add i32 %174, %188
  %190 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 2
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = sub i32 1, %192
  %196 = add i32 %192, %194
  %197 = sub i32 %196, 1
  %198 = icmp slt i32 1, %192
  %199 = icmp sgt i32 1, %197
  %200 = or i1 %198, %199
  br i1 %200, label %then35, label %ifcont36

then35:                                           ; preds = %ifcont34
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), i32 1, i32 3, i32 %192, i32 %197)
  call void @exit(i32 1)
  unreachable

ifcont36:                                         ; preds = %ifcont34
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %190, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = mul i32 %202, %195
  %204 = add i32 %189, %203
  %205 = getelementptr %array, %array* %150, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = add i32 %204, %206
  %208 = getelementptr %array, %array* %150, i32 0, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = getelementptr inbounds i32, i32* %209, i32 %207
  %211 = load i32, i32* %210, align 4
  %212 = alloca i32, align 4
  store i32 %211, i32* %212, align 4
  %213 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i64* %149, i32 0, i32 0, i32* %212)
  %214 = load i64, i64* %149, align 4
  %stringFormat_desc37 = alloca %string_descriptor, align 8
  %215 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 0
  store i8* %213, i8** %215, align 8
  %216 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 1
  store i64 %214, i64* %216, align 4
  %217 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 1
  %220 = load i64, i64* %219, align 4
  %221 = trunc i64 %220 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i32 0, i32 0), i8* %218, i32 %221, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0), i32 1)
  call void @_lfortran_free(i8* %213)
  %222 = load %array*, %array** %x, align 8
  %223 = ptrtoint %array* %222 to i64
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %merge_allocated39, label %check_data38

check_data38:                                     ; preds = %ifcont36
  %225 = getelementptr %array, %array* %222, i32 0, i32 0
  %226 = load i32*, i32** %225, align 8
  %227 = ptrtoint i32* %226 to i64
  %228 = icmp ne i64 %227, 0
  br label %merge_allocated39

merge_allocated39:                                ; preds = %check_data38, %ifcont36
  %is_allocated40 = phi i1 [ false, %ifcont36 ], [ %228, %check_data38 ]
  %229 = xor i1 %is_allocated40, true
  br i1 %229, label %then41, label %ifcont42

then41:                                           ; preds = %merge_allocated39
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont42:                                         ; preds = %merge_allocated39
  %230 = getelementptr %array, %array* %222, i32 0, i32 2
  %231 = load %dimension_descriptor*, %dimension_descriptor** %230, align 8
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 0
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = sub i32 1, %234
  %238 = add i32 %234, %236
  %239 = sub i32 %238, 1
  %240 = icmp slt i32 1, %234
  %241 = icmp sgt i32 1, %239
  %242 = or i1 %240, %241
  br i1 %242, label %then43, label %ifcont44

then43:                                           ; preds = %ifcont42
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0), i32 1, i32 1, i32 %234, i32 %239)
  call void @exit(i32 1)
  unreachable

ifcont44:                                         ; preds = %ifcont42
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = mul i32 %244, %237
  %246 = add i32 0, %245
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 1
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 2
  %251 = load i32, i32* %250, align 4
  %252 = sub i32 1, %249
  %253 = add i32 %249, %251
  %254 = sub i32 %253, 1
  %255 = icmp slt i32 1, %249
  %256 = icmp sgt i32 1, %254
  %257 = or i1 %255, %256
  br i1 %257, label %then45, label %ifcont46

then45:                                           ; preds = %ifcont44
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0), i32 1, i32 2, i32 %249, i32 %254)
  call void @exit(i32 1)
  unreachable

ifcont46:                                         ; preds = %ifcont44
  %258 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = mul i32 %259, %252
  %261 = add i32 %246, %260
  %262 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 2
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = sub i32 1, %264
  %268 = add i32 %264, %266
  %269 = sub i32 %268, 1
  %270 = icmp slt i32 1, %264
  %271 = icmp sgt i32 1, %269
  %272 = or i1 %270, %271
  br i1 %272, label %then47, label %ifcont48

then47:                                           ; preds = %ifcont46
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @44, i32 0, i32 0), i32 1, i32 3, i32 %264, i32 %269)
  call void @exit(i32 1)
  unreachable

ifcont48:                                         ; preds = %ifcont46
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = mul i32 %274, %267
  %276 = add i32 %261, %275
  %277 = getelementptr %array, %array* %222, i32 0, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = add i32 %276, %278
  %280 = getelementptr %array, %array* %222, i32 0, i32 0
  %281 = load i32*, i32** %280, align 8
  %282 = getelementptr inbounds i32, i32* %281, i32 %279
  %283 = load i32, i32* %282, align 4
  %284 = icmp ne i32 %283, 99
  br i1 %284, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %285 = load %array*, %array** %x, align 8
  %286 = ptrtoint %array* %285 to i64
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %merge_allocated53, label %check_data52

check_data52:                                     ; preds = %ifcont51
  %288 = getelementptr %array, %array* %285, i32 0, i32 0
  %289 = load i32*, i32** %288, align 8
  %290 = ptrtoint i32* %289 to i64
  %291 = icmp ne i64 %290, 0
  br label %merge_allocated53

merge_allocated53:                                ; preds = %check_data52, %ifcont51
  %is_allocated54 = phi i1 [ false, %ifcont51 ], [ %291, %check_data52 ]
  %292 = xor i1 %is_allocated54, true
  br i1 %292, label %then55, label %ifcont56

then55:                                           ; preds = %merge_allocated53
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont56:                                         ; preds = %merge_allocated53
  %293 = getelementptr %array, %array* %285, i32 0, i32 2
  %294 = load %dimension_descriptor*, %dimension_descriptor** %293, align 8
  %295 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %294, i32 0
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = sub i32 1, %297
  %301 = add i32 %297, %299
  %302 = sub i32 %301, 1
  %303 = icmp slt i32 1, %297
  %304 = icmp sgt i32 1, %302
  %305 = or i1 %303, %304
  br i1 %305, label %then57, label %ifcont58

then57:                                           ; preds = %ifcont56
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @50, i32 0, i32 0), i32 1, i32 1, i32 %297, i32 %302)
  call void @exit(i32 1)
  unreachable

ifcont58:                                         ; preds = %ifcont56
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 %307, %300
  %309 = add i32 0, %308
  %310 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %294, i32 1
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 1
  %312 = load i32, i32* %311, align 4
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = sub i32 1, %312
  %316 = add i32 %312, %314
  %317 = sub i32 %316, 1
  %318 = icmp slt i32 1, %312
  %319 = icmp sgt i32 1, %317
  %320 = or i1 %318, %319
  br i1 %320, label %then59, label %ifcont60

then59:                                           ; preds = %ifcont58
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @53, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i32 0, i32 0), i32 1, i32 2, i32 %312, i32 %317)
  call void @exit(i32 1)
  unreachable

ifcont60:                                         ; preds = %ifcont58
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = mul i32 %322, %315
  %324 = add i32 %309, %323
  %325 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %294, i32 2
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 2
  %329 = load i32, i32* %328, align 4
  %330 = sub i32 1, %327
  %331 = add i32 %327, %329
  %332 = sub i32 %331, 1
  %333 = icmp slt i32 1, %327
  %334 = icmp sgt i32 1, %332
  %335 = or i1 %333, %334
  br i1 %335, label %then61, label %ifcont62

then61:                                           ; preds = %ifcont60
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i32 0, i32 0), i32 1, i32 3, i32 %327, i32 %332)
  call void @exit(i32 1)
  unreachable

ifcont62:                                         ; preds = %ifcont60
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 0
  %337 = load i32, i32* %336, align 4
  %338 = mul i32 %337, %330
  %339 = add i32 %324, %338
  %340 = getelementptr %array, %array* %285, i32 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = add i32 %339, %341
  %343 = getelementptr %array, %array* %285, i32 0, i32 0
  %344 = load i32*, i32** %343, align 8
  %345 = getelementptr inbounds i32, i32* %344, i32 %342
  store i32 8, i32* %345, align 4
  store i32 0, i32* %r, align 4
  br label %return

return:                                           ; preds = %ifcont62
  %346 = load i32, i32* %r, align 4
  ret i32 %346
}

define void @h(%array** %c) {
.entry:
  %0 = load %array*, %array** %c, align 8
  %1 = load %array*, %array** %c, align 8
  %2 = ptrtoint %array* %1 to i64
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %merge_allocated, label %check_data

check_data:                                       ; preds = %.entry
  %4 = getelementptr %array, %array* %1, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = ptrtoint i32* %5 to i64
  %7 = icmp ne i64 %6, 0
  br label %merge_allocated

merge_allocated:                                  ; preds = %check_data, %.entry
  %is_allocated = phi i1 [ false, %.entry ], [ %7, %check_data ]
  br i1 %is_allocated, label %then, label %else

then:                                             ; preds = %merge_allocated
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @56, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %merge_allocated
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %8 = load %array*, %array** %c, align 8
  %9 = ptrtoint %array* %8 to i64
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %merge_allocated2, label %check_data1

check_data1:                                      ; preds = %ifcont
  %11 = getelementptr %array, %array* %8, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = ptrtoint i32* %12 to i64
  %14 = icmp ne i64 %13, 0
  br label %merge_allocated2

merge_allocated2:                                 ; preds = %check_data1, %ifcont
  %is_allocated3 = phi i1 [ false, %ifcont ], [ %14, %check_data1 ]
  br i1 %is_allocated3, label %then4, label %else5

then4:                                            ; preds = %merge_allocated2
  %15 = getelementptr %array, %array* %8, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = alloca i8*, align 8
  %18 = bitcast i32* %16 to i8*
  store i8* %18, i8** %17, align 8
  %19 = load i8*, i8** %17, align 8
  call void @_lfortran_free(i8* %19)
  %20 = getelementptr %array, %array* %8, i32 0, i32 0
  store i32* null, i32** %20, align 8
  br label %ifcont6

else5:                                            ; preds = %merge_allocated2
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  call void @f(%array** %c)
  %21 = alloca i64, align 8
  %22 = load %array*, %array** %c, align 8
  %23 = ptrtoint %array* %22 to i64
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %merge_allocated8, label %check_data7

check_data7:                                      ; preds = %ifcont6
  %25 = getelementptr %array, %array* %22, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = ptrtoint i32* %26 to i64
  %28 = icmp ne i64 %27, 0
  br label %merge_allocated8

merge_allocated8:                                 ; preds = %check_data7, %ifcont6
  %is_allocated9 = phi i1 [ false, %ifcont6 ], [ %28, %check_data7 ]
  %29 = xor i1 %is_allocated9, true
  br i1 %29, label %then10, label %ifcont11

then10:                                           ; preds = %merge_allocated8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @59, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont11:                                         ; preds = %merge_allocated8
  %30 = getelementptr %array, %array* %22, i32 0, i32 2
  %31 = load %dimension_descriptor*, %dimension_descriptor** %30, align 8
  %32 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 1, %34
  %38 = add i32 %34, %36
  %39 = sub i32 %38, 1
  %40 = icmp slt i32 1, %34
  %41 = icmp sgt i32 1, %39
  %42 = or i1 %40, %41
  br i1 %42, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @62, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @61, i32 0, i32 0), i32 1, i32 1, i32 %34, i32 %39)
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = mul i32 %44, %37
  %46 = add i32 0, %45
  %47 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 1
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 1, %49
  %53 = add i32 %49, %51
  %54 = sub i32 %53, 1
  %55 = icmp slt i32 1, %49
  %56 = icmp sgt i32 1, %54
  %57 = or i1 %55, %56
  br i1 %57, label %then14, label %ifcont15

then14:                                           ; preds = %ifcont13
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @63, i32 0, i32 0), i32 1, i32 2, i32 %49, i32 %54)
  call void @exit(i32 1)
  unreachable

ifcont15:                                         ; preds = %ifcont13
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = mul i32 %59, %52
  %61 = add i32 %46, %60
  %62 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 2
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 1, %64
  %68 = add i32 %64, %66
  %69 = sub i32 %68, 1
  %70 = icmp slt i32 1, %64
  %71 = icmp sgt i32 1, %69
  %72 = or i1 %70, %71
  br i1 %72, label %then16, label %ifcont17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @66, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @65, i32 0, i32 0), i32 1, i32 3, i32 %64, i32 %69)
  call void @exit(i32 1)
  unreachable

ifcont17:                                         ; preds = %ifcont15
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 %74, %67
  %76 = add i32 %61, %75
  %77 = getelementptr %array, %array* %22, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %76, %78
  %80 = getelementptr %array, %array* %22, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds i32, i32* %81, i32 %79
  %83 = load i32, i32* %82, align 4
  %84 = alloca i32, align 4
  store i32 %83, i32* %84, align 4
  %85 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i64* %21, i32 0, i32 0, i32* %84)
  %86 = load i64, i64* %21, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %87 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %85, i8** %87, align 8
  %88 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %86, i64* %88, align 4
  %89 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %92 = load i64, i64* %91, align 4
  %93 = trunc i64 %92 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @67, i32 0, i32 0), i8* %90, i32 %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0), i32 1)
  call void @_lfortran_free(i8* %85)
  %94 = load %array*, %array** %c, align 8
  %95 = ptrtoint %array* %94 to i64
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %merge_allocated19, label %check_data18

check_data18:                                     ; preds = %ifcont17
  %97 = getelementptr %array, %array* %94, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = ptrtoint i32* %98 to i64
  %100 = icmp ne i64 %99, 0
  br label %merge_allocated19

merge_allocated19:                                ; preds = %check_data18, %ifcont17
  %is_allocated20 = phi i1 [ false, %ifcont17 ], [ %100, %check_data18 ]
  %101 = xor i1 %is_allocated20, true
  br i1 %101, label %then21, label %ifcont22

then21:                                           ; preds = %merge_allocated19
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @69, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont22:                                         ; preds = %merge_allocated19
  %102 = getelementptr %array, %array* %94, i32 0, i32 2
  %103 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  %104 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = sub i32 1, %106
  %110 = add i32 %106, %108
  %111 = sub i32 %110, 1
  %112 = icmp slt i32 1, %106
  %113 = icmp sgt i32 1, %111
  %114 = or i1 %112, %113
  br i1 %114, label %then23, label %ifcont24

then23:                                           ; preds = %ifcont22
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @70, i32 0, i32 0), i32 1, i32 1, i32 %106, i32 %111)
  call void @exit(i32 1)
  unreachable

ifcont24:                                         ; preds = %ifcont22
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = mul i32 %116, %109
  %118 = add i32 0, %117
  %119 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 1
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = sub i32 1, %121
  %125 = add i32 %121, %123
  %126 = sub i32 %125, 1
  %127 = icmp slt i32 1, %121
  %128 = icmp sgt i32 1, %126
  %129 = or i1 %127, %128
  br i1 %129, label %then25, label %ifcont26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @73, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @72, i32 0, i32 0), i32 1, i32 2, i32 %121, i32 %126)
  call void @exit(i32 1)
  unreachable

ifcont26:                                         ; preds = %ifcont24
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = mul i32 %131, %124
  %133 = add i32 %118, %132
  %134 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 2
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 1, %136
  %140 = add i32 %136, %138
  %141 = sub i32 %140, 1
  %142 = icmp slt i32 1, %136
  %143 = icmp sgt i32 1, %141
  %144 = or i1 %142, %143
  br i1 %144, label %then27, label %ifcont28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0), i32 1, i32 3, i32 %136, i32 %141)
  call void @exit(i32 1)
  unreachable

ifcont28:                                         ; preds = %ifcont26
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = mul i32 %146, %139
  %148 = add i32 %133, %147
  %149 = getelementptr %array, %array* %94, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = add i32 %148, %150
  %152 = getelementptr %array, %array* %94, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds i32, i32* %153, i32 %151
  %155 = load i32, i32* %154, align 4
  %156 = icmp ne i32 %155, 99
  br i1 %156, label %then29, label %else30

then29:                                           ; preds = %ifcont28
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @76, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont31

else30:                                           ; preds = %ifcont28
  br label %ifcont31

ifcont31:                                         ; preds = %else30, %then29
  %157 = load %array*, %array** %c, align 8
  %158 = ptrtoint %array* %157 to i64
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %merge_allocated33, label %check_data32

check_data32:                                     ; preds = %ifcont31
  %160 = getelementptr %array, %array* %157, i32 0, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = ptrtoint i32* %161 to i64
  %163 = icmp ne i64 %162, 0
  br label %merge_allocated33

merge_allocated33:                                ; preds = %check_data32, %ifcont31
  %is_allocated34 = phi i1 [ false, %ifcont31 ], [ %163, %check_data32 ]
  %164 = xor i1 %is_allocated34, true
  br i1 %164, label %then35, label %ifcont36

then35:                                           ; preds = %merge_allocated33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @78, i32 0, i32 0))
  call void @exit(i32 1)
  unreachable

ifcont36:                                         ; preds = %merge_allocated33
  %165 = getelementptr %array, %array* %157, i32 0, i32 2
  %166 = load %dimension_descriptor*, %dimension_descriptor** %165, align 8
  %167 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = sub i32 1, %169
  %173 = add i32 %169, %171
  %174 = sub i32 %173, 1
  %175 = icmp slt i32 1, %169
  %176 = icmp sgt i32 1, %174
  %177 = or i1 %175, %176
  br i1 %177, label %then37, label %ifcont38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @81, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @80, i32 0, i32 0), i32 1, i32 1, i32 %169, i32 %174)
  call void @exit(i32 1)
  unreachable

ifcont38:                                         ; preds = %ifcont36
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = mul i32 %179, %172
  %181 = add i32 0, %180
  %182 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 1
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 1, %184
  %188 = add i32 %184, %186
  %189 = sub i32 %188, 1
  %190 = icmp slt i32 1, %184
  %191 = icmp sgt i32 1, %189
  %192 = or i1 %190, %191
  br i1 %192, label %then39, label %ifcont40

then39:                                           ; preds = %ifcont38
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @82, i32 0, i32 0), i32 1, i32 2, i32 %184, i32 %189)
  call void @exit(i32 1)
  unreachable

ifcont40:                                         ; preds = %ifcont38
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 %194, %187
  %196 = add i32 %181, %195
  %197 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 2
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = sub i32 1, %199
  %203 = add i32 %199, %201
  %204 = sub i32 %203, 1
  %205 = icmp slt i32 1, %199
  %206 = icmp sgt i32 1, %204
  %207 = or i1 %205, %206
  br i1 %207, label %then41, label %ifcont42

then41:                                           ; preds = %ifcont40
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @85, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @84, i32 0, i32 0), i32 1, i32 3, i32 %199, i32 %204)
  call void @exit(i32 1)
  unreachable

ifcont42:                                         ; preds = %ifcont40
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = mul i32 %209, %202
  %211 = add i32 %196, %210
  %212 = getelementptr %array, %array* %157, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = add i32 %211, %213
  %215 = getelementptr %array, %array* %157, i32 0, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = getelementptr inbounds i32, i32* %216, i32 %214
  store i32 8, i32* %217, align 4
  br label %return

return:                                           ; preds = %ifcont42
  ret void
}

declare i8* @_lfortran_malloc(i64)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lfortran_free(i8*)

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lpython_free_argv()
