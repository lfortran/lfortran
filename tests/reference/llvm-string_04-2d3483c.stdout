; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i8**, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"%s%s%s%s%s%s%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %greetings = alloca %array, align 8
  %2 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array, %array* %greetings, i32 0, i32 4
  store i32 1, i32* %6, align 4
  %7 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 false, i1* %7, align 1
  %user_data = alloca %array, align 8
  %8 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = alloca %dimension_descriptor, i32 %10, align 8
  store %dimension_descriptor* %11, %dimension_descriptor** %8, align 8
  %12 = getelementptr %array, %array* %user_data, i32 0, i32 4
  store i32 1, i32* %12, align 4
  %13 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 false, i1* %13, align 1
  %14 = getelementptr %array, %array* %user_data, i32 0, i32 1
  store i32 0, i32* %14, align 4
  %15 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 true, i1* %15, align 1
  %16 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %17 = load %dimension_descriptor*, %dimension_descriptor** %16, align 8
  %18 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %17, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 1
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 2
  store i32 1, i32* %19, align 4
  store i32 1, i32* %20, align 4
  store i32 3, i32* %21, align 4
  %22 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %23 = alloca i32, align 4
  store i32 24, i32* %23, align 4
  %24 = load i32, i32* %23, align 4
  %25 = call i8* (i32, ...) @_lfortran_malloc(i32 %24)
  %26 = bitcast i8* %25 to i8**
  store i8** %26, i8*** %22, align 8
  %27 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sub i32 1, %31
  %33 = mul i32 1, %32
  %34 = add i32 0, %33
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = mul i32 1, %36
  %38 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %39 = load i8**, i8*** %38, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i32 %34
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %40, align 8
  %41 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 2, %45
  %47 = mul i32 1, %46
  %48 = add i32 0, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 1, %50
  %52 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %53 = load i8**, i8*** %52, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i32 %48
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8** %54, align 8
  %55 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %56 = load %dimension_descriptor*, %dimension_descriptor** %55, align 8
  %57 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %56, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 3, %59
  %61 = mul i32 1, %60
  %62 = add i32 0, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 1, %64
  %66 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %67 = load i8**, i8*** %66, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i32 %62
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8** %68, align 8
  %69 = getelementptr %array, %array* %greetings, i32 0, i32 1
  store i32 0, i32* %69, align 4
  %70 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 true, i1* %70, align 1
  %71 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 0
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 2
  store i32 1, i32* %74, align 4
  store i32 1, i32* %75, align 4
  store i32 5, i32* %76, align 4
  %77 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %78 = alloca i32, align 4
  store i32 40, i32* %78, align 4
  %79 = load i32, i32* %78, align 4
  %80 = call i8* (i32, ...) @_lfortran_malloc(i32 %79)
  %81 = bitcast i8* %80 to i8**
  store i8** %81, i8*** %77, align 8
  %82 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %83 = load %dimension_descriptor*, %dimension_descriptor** %82, align 8
  %84 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %83, i32 0
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 1, %86
  %88 = mul i32 1, %87
  %89 = add i32 0, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 1, %91
  %93 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %94 = load i8**, i8*** %93, align 8
  %95 = getelementptr inbounds i8*, i8** %94, i32 %89
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %95, align 8
  %96 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %97 = load %dimension_descriptor*, %dimension_descriptor** %96, align 8
  %98 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %97, i32 0
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = sub i32 2, %100
  %102 = mul i32 1, %101
  %103 = add i32 0, %102
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = mul i32 1, %105
  %107 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %108 = load i8**, i8*** %107, align 8
  %109 = getelementptr inbounds i8*, i8** %108, i32 %103
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %109, align 8
  %110 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %111 = load %dimension_descriptor*, %dimension_descriptor** %110, align 8
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %111, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 3, %114
  %116 = mul i32 1, %115
  %117 = add i32 0, %116
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = mul i32 1, %119
  %121 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %122 = load i8**, i8*** %121, align 8
  %123 = getelementptr inbounds i8*, i8** %122, i32 %117
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %123, align 8
  %124 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %125 = load %dimension_descriptor*, %dimension_descriptor** %124, align 8
  %126 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %125, i32 0
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = sub i32 4, %128
  %130 = mul i32 1, %129
  %131 = add i32 0, %130
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = mul i32 1, %133
  %135 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %136 = load i8**, i8*** %135, align 8
  %137 = getelementptr inbounds i8*, i8** %136, i32 %131
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8** %137, align 8
  %138 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %139 = load %dimension_descriptor*, %dimension_descriptor** %138, align 8
  %140 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %139, i32 0
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = sub i32 5, %142
  %144 = mul i32 1, %143
  %145 = add i32 0, %144
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %140, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = mul i32 1, %147
  %149 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %150 = load i8**, i8*** %149, align 8
  %151 = getelementptr inbounds i8*, i8** %150, i32 %145
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8** %151, align 8
  %152 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %153 = load %dimension_descriptor*, %dimension_descriptor** %152, align 8
  %154 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %153, i32 0
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 1, %156
  %158 = mul i32 1, %157
  %159 = add i32 0, %158
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = mul i32 1, %161
  %163 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %164 = load i8**, i8*** %163, align 8
  %165 = getelementptr inbounds i8*, i8** %164, i32 %159
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %168 = load %dimension_descriptor*, %dimension_descriptor** %167, align 8
  %169 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %168, i32 0
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %169, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = sub i32 2, %171
  %173 = mul i32 1, %172
  %174 = add i32 0, %173
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %169, i32 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = mul i32 1, %176
  %178 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %179 = load i8**, i8*** %178, align 8
  %180 = getelementptr inbounds i8*, i8** %179, i32 %174
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %183, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 3, %186
  %188 = mul i32 1, %187
  %189 = add i32 0, %188
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = mul i32 1, %191
  %193 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %194 = load i8**, i8*** %193, align 8
  %195 = getelementptr inbounds i8*, i8** %194, i32 %189
  %196 = load i8*, i8** %195, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  %197 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %198 = load %dimension_descriptor*, %dimension_descriptor** %197, align 8
  %199 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %198, i32 0
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %199, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = sub i32 %201, 1
  store i32 %202, i32* %__1_k, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %203 = load i32, i32* %__1_k, align 4
  %204 = add i32 %203, 1
  %205 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %206 = load %dimension_descriptor*, %dimension_descriptor** %205, align 8
  %207 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %206, i32 0
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %207, i32 0, i32 2
  %211 = load i32, i32* %210, align 4
  %212 = add i32 %211, %209
  %213 = sub i32 %212, 1
  %214 = icmp sle i32 %204, %213
  br i1 %214, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %215 = load i32, i32* %__1_k, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %__1_k, align 4
  %217 = load i32, i32* %__1_k, align 4
  %218 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %219 = load %dimension_descriptor*, %dimension_descriptor** %218, align 8
  %220 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %219, i32 0
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = sub i32 %217, %222
  %224 = mul i32 1, %223
  %225 = add i32 0, %224
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %220, i32 0, i32 2
  %227 = load i32, i32* %226, align 4
  %228 = mul i32 1, %227
  %229 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %230 = load i8**, i8*** %229, align 8
  %231 = getelementptr inbounds i8*, i8** %230, i32 %225
  %232 = load i8*, i8** %231, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %232, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  %233 = getelementptr %array, %array* %greetings, i32 0, i32 3
  %234 = load i1, i1* %233, align 1
  br i1 %234, label %then, label %else

then:                                             ; preds = %loop.end
  %235 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %236 = load i8**, i8*** %235, align 8
  %237 = alloca i8*, align 8
  %238 = bitcast i8** %236 to i8*
  store i8* %238, i8** %237, align 8
  %239 = load i8*, i8** %237, align 8
  call void (i8*, ...) @_lfortran_free(i8* %239)
  %240 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 false, i1* %240, align 1
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %241 = getelementptr %array, %array* %user_data, i32 0, i32 3
  %242 = load i1, i1* %241, align 1
  br i1 %242, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %243 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %244 = load i8**, i8*** %243, align 8
  %245 = alloca i8*, align 8
  %246 = bitcast i8** %244 to i8*
  store i8* %246, i8** %245, align 8
  %247 = load i8*, i8** %245, align 8
  call void (i8*, ...) @_lfortran_free(i8* %247)
  %248 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 false, i1* %248, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
