; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i8**, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"%s%s%s%s%s%s%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c" \00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@17 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@21 = private unnamed_addr constant [5 x i8] c"abcd\00", align 1
@22 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %greetings = alloca %array*, align 8
  store %array* null, %array** %greetings, align 8
  %arr_desc = alloca %array, align 8
  %2 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 1, i32* %6, align 4
  %7 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i8** null, i8*** %7, align 8
  store %array* %arr_desc, %array** %greetings, align 8
  %str = alloca i8*, align 8
  store i8* null, i8** %str, align 8
  %user_data = alloca %array*, align 8
  store %array* null, %array** %user_data, align 8
  %arr_desc1 = alloca %array, align 8
  %8 = getelementptr %array, %array* %arr_desc1, i32 0, i32 2
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = alloca %dimension_descriptor, i32 %10, align 8
  store %dimension_descriptor* %11, %dimension_descriptor** %8, align 8
  %12 = getelementptr %array, %array* %arr_desc1, i32 0, i32 4
  store i32 1, i32* %12, align 4
  %13 = getelementptr %array, %array* %arr_desc1, i32 0, i32 0
  store i8** null, i8*** %13, align 8
  store %array* %arr_desc1, %array** %user_data, align 8
  %14 = load %array*, %array** %user_data, align 8
  %15 = getelementptr %array, %array* %14, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %14, i32 0, i32 2
  %17 = load %dimension_descriptor*, %dimension_descriptor** %16, align 8
  %18 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %17, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 1
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 2
  store i32 1, i32* %19, align 4
  store i32 1, i32* %20, align 4
  store i32 3, i32* %21, align 4
  %22 = getelementptr %array, %array* %14, i32 0, i32 0
  %23 = alloca i32, align 4
  store i32 24, i32* %23, align 4
  %24 = load i32, i32* %23, align 4
  %25 = call i8* (i32, ...) @_lfortran_malloc(i32 %24)
  %26 = bitcast i8* %25 to i8**
  store i8** %26, i8*** %22, align 8
  %27 = load %array*, %array** %user_data, align 8
  %28 = getelementptr %array, %array* %27, i32 0, i32 2
  %29 = load %dimension_descriptor*, %dimension_descriptor** %28, align 8
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %29, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub i32 1, %32
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = mul i32 %35, %33
  %37 = add i32 0, %36
  %38 = getelementptr %array, %array* %27, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %37, %39
  %41 = getelementptr %array, %array* %27, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i32 %40
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %43, align 8
  %44 = load %array*, %array** %user_data, align 8
  %45 = getelementptr %array, %array* %44, i32 0, i32 2
  %46 = load %dimension_descriptor*, %dimension_descriptor** %45, align 8
  %47 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %46, i32 0
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sub i32 2, %49
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = mul i32 %52, %50
  %54 = add i32 0, %53
  %55 = getelementptr %array, %array* %44, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %54, %56
  %58 = getelementptr %array, %array* %44, i32 0, i32 0
  %59 = load i8**, i8*** %58, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i32 %57
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8** %60, align 8
  %61 = load %array*, %array** %user_data, align 8
  %62 = getelementptr %array, %array* %61, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 3, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %69, %67
  %71 = add i32 0, %70
  %72 = getelementptr %array, %array* %61, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %71, %73
  %75 = getelementptr %array, %array* %61, i32 0, i32 0
  %76 = load i8**, i8*** %75, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i32 %74
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8** %77, align 8
  %78 = load %array*, %array** %greetings, align 8
  %79 = getelementptr %array, %array* %78, i32 0, i32 1
  store i32 0, i32* %79, align 4
  %80 = getelementptr %array, %array* %78, i32 0, i32 2
  %81 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 0
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 2
  store i32 1, i32* %83, align 4
  store i32 1, i32* %84, align 4
  store i32 5, i32* %85, align 4
  %86 = getelementptr %array, %array* %78, i32 0, i32 0
  %87 = alloca i32, align 4
  store i32 40, i32* %87, align 4
  %88 = load i32, i32* %87, align 4
  %89 = call i8* (i32, ...) @_lfortran_malloc(i32 %88)
  %90 = bitcast i8* %89 to i8**
  store i8** %90, i8*** %86, align 8
  %91 = load %array*, %array** %greetings, align 8
  %92 = getelementptr %array, %array* %91, i32 0, i32 2
  %93 = load %dimension_descriptor*, %dimension_descriptor** %92, align 8
  %94 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %93, i32 0
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = sub i32 1, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %94, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 %99, %97
  %101 = add i32 0, %100
  %102 = getelementptr %array, %array* %91, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %101, %103
  %105 = getelementptr %array, %array* %91, i32 0, i32 0
  %106 = load i8**, i8*** %105, align 8
  %107 = getelementptr inbounds i8*, i8** %106, i32 %104
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %107, align 8
  %108 = load %array*, %array** %greetings, align 8
  %109 = getelementptr %array, %array* %108, i32 0, i32 2
  %110 = load %dimension_descriptor*, %dimension_descriptor** %109, align 8
  %111 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = sub i32 2, %113
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = mul i32 %116, %114
  %118 = add i32 0, %117
  %119 = getelementptr %array, %array* %108, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %118, %120
  %122 = getelementptr %array, %array* %108, i32 0, i32 0
  %123 = load i8**, i8*** %122, align 8
  %124 = getelementptr inbounds i8*, i8** %123, i32 %121
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %124, align 8
  %125 = load %array*, %array** %greetings, align 8
  %126 = getelementptr %array, %array* %125, i32 0, i32 2
  %127 = load %dimension_descriptor*, %dimension_descriptor** %126, align 8
  %128 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %127, i32 0
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = sub i32 3, %130
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %128, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = mul i32 %133, %131
  %135 = add i32 0, %134
  %136 = getelementptr %array, %array* %125, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %135, %137
  %139 = getelementptr %array, %array* %125, i32 0, i32 0
  %140 = load i8**, i8*** %139, align 8
  %141 = getelementptr inbounds i8*, i8** %140, i32 %138
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %141, align 8
  %142 = load %array*, %array** %greetings, align 8
  %143 = getelementptr %array, %array* %142, i32 0, i32 2
  %144 = load %dimension_descriptor*, %dimension_descriptor** %143, align 8
  %145 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %144, i32 0
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = sub i32 4, %147
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = mul i32 %150, %148
  %152 = add i32 0, %151
  %153 = getelementptr %array, %array* %142, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = add i32 %152, %154
  %156 = getelementptr %array, %array* %142, i32 0, i32 0
  %157 = load i8**, i8*** %156, align 8
  %158 = getelementptr inbounds i8*, i8** %157, i32 %155
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8** %158, align 8
  %159 = load %array*, %array** %greetings, align 8
  %160 = getelementptr %array, %array* %159, i32 0, i32 2
  %161 = load %dimension_descriptor*, %dimension_descriptor** %160, align 8
  %162 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %161, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 5, %164
  %166 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = mul i32 %167, %165
  %169 = add i32 0, %168
  %170 = getelementptr %array, %array* %159, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = add i32 %169, %171
  %173 = getelementptr %array, %array* %159, i32 0, i32 0
  %174 = load i8**, i8*** %173, align 8
  %175 = getelementptr inbounds i8*, i8** %174, i32 %172
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8** %175, align 8
  %176 = load %array*, %array** %user_data, align 8
  %177 = getelementptr %array, %array* %176, i32 0, i32 2
  %178 = load %dimension_descriptor*, %dimension_descriptor** %177, align 8
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 0
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = sub i32 1, %181
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = mul i32 %184, %182
  %186 = add i32 0, %185
  %187 = getelementptr %array, %array* %176, i32 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = add i32 %186, %188
  %190 = getelementptr %array, %array* %176, i32 0, i32 0
  %191 = load i8**, i8*** %190, align 8
  %192 = getelementptr inbounds i8*, i8** %191, i32 %189
  %193 = load i8*, i8** %192, align 8
  %194 = load %array*, %array** %user_data, align 8
  %195 = getelementptr %array, %array* %194, i32 0, i32 2
  %196 = load %dimension_descriptor*, %dimension_descriptor** %195, align 8
  %197 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %196, i32 0
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = sub i32 2, %199
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = mul i32 %202, %200
  %204 = add i32 0, %203
  %205 = getelementptr %array, %array* %194, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = add i32 %204, %206
  %208 = getelementptr %array, %array* %194, i32 0, i32 0
  %209 = load i8**, i8*** %208, align 8
  %210 = getelementptr inbounds i8*, i8** %209, i32 %207
  %211 = load i8*, i8** %210, align 8
  %212 = load %array*, %array** %user_data, align 8
  %213 = getelementptr %array, %array* %212, i32 0, i32 2
  %214 = load %dimension_descriptor*, %dimension_descriptor** %213, align 8
  %215 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %214, i32 0
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = sub i32 3, %217
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = mul i32 %220, %218
  %222 = add i32 0, %221
  %223 = getelementptr %array, %array* %212, i32 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = add i32 %222, %224
  %226 = getelementptr %array, %array* %212, i32 0, i32 0
  %227 = load i8**, i8*** %226, align 8
  %228 = getelementptr inbounds i8*, i8** %227, i32 %225
  %229 = load i8*, i8** %228, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %193, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  %230 = load %array*, %array** %greetings, align 8
  %231 = getelementptr %array, %array* %230, i32 0, i32 2
  %232 = load %dimension_descriptor*, %dimension_descriptor** %231, align 8
  %233 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %232, i32 0
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = sub i32 %235, 1
  store i32 %236, i32* %__1_k, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %237 = load i32, i32* %__1_k, align 4
  %238 = add i32 %237, 1
  %239 = load %array*, %array** %greetings, align 8
  %240 = getelementptr %array, %array* %239, i32 0, i32 2
  %241 = load %dimension_descriptor*, %dimension_descriptor** %240, align 8
  %242 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %241, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 2
  %246 = load i32, i32* %245, align 4
  %247 = add i32 %246, %244
  %248 = sub i32 %247, 1
  %249 = icmp sle i32 %238, %248
  br i1 %249, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %250 = load i32, i32* %__1_k, align 4
  %251 = add i32 %250, 1
  store i32 %251, i32* %__1_k, align 4
  %252 = load i32, i32* %__1_k, align 4
  %253 = load %array*, %array** %greetings, align 8
  %254 = getelementptr %array, %array* %253, i32 0, i32 2
  %255 = load %dimension_descriptor*, %dimension_descriptor** %254, align 8
  %256 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %255, i32 0
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 %252, %258
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = mul i32 %261, %259
  %263 = add i32 0, %262
  %264 = getelementptr %array, %array* %253, i32 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = add i32 %263, %265
  %267 = getelementptr %array, %array* %253, i32 0, i32 0
  %268 = load i8**, i8*** %267, align 8
  %269 = getelementptr inbounds i8*, i8** %268, i32 %266
  %270 = load i8*, i8** %269, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %270, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  call void (i8**, i32, ...) @_lfortran_alloc(i8** %str, i32 9)
  %271 = load i8*, i8** %str, align 8
  call void @llvm.memset.p0i8.i32(i8* %271, i8 0, i32 9, i1 false)
  call void @_lfortran_strcpy(i8** %str, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0), i8 1)
  %272 = load i8*, i8** %str, align 8
  %273 = call i8* @_lfortran_str_slice(i8* %272, i32 1, i32 0, i32 1, i1 true, i1 false)
  %274 = alloca i8*, align 8
  store i8* %273, i8** %274, align 8
  %275 = call i32 @_lfortran_str_len(i8** %274)
  %276 = icmp ne i32 %275, 3
  br i1 %276, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @22, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %277 = load %array*, %array** %greetings, align 8
  %278 = getelementptr %array, %array* %277, i32 0, i32 0
  %279 = load i8**, i8*** %278, align 8
  %280 = ptrtoint i8** %279 to i64
  %281 = icmp ne i64 %280, 0
  br i1 %281, label %then2, label %else3

then2:                                            ; preds = %ifcont
  %282 = getelementptr %array, %array* %277, i32 0, i32 0
  %283 = load i8**, i8*** %282, align 8
  %284 = alloca i8*, align 8
  %285 = bitcast i8** %283 to i8*
  store i8* %285, i8** %284, align 8
  %286 = load i8*, i8** %284, align 8
  call void (i8*, ...) @_lfortran_free(i8* %286)
  %287 = getelementptr %array, %array* %277, i32 0, i32 0
  store i8** null, i8*** %287, align 8
  br label %ifcont4

else3:                                            ; preds = %ifcont
  br label %ifcont4

ifcont4:                                          ; preds = %else3, %then2
  %288 = load i8*, i8** %str, align 8
  %289 = ptrtoint i8* %288 to i64
  %290 = icmp ne i64 %289, 0
  br i1 %290, label %then5, label %else6

then5:                                            ; preds = %ifcont4
  call void (i8*, ...) @_lfortran_free(i8* %288)
  store i8* null, i8** %str, align 8
  br label %ifcont7

else6:                                            ; preds = %ifcont4
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  %291 = load %array*, %array** %user_data, align 8
  %292 = getelementptr %array, %array* %291, i32 0, i32 0
  %293 = load i8**, i8*** %292, align 8
  %294 = ptrtoint i8** %293 to i64
  %295 = icmp ne i64 %294, 0
  br i1 %295, label %then8, label %else9

then8:                                            ; preds = %ifcont7
  %296 = getelementptr %array, %array* %291, i32 0, i32 0
  %297 = load i8**, i8*** %296, align 8
  %298 = alloca i8*, align 8
  %299 = bitcast i8** %297 to i8*
  store i8* %299, i8** %298, align 8
  %300 = load i8*, i8** %298, align 8
  call void (i8*, ...) @_lfortran_free(i8* %300)
  %301 = getelementptr %array, %array* %291, i32 0, i32 0
  store i8** null, i8*** %301, align 8
  br label %ifcont10

else9:                                            ; preds = %ifcont7
  br label %ifcont10

ifcont10:                                         ; preds = %else9, %then8
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_alloc(i8**, i32, ...)

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #0

declare void @_lfortran_strcpy(i8**, i8*, i8)

declare i8* @_lfortran_str_slice(i8*, i32, i32, i32, i1, i1)

declare i32 @_lfortran_str_len(i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_free(i8*, ...)

attributes #0 = { argmemonly nocallback nofree nounwind willreturn writeonly }
