; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i8**, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"%s%s%s%s%s%s%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c" \00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@17 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %__1_k = alloca i32, align 4
  %greetings = alloca %array, align 8
  %2 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array, %array* %greetings, i32 0, i32 4
  store i32 1, i32* %6, align 4
  %7 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 false, i1* %7, align 1
  %user_data = alloca %array, align 8
  %8 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = alloca %dimension_descriptor, i32 %10, align 8
  store %dimension_descriptor* %11, %dimension_descriptor** %8, align 8
  %12 = getelementptr %array, %array* %user_data, i32 0, i32 4
  store i32 1, i32* %12, align 4
  %13 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 false, i1* %13, align 1
  %14 = getelementptr %array, %array* %user_data, i32 0, i32 1
  store i32 0, i32* %14, align 4
  %15 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 true, i1* %15, align 1
  %16 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %17 = load %dimension_descriptor*, %dimension_descriptor** %16, align 8
  %18 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %17, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 1
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 2
  store i32 1, i32* %19, align 4
  store i32 1, i32* %20, align 4
  store i32 3, i32* %21, align 4
  %22 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %23 = alloca i32, align 4
  store i32 24, i32* %23, align 4
  %24 = load i32, i32* %23, align 4
  %25 = call i8* (i32, ...) @_lfortran_malloc(i32 %24)
  %26 = bitcast i8* %25 to i8**
  store i8** %26, i8*** %22, align 8
  %27 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sub i32 1, %31
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = mul i32 %34, %32
  %36 = add i32 0, %35
  %37 = getelementptr %array, %array* %user_data, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %36, %38
  %40 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %41 = load i8**, i8*** %40, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i32 %39
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8** %42, align 8
  %43 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %44 = load %dimension_descriptor*, %dimension_descriptor** %43, align 8
  %45 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %44, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 2, %47
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = mul i32 %50, %48
  %52 = add i32 0, %51
  %53 = getelementptr %array, %array* %user_data, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %52, %54
  %56 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %57 = load i8**, i8*** %56, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i32 %55
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8** %58, align 8
  %59 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %60 = load %dimension_descriptor*, %dimension_descriptor** %59, align 8
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %60, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 3, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 %66, %64
  %68 = add i32 0, %67
  %69 = getelementptr %array, %array* %user_data, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %68, %70
  %72 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %73 = load i8**, i8*** %72, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i32 %71
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8** %74, align 8
  %75 = getelementptr %array, %array* %greetings, i32 0, i32 1
  store i32 0, i32* %75, align 4
  %76 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 true, i1* %76, align 1
  %77 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  %79 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %78, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 0
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 1
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 2
  store i32 1, i32* %80, align 4
  store i32 1, i32* %81, align 4
  store i32 5, i32* %82, align 4
  %83 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %84 = alloca i32, align 4
  store i32 40, i32* %84, align 4
  %85 = load i32, i32* %84, align 4
  %86 = call i8* (i32, ...) @_lfortran_malloc(i32 %85)
  %87 = bitcast i8* %86 to i8**
  store i8** %87, i8*** %83, align 8
  %88 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %89 = load %dimension_descriptor*, %dimension_descriptor** %88, align 8
  %90 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %89, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 1, %92
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 %95, %93
  %97 = add i32 0, %96
  %98 = getelementptr %array, %array* %greetings, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %97, %99
  %101 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %102 = load i8**, i8*** %101, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i32 %100
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %103, align 8
  %104 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %105 = load %dimension_descriptor*, %dimension_descriptor** %104, align 8
  %106 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %105, i32 0
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = sub i32 2, %108
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = mul i32 %111, %109
  %113 = add i32 0, %112
  %114 = getelementptr %array, %array* %greetings, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %113, %115
  %117 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %118 = load i8**, i8*** %117, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i32 %116
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %119, align 8
  %120 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 3, %124
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = mul i32 %127, %125
  %129 = add i32 0, %128
  %130 = getelementptr %array, %array* %greetings, i32 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %129, %131
  %133 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %134 = load i8**, i8*** %133, align 8
  %135 = getelementptr inbounds i8*, i8** %134, i32 %132
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %135, align 8
  %136 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %137 = load %dimension_descriptor*, %dimension_descriptor** %136, align 8
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %137, i32 0
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 4, %140
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 %143, %141
  %145 = add i32 0, %144
  %146 = getelementptr %array, %array* %greetings, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %145, %147
  %149 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %150 = load i8**, i8*** %149, align 8
  %151 = getelementptr inbounds i8*, i8** %150, i32 %148
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8** %151, align 8
  %152 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %153 = load %dimension_descriptor*, %dimension_descriptor** %152, align 8
  %154 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %153, i32 0
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 5, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 %159, %157
  %161 = add i32 0, %160
  %162 = getelementptr %array, %array* %greetings, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = add i32 %161, %163
  %165 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %166 = load i8**, i8*** %165, align 8
  %167 = getelementptr inbounds i8*, i8** %166, i32 %164
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8** %167, align 8
  %168 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %169 = load %dimension_descriptor*, %dimension_descriptor** %168, align 8
  %170 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %169, i32 0
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 1, %172
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = mul i32 %175, %173
  %177 = add i32 0, %176
  %178 = getelementptr %array, %array* %user_data, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %177, %179
  %181 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %182 = load i8**, i8*** %181, align 8
  %183 = getelementptr inbounds i8*, i8** %182, i32 %180
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %186 = load %dimension_descriptor*, %dimension_descriptor** %185, align 8
  %187 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %186, i32 0
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = sub i32 2, %189
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = mul i32 %192, %190
  %194 = add i32 0, %193
  %195 = getelementptr %array, %array* %user_data, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %194, %196
  %198 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %199 = load i8**, i8*** %198, align 8
  %200 = getelementptr inbounds i8*, i8** %199, i32 %197
  %201 = load i8*, i8** %200, align 8
  %202 = getelementptr %array, %array* %user_data, i32 0, i32 2
  %203 = load %dimension_descriptor*, %dimension_descriptor** %202, align 8
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %203, i32 0
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 3, %206
  %208 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = mul i32 %209, %207
  %211 = add i32 0, %210
  %212 = getelementptr %array, %array* %user_data, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = add i32 %211, %213
  %215 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %216 = load i8**, i8*** %215, align 8
  %217 = getelementptr inbounds i8*, i8** %216, i32 %214
  %218 = load i8*, i8** %217, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %201, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i8* %218, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  %219 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %220 = load %dimension_descriptor*, %dimension_descriptor** %219, align 8
  %221 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %220, i32 0
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %221, i32 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = sub i32 %223, 1
  store i32 %224, i32* %__1_k, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %225 = load i32, i32* %__1_k, align 4
  %226 = add i32 %225, 1
  %227 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %228 = load %dimension_descriptor*, %dimension_descriptor** %227, align 8
  %229 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %228, i32 0
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %229, i32 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %229, i32 0, i32 2
  %233 = load i32, i32* %232, align 4
  %234 = add i32 %233, %231
  %235 = sub i32 %234, 1
  %236 = icmp sle i32 %226, %235
  br i1 %236, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %237 = load i32, i32* %__1_k, align 4
  %238 = add i32 %237, 1
  store i32 %238, i32* %__1_k, align 4
  %239 = load i32, i32* %__1_k, align 4
  %240 = getelementptr %array, %array* %greetings, i32 0, i32 2
  %241 = load %dimension_descriptor*, %dimension_descriptor** %240, align 8
  %242 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %241, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub i32 %239, %244
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = mul i32 %247, %245
  %249 = add i32 0, %248
  %250 = getelementptr %array, %array* %greetings, i32 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %249, %251
  %253 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %254 = load i8**, i8*** %253, align 8
  %255 = getelementptr inbounds i8*, i8** %254, i32 %252
  %256 = load i8*, i8** %255, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  %257 = getelementptr %array, %array* %greetings, i32 0, i32 3
  %258 = load i1, i1* %257, align 1
  br i1 %258, label %then, label %else

then:                                             ; preds = %loop.end
  %259 = getelementptr %array, %array* %greetings, i32 0, i32 0
  %260 = load i8**, i8*** %259, align 8
  %261 = alloca i8*, align 8
  %262 = bitcast i8** %260 to i8*
  store i8* %262, i8** %261, align 8
  %263 = load i8*, i8** %261, align 8
  call void (i8*, ...) @_lfortran_free(i8* %263)
  %264 = getelementptr %array, %array* %greetings, i32 0, i32 3
  store i1 false, i1* %264, align 1
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %265 = getelementptr %array, %array* %user_data, i32 0, i32 3
  %266 = load i1, i1* %265, align 1
  br i1 %266, label %then1, label %else2

then1:                                            ; preds = %ifcont
  %267 = getelementptr %array, %array* %user_data, i32 0, i32 0
  %268 = load i8**, i8*** %267, align 8
  %269 = alloca i8*, align 8
  %270 = bitcast i8** %268 to i8*
  store i8* %270, i8** %269, align 8
  %271 = load i8*, i8** %269, align 8
  call void (i8*, ...) @_lfortran_free(i8* %271)
  %272 = getelementptr %array, %array* %user_data, i32 0, i32 3
  store i1 false, i1* %272, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
