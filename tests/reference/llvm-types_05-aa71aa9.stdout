; ModuleID = 'LFortran'
source_filename = "LFortran"

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %i1 = alloca i32, align 4
  %r = alloca float, align 4
  store float 2.000000e+00, float* %r, align 4
  store float 2.000000e+00, float* %r, align 4
  store float 8.000000e+00, float* %r, align 4
  store float 4.000000e+00, float* %r, align 4
  store float 0.000000e+00, float* %r, align 4
  store float 5.000000e-01, float* %r, align 4
  store float 5.000000e-01, float* %r, align 4
  store i32 2, i32* %i1, align 4
  store i32 2, i32* %i1, align 4
  store i32 8, i32* %i1, align 4
  store i32 4, i32* %i1, align 4
  store i32 0, i32* %i1, align 4
  store i32 0, i32* %i1, align 4
  store i32 0, i32* %i1, align 4
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lpython_free_argv()
