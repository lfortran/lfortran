; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@0 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.7 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.7, i32 0, i32 0), i64 10 }>
@string_const_data.9 = private constant [2 x i8] c"\0A\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.23 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@string_const_data.25 = private constant [2 x i8] c"\0A\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.25, i32 0, i32 0), i64 1 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.31 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.31, i32 0, i32 0), i64 10 }>
@string_const_data.33 = private constant [2 x i8] c"\0A\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.33, i32 0, i32 0), i64 1 }>
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.39 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.39, i32 0, i32 0), i64 10 }>
@string_const_data.41 = private constant [2 x i8] c"\0A\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.41, i32 0, i32 0), i64 1 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.43 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.43, i32 0, i32 0), i64 10 }>
@string_const_data.45 = private constant [2 x i8] c"\0A\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.45, i32 0, i32 0), i64 1 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x i32], align 4
  %b = alloca [4 x i32], align 4
  %i1 = alloca i32, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 3
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %i1, align 4
  %8 = sub i32 %7, 1
  %9 = mul i32 1, %8
  %10 = add i32 0, %9
  %11 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 %10
  %12 = load i32, i32* %i1, align 4
  %13 = add i32 %12, 10
  store i32 %13, i32* %11, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 11
  br i1 %16, label %then, label %else

then:                                             ; preds = %loop.end
  %17 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %18 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8* %17, i8* %18)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %19 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 12
  br i1 %21, label %then2, label %else3

then2:                                            ; preds = %ifcont
  %22 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %23 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %22, i8* %23)
  call void @exit(i32 1)
  br label %ifcont4

else3:                                            ; preds = %ifcont
  br label %ifcont4

ifcont4:                                          ; preds = %else3, %then2
  %24 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ne i32 %25, 13
  br i1 %26, label %then5, label %else6

then5:                                            ; preds = %ifcont4
  %27 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  %28 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %27, i8* %28)
  call void @exit(i32 1)
  br label %ifcont7

else6:                                            ; preds = %ifcont4
  br label %ifcont7

ifcont7:                                          ; preds = %else6, %then5
  store i32 10, i32* %i1, align 4
  br label %loop.head8

loop.head8:                                       ; preds = %loop.body9, %ifcont7
  %29 = load i32, i32* %i1, align 4
  %30 = add i32 %29, 1
  %31 = icmp sle i32 %30, 14
  br i1 %31, label %loop.body9, label %loop.end10

loop.body9:                                       ; preds = %loop.head8
  %32 = load i32, i32* %i1, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %i1, align 4
  %34 = load i32, i32* %i1, align 4
  %35 = sub i32 %34, 10
  %36 = sub i32 %35, 1
  %37 = mul i32 1, %36
  %38 = add i32 0, %37
  %39 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 %38
  %40 = load i32, i32* %i1, align 4
  store i32 %40, i32* %39, align 4
  br label %loop.head8

loop.end10:                                       ; preds = %loop.head8
  %41 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp ne i32 %42, 11
  br i1 %43, label %then11, label %else12

then11:                                           ; preds = %loop.end10
  %44 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %45 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %44, i8* %45)
  call void @exit(i32 1)
  br label %ifcont13

else12:                                           ; preds = %loop.end10
  br label %ifcont13

ifcont13:                                         ; preds = %else12, %then11
  %46 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp ne i32 %47, 12
  br i1 %48, label %then14, label %else15

then14:                                           ; preds = %ifcont13
  %49 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %50 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %49, i8* %50)
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %ifcont13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  %51 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 13
  br i1 %53, label %then17, label %else18

then17:                                           ; preds = %ifcont16
  %54 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %55 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %54, i8* %55)
  call void @exit(i32 1)
  br label %ifcont19

else18:                                           ; preds = %ifcont16
  br label %ifcont19

ifcont19:                                         ; preds = %else18, %then17
  %56 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 14
  br i1 %58, label %then20, label %else21

then20:                                           ; preds = %ifcont19
  %59 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  %60 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %59, i8* %60)
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %ifcont19
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  store i32 0, i32* %i1, align 4
  br label %loop.head23

loop.head23:                                      ; preds = %loop.body24, %ifcont22
  %61 = load i32, i32* %i1, align 4
  %62 = add i32 %61, 1
  %63 = icmp sle i32 %62, 3
  br i1 %63, label %loop.body24, label %loop.end25

loop.body24:                                      ; preds = %loop.head23
  %64 = load i32, i32* %i1, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %i1, align 4
  %66 = load i32, i32* %i1, align 4
  %67 = sub i32 %66, 1
  %68 = mul i32 1, %67
  %69 = add i32 0, %68
  %70 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 %69
  %71 = load i32, i32* %i1, align 4
  %72 = sub i32 %71, 1
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 %74
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %76, 10
  store i32 %77, i32* %70, align 4
  br label %loop.head23

loop.end25:                                       ; preds = %loop.head23
  %78 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp ne i32 %79, 1
  br i1 %80, label %then26, label %else27

then26:                                           ; preds = %loop.end25
  %81 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %82 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %81, i8* %82)
  call void @exit(i32 1)
  br label %ifcont28

else27:                                           ; preds = %loop.end25
  br label %ifcont28

ifcont28:                                         ; preds = %else27, %then26
  %83 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp ne i32 %84, 2
  br i1 %85, label %then29, label %else30

then29:                                           ; preds = %ifcont28
  %86 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  %87 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %86, i8* %87)
  call void @exit(i32 1)
  br label %ifcont31

else30:                                           ; preds = %ifcont28
  br label %ifcont31

ifcont31:                                         ; preds = %else30, %then29
  %88 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp ne i32 %89, 3
  br i1 %90, label %then32, label %else33

then32:                                           ; preds = %ifcont31
  %91 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %92 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %91, i8* %92)
  call void @exit(i32 1)
  br label %ifcont34

else33:                                           ; preds = %ifcont31
  br label %ifcont34

ifcont34:                                         ; preds = %else33, %then32
  %93 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %94 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %95, %97
  %99 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %98, %100
  %102 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %101, %103
  store i32 %104, i32* %93, align 4
  %105 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = icmp ne i32 %106, 17
  br i1 %107, label %then35, label %else36

then35:                                           ; preds = %ifcont34
  %108 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  %109 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %108, i8* %109)
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont34
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %110 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %111 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %110, align 4
  %113 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = icmp ne i32 %114, 11
  br i1 %115, label %then38, label %else39

then38:                                           ; preds = %ifcont37
  %116 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  %117 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %116, i8* %117)
  call void @exit(i32 1)
  br label %ifcont40

else39:                                           ; preds = %ifcont37
  br label %ifcont40

ifcont40:                                         ; preds = %else39, %then38
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont40
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
