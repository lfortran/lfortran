; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca [3 x i32], align 4
  %b = alloca [4 x i32], align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 3
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i, align 4
  %7 = load i32, i32* %i, align 4
  %8 = sub i32 %7, 1
  %9 = mul i32 1, %8
  %10 = add i32 0, %9
  %11 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 %10
  %12 = load i32, i32* %i, align 4
  %13 = add i32 %12, 10
  store i32 %13, i32* %11, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 11
  br i1 %16, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %17 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 12
  br i1 %19, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %20 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 13
  br i1 %22, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %23 = load i32, i32* %i, align 4
  %24 = add i32 %23, 1
  %25 = icmp sle i32 %24, 14
  br i1 %25, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %26 = load i32, i32* %i, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %i, align 4
  %28 = load i32, i32* %i, align 4
  %29 = sub i32 %28, 10
  %30 = sub i32 %29, 1
  %31 = mul i32 1, %30
  %32 = add i32 0, %31
  %33 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 %32
  %34 = load i32, i32* %i, align 4
  store i32 %34, i32* %33, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %35 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, 11
  br i1 %37, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %38 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp ne i32 %39, 12
  br i1 %40, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %41 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp ne i32 %42, 13
  br i1 %43, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %44 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, 14
  br i1 %46, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %47 = load i32, i32* %i, align 4
  %48 = add i32 %47, 1
  %49 = icmp sle i32 %48, 3
  br i1 %49, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %50 = load i32, i32* %i, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %i, align 4
  %52 = load i32, i32* %i, align 4
  %53 = sub i32 %52, 1
  %54 = mul i32 1, %53
  %55 = add i32 0, %54
  %56 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 %55
  %57 = load i32, i32* %i, align 4
  %58 = sub i32 %57, 1
  %59 = mul i32 1, %58
  %60 = add i32 0, %59
  %61 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 %60
  %62 = load i32, i32* %61, align 4
  %63 = sub i32 %62, 10
  store i32 %63, i32* %56, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %64 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp ne i32 %65, 1
  br i1 %66, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %67 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 2
  br i1 %69, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %70 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp ne i32 %71, 3
  br i1 %72, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %73 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %74 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %75, %77
  %79 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %78, %80
  %82 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %81, %83
  store i32 %84, i32* %73, align 4
  %85 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = icmp ne i32 %86, 17
  br i1 %87, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %88 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %89 = getelementptr [3 x i32], [3 x i32]* %a, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %88, align 4
  %91 = getelementptr [4 x i32], [4 x i32]* %b, i32 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = icmp ne i32 %92, 11
  br i1 %93, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
