; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [3 x i8] c"BC\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@7 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [3 x i8] c"@a\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@18 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [3 x i8] c"a@\00", align 1
@21 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@23 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@25 = private unnamed_addr constant [2 x i8] c" \00", align 1
@26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@27 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@28 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %c = alloca i8*, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i8** %c, align 8
  %is_alpha = alloca i1, align 1
  %2 = load i8*, i8** %c, align 8
  %3 = alloca i8*, align 8
  store i8* %2, i8** %3, align 8
  %4 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0), i8** %4, align 8
  %5 = call i1 @_lpython_str_compare_gte(i8** %3, i8** %4)
  %6 = load i8*, i8** %c, align 8
  %7 = alloca i8*, align 8
  store i8* %6, i8** %7, align 8
  %8 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i8** %8, align 8
  %9 = call i1 @_lpython_str_compare_lte(i8** %7, i8** %8)
  %10 = and i1 %5, %9
  %11 = load i8*, i8** %c, align 8
  %12 = alloca i8*, align 8
  store i8* %11, i8** %12, align 8
  %13 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8** %13, align 8
  %14 = call i1 @_lpython_str_compare_gte(i8** %12, i8** %13)
  %15 = load i8*, i8** %c, align 8
  %16 = alloca i8*, align 8
  store i8* %15, i8** %16, align 8
  %17 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i8** %17, align 8
  %18 = call i1 @_lpython_str_compare_lte(i8** %16, i8** %17)
  %19 = and i1 %14, %18
  %20 = or i1 %10, %19
  store i1 %20, i1* %is_alpha, align 1
  %21 = load i1, i1* %is_alpha, align 1
  %22 = icmp eq i1 %21, false
  %23 = select i1 %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0))
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @10, i32 0, i32 0), i8** %c, align 8
  %24 = load i8*, i8** %c, align 8
  %25 = alloca i8*, align 8
  store i8* %24, i8** %25, align 8
  %26 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8** %26, align 8
  %27 = call i1 @_lpython_str_compare_gte(i8** %25, i8** %26)
  %28 = load i8*, i8** %c, align 8
  %29 = alloca i8*, align 8
  store i8* %28, i8** %29, align 8
  %30 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i8** %30, align 8
  %31 = call i1 @_lpython_str_compare_lte(i8** %29, i8** %30)
  %32 = and i1 %27, %31
  %33 = load i8*, i8** %c, align 8
  %34 = alloca i8*, align 8
  store i8* %33, i8** %34, align 8
  %35 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i8** %35, align 8
  %36 = call i1 @_lpython_str_compare_gte(i8** %34, i8** %35)
  %37 = load i8*, i8** %c, align 8
  %38 = alloca i8*, align 8
  store i8* %37, i8** %38, align 8
  %39 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i8** %39, align 8
  %40 = call i1 @_lpython_str_compare_lte(i8** %38, i8** %39)
  %41 = and i1 %36, %40
  %42 = or i1 %32, %41
  store i1 %42, i1* %is_alpha, align 1
  %43 = load i1, i1* %is_alpha, align 1
  %44 = icmp eq i1 %43, false
  %45 = select i1 %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @20, i32 0, i32 0), i8** %c, align 8
  %46 = load i8*, i8** %c, align 8
  %47 = alloca i8*, align 8
  store i8* %46, i8** %47, align 8
  %48 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0), i8** %48, align 8
  %49 = call i1 @_lpython_str_compare_gte(i8** %47, i8** %48)
  %50 = load i8*, i8** %c, align 8
  %51 = alloca i8*, align 8
  store i8* %50, i8** %51, align 8
  %52 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i8** %52, align 8
  %53 = call i1 @_lpython_str_compare_lte(i8** %51, i8** %52)
  %54 = and i1 %49, %53
  %55 = load i8*, i8** %c, align 8
  %56 = alloca i8*, align 8
  store i8* %55, i8** %56, align 8
  %57 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @23, i32 0, i32 0), i8** %57, align 8
  %58 = call i1 @_lpython_str_compare_gte(i8** %56, i8** %57)
  %59 = load i8*, i8** %c, align 8
  %60 = alloca i8*, align 8
  store i8* %59, i8** %60, align 8
  %61 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0), i8** %61, align 8
  %62 = call i1 @_lpython_str_compare_lte(i8** %60, i8** %61)
  %63 = and i1 %58, %62
  %64 = or i1 %54, %63
  store i1 %64, i1* %is_alpha, align 1
  %65 = load i1, i1* %is_alpha, align 1
  %66 = icmp eq i1 %65, false
  %67 = select i1 %66, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @26, i32 0, i32 0))
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare i1 @_lpython_str_compare_gte(i8**, i8**)

declare i1 @_lpython_str_compare_lte(i8**, i8**)

declare void @_lfortran_printf(i8*, ...)
