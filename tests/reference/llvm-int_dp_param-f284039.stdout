; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [11 x i8] c"%d%s%lld%s\00", align 1

define i32 @main() {
.entry:
  %prec1 = alloca i32, align 4
  store i32 4, i32* %prec1, align 4
  %prec2 = alloca i32, align 4
  store i32 8, i32* %prec2, align 4
  %u = alloca i32, align 4
  store i32 2147483647, i32* %u, align 4
  %v = alloca i64, align 8
  store i64 2147483647, i64* %v, align 4
  %0 = load i32, i32* %u, align 4
  %1 = load i64, i64* %v, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i32 0, i32 0), i32 %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
