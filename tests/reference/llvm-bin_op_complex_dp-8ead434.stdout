; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_8 = type <{ double, double }>
%complex_4 = type <{ float, float }>

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [32 x i8] c"{R4,R4},{R8,R8},{R4,R4},{R8,R8}\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %u = alloca %complex_8, align 8
  %v = alloca %complex_8, align 8
  %x = alloca %complex_4, align 8
  %zero = alloca %complex_4, align 8
  %2 = alloca %complex_4, align 8
  %3 = getelementptr %complex_4, %complex_4* %2, i32 0, i32 0
  %4 = getelementptr %complex_4, %complex_4* %2, i32 0, i32 1
  store float 0x3FC24924A0000000, float* %3, align 4
  store float 0.000000e+00, float* %4, align 4
  %5 = load %complex_4, %complex_4* %2, align 1
  store %complex_4 %5, %complex_4* %zero, align 1
  %6 = alloca %complex_8, align 8
  %7 = getelementptr %complex_8, %complex_8* %6, i32 0, i32 0
  %8 = getelementptr %complex_8, %complex_8* %6, i32 0, i32 1
  store double 0x3FC2492492492492, double* %7, align 8
  store double 0.000000e+00, double* %8, align 8
  %9 = load %complex_8, %complex_8* %6, align 1
  store %complex_8 %9, %complex_8* %u, align 1
  %10 = alloca %complex_8, align 8
  %11 = getelementptr %complex_8, %complex_8* %10, i32 0, i32 0
  %12 = getelementptr %complex_8, %complex_8* %10, i32 0, i32 1
  store double 0x3FC2492492492492, double* %11, align 8
  store double 0.000000e+00, double* %12, align 8
  %13 = load %complex_8, %complex_8* %10, align 1
  store %complex_8 %13, %complex_8* %v, align 1
  %14 = alloca %complex_4, align 8
  %15 = getelementptr %complex_4, %complex_4* %14, i32 0, i32 0
  %16 = getelementptr %complex_4, %complex_4* %14, i32 0, i32 1
  store float 0x3FC24924A0000000, float* %15, align 4
  store float 0.000000e+00, float* %16, align 4
  %17 = load %complex_4, %complex_4* %14, align 1
  store %complex_4 %17, %complex_4* %x, align 1
  %18 = call i8* (i8*, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, %complex_4* %zero, %complex_8* %v, %complex_4* %x, %complex_8* %u)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i8*, i32, i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lpython_free_argv()
