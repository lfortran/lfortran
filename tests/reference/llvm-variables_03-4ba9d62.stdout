; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %b = alloca i1, align 1
  %x = alloca i32, align 4
  store i32 2, i32* %x, align 4
  %2 = load i32, i32* %x, align 4
  %3 = icmp ne i32 %2, 2
  store i1 %3, i1* %b, align 1
  %4 = load i1, i1* %b, align 1
  br i1 %4, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %5 = load i32, i32* %x, align 4
  %6 = icmp eq i32 %5, 2
  store i1 %6, i1* %b, align 1
  %7 = load i1, i1* %b, align 1
  %8 = xor i1 %7, true
  br i1 %8, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %9 = load i32, i32* %x, align 4
  %10 = icmp eq i32 %9, 2
  %11 = xor i1 %10, true
  store i1 %11, i1* %b, align 1
  %12 = load i1, i1* %b, align 1
  br i1 %12, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %13 = load i32, i32* %x, align 4
  %14 = icmp eq i32 %13, 2
  store i1 %14, i1* %b, align 1
  %15 = load i1, i1* %b, align 1
  %16 = xor i1 %15, true
  store i1 %16, i1* %b, align 1
  %17 = load i1, i1* %b, align 1
  br i1 %17, label %then7, label %else8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont9

else8:                                            ; preds = %ifcont6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
