; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { float*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { i32*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @check_real(%array** %r) {
.entry:
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %0 = load %array*, %array** %r, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %5, 1
  store i32 %6, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %.entry
  %7 = load i32, i32* %u, align 4
  %8 = add i32 %7, 1
  %9 = load %array*, %array** %r, align 8
  %10 = getelementptr %array, %array* %9, i32 0, i32 2
  %11 = load %dimension_descriptor*, %dimension_descriptor** %10, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %14
  %18 = sub i32 %17, 1
  %19 = icmp sle i32 %8, %18
  br i1 %19, label %loop.body, label %loop.end3

loop.body:                                        ; preds = %loop.head
  %20 = load i32, i32* %u, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %u, align 4
  %22 = load %array*, %array** %r, align 8
  %23 = getelementptr %array, %array* %22, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %27, 1
  store i32 %28, i32* %v, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %ifcont, %loop.body
  %29 = load i32, i32* %v, align 4
  %30 = add i32 %29, 1
  %31 = load %array*, %array** %r, align 8
  %32 = getelementptr %array, %array* %31, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = sub i32 %39, 1
  %41 = icmp sle i32 %30, %40
  br i1 %41, label %loop.body2, label %loop.end

loop.body2:                                       ; preds = %loop.head1
  %42 = load i32, i32* %v, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %v, align 4
  %44 = load i32, i32* %u, align 4
  %45 = load i32, i32* %v, align 4
  %46 = load %array*, %array** %r, align 8
  %47 = getelementptr %array, %array* %46, i32 0, i32 2
  %48 = load %dimension_descriptor*, %dimension_descriptor** %47, align 8
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %44, %51
  %53 = mul i32 1, %52
  %54 = add i32 0, %53
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 1, %56
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 %45, %60
  %62 = mul i32 %57, %61
  %63 = add i32 %54, %62
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 %57, %65
  %67 = getelementptr %array, %array* %46, i32 0, i32 0
  %68 = load float*, float** %67, align 8
  %69 = getelementptr inbounds float, float* %68, i32 %63
  %70 = load float, float* %69, align 4
  %71 = load i32, i32* %u, align 4
  %72 = load i32, i32* %v, align 4
  %73 = mul i32 %71, %72
  %74 = sitofp i32 %73 to float
  %75 = fcmp une float %70, %74
  br i1 %75, label %then, label %else

then:                                             ; preds = %loop.body2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body2
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  br label %loop.head

loop.end3:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end3
  ret void
}

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %i = alloca %array.0*, align 8
  %iv = alloca %array.0, align 8
  %2 = getelementptr %array.0, %array.0* %iv, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array.0, %array.0* %iv, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array.0, %array.0* %iv, i32 0, i32 4
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 2, i32* %12, align 4
  %13 = alloca i32, align 4
  store i32 2, i32* %13, align 4
  %14 = getelementptr %array.0, %array.0* %iv, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = alloca i32, i32 %15, align 4
  store i32* %16, i32** %14, align 8
  %r = alloca %array*, align 8
  %rv = alloca %array, align 8
  %17 = getelementptr %array, %array* %rv, i32 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr %array, %array* %rv, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  %22 = getelementptr %array, %array* %rv, i32 0, i32 4
  store i32 2, i32* %22, align 4
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %23 = load %dimension_descriptor*, %dimension_descriptor** %18, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %28 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 1
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 1
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %28, i32 0, i32 2
  store i32 1, i32* %29, align 4
  store i32 1, i32* %30, align 4
  store i32 3, i32* %31, align 4
  %32 = alloca i32, align 4
  store i32 6, i32* %32, align 4
  %33 = getelementptr %array, %array* %rv, i32 0, i32 0
  %34 = load i32, i32* %32, align 4
  %35 = alloca float, i32 %34, align 4
  store float* %35, float** %33, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store %array.0* %iv, %array.0** %i, align 8
  store %array* %rv, %array** %r, align 8
  %36 = load %array.0*, %array.0** %i, align 8
  %37 = getelementptr %array.0, %array.0* %36, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 1, %41
  %43 = mul i32 1, %42
  %44 = add i32 0, %43
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = mul i32 1, %46
  %48 = getelementptr %array.0, %array.0* %36, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds i32, i32* %49, i32 %44
  store i32 1, i32* %50, align 4
  %51 = load %array.0*, %array.0** %i, align 8
  %52 = getelementptr %array.0, %array.0* %51, i32 0, i32 2
  %53 = load %dimension_descriptor*, %dimension_descriptor** %52, align 8
  %54 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %53, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 1, %56
  %58 = mul i32 1, %57
  %59 = add i32 0, %58
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = mul i32 1, %61
  %63 = getelementptr %array.0, %array.0* %51, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i32 %59
  %66 = load i32, i32* %65, align 4
  %67 = icmp ne i32 %66, 1
  br i1 %67, label %then, label %else

then:                                             ; preds = %.entry
  %68 = load %array.0*, %array.0** %i, align 8
  %69 = getelementptr %array.0, %array.0* %68, i32 0, i32 2
  %70 = load %dimension_descriptor*, %dimension_descriptor** %69, align 8
  %71 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %70, i32 0
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = sub i32 2, %73
  %75 = mul i32 1, %74
  %76 = add i32 0, %75
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = mul i32 1, %78
  %80 = getelementptr %array.0, %array.0* %68, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds i32, i32* %81, i32 %76
  store i32 3, i32* %82, align 4
  br label %ifcont

else:                                             ; preds = %.entry
  %83 = load %array.0*, %array.0** %i, align 8
  %84 = getelementptr %array.0, %array.0* %83, i32 0, i32 2
  %85 = load %dimension_descriptor*, %dimension_descriptor** %84, align 8
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %85, i32 0
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sub i32 2, %88
  %90 = mul i32 1, %89
  %91 = add i32 0, %90
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = mul i32 1, %93
  %95 = getelementptr %array.0, %array.0* %83, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = getelementptr inbounds i32, i32* %96, i32 %91
  store i32 7, i32* %97, align 4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %98 = getelementptr %array.0, %array.0* %iv, i32 0, i32 2
  %99 = load %dimension_descriptor*, %dimension_descriptor** %98, align 8
  %100 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %99, i32 0
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = sub i32 1, %102
  %104 = mul i32 1, %103
  %105 = add i32 0, %104
  %106 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = mul i32 1, %107
  %109 = getelementptr %array.0, %array.0* %iv, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = getelementptr inbounds i32, i32* %110, i32 %105
  %112 = load i32, i32* %111, align 4
  %113 = icmp ne i32 %112, 1
  br i1 %113, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %114 = getelementptr %array.0, %array.0* %iv, i32 0, i32 2
  %115 = load %dimension_descriptor*, %dimension_descriptor** %114, align 8
  %116 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %115, i32 0
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = sub i32 2, %118
  %120 = mul i32 1, %119
  %121 = add i32 0, %120
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %116, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = mul i32 1, %123
  %125 = getelementptr %array.0, %array.0* %iv, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = getelementptr inbounds i32, i32* %126, i32 %121
  %128 = load i32, i32* %127, align 4
  %129 = icmp ne i32 %128, 7
  br i1 %129, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %130 = load %array*, %array** %r, align 8
  %131 = getelementptr %array, %array* %130, i32 0, i32 2
  %132 = load %dimension_descriptor*, %dimension_descriptor** %131, align 8
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %132, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 %135, 1
  store i32 %136, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %ifcont6
  %137 = load i32, i32* %u, align 4
  %138 = add i32 %137, 1
  %139 = load %array*, %array** %r, align 8
  %140 = getelementptr %array, %array* %139, i32 0, i32 2
  %141 = load %dimension_descriptor*, %dimension_descriptor** %140, align 8
  %142 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %141, i32 0
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %142, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = add i32 %146, %144
  %148 = sub i32 %147, 1
  %149 = icmp sle i32 %138, %148
  br i1 %149, label %loop.body, label %loop.end9

loop.body:                                        ; preds = %loop.head
  %150 = load i32, i32* %u, align 4
  %151 = add i32 %150, 1
  store i32 %151, i32* %u, align 4
  %152 = load %array*, %array** %r, align 8
  %153 = getelementptr %array, %array* %152, i32 0, i32 2
  %154 = load %dimension_descriptor*, %dimension_descriptor** %153, align 8
  %155 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %154, i32 1
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %155, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = sub i32 %157, 1
  store i32 %158, i32* %v, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.body
  %159 = load i32, i32* %v, align 4
  %160 = add i32 %159, 1
  %161 = load %array*, %array** %r, align 8
  %162 = getelementptr %array, %array* %161, i32 0, i32 2
  %163 = load %dimension_descriptor*, %dimension_descriptor** %162, align 8
  %164 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %163, i32 1
  %165 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, %166
  %170 = sub i32 %169, 1
  %171 = icmp sle i32 %160, %170
  br i1 %171, label %loop.body8, label %loop.end

loop.body8:                                       ; preds = %loop.head7
  %172 = load i32, i32* %v, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %v, align 4
  %174 = load i32, i32* %u, align 4
  %175 = load i32, i32* %v, align 4
  %176 = getelementptr %array, %array* %rv, i32 0, i32 2
  %177 = load %dimension_descriptor*, %dimension_descriptor** %176, align 8
  %178 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %177, i32 0
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = sub i32 %174, %180
  %182 = mul i32 1, %181
  %183 = add i32 0, %182
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = mul i32 1, %185
  %187 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %177, i32 1
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = sub i32 %175, %189
  %191 = mul i32 %186, %190
  %192 = add i32 %183, %191
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 %186, %194
  %196 = getelementptr %array, %array* %rv, i32 0, i32 0
  %197 = load float*, float** %196, align 8
  %198 = getelementptr inbounds float, float* %197, i32 %192
  %199 = load i32, i32* %u, align 4
  %200 = load i32, i32* %v, align 4
  %201 = mul i32 %199, %200
  %202 = sitofp i32 %201 to float
  store float %202, float* %198, align 4
  br label %loop.head7

loop.end:                                         ; preds = %loop.head7
  br label %loop.head

loop.end9:                                        ; preds = %loop.head
  call void @check_real(%array** %r)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)
