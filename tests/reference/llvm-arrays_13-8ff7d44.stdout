; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { float*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { i32*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define void @check_real(%array** %r) {
.entry:
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %0 = load %array*, %array** %r, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %5, 1
  store i32 %6, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %.entry
  %7 = load i32, i32* %u, align 4
  %8 = add i32 %7, 1
  %9 = load %array*, %array** %r, align 8
  %10 = getelementptr %array, %array* %9, i32 0, i32 2
  %11 = load %dimension_descriptor*, %dimension_descriptor** %10, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %14
  %18 = sub i32 %17, 1
  %19 = icmp sle i32 %8, %18
  br i1 %19, label %loop.body, label %loop.end3

loop.body:                                        ; preds = %loop.head
  %20 = load i32, i32* %u, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %u, align 4
  %22 = load %array*, %array** %r, align 8
  %23 = getelementptr %array, %array* %22, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %27, 1
  store i32 %28, i32* %v, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %ifcont, %loop.body
  %29 = load i32, i32* %v, align 4
  %30 = add i32 %29, 1
  %31 = load %array*, %array** %r, align 8
  %32 = getelementptr %array, %array* %31, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = sub i32 %39, 1
  %41 = icmp sle i32 %30, %40
  br i1 %41, label %loop.body2, label %loop.end

loop.body2:                                       ; preds = %loop.head1
  %42 = load i32, i32* %v, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %v, align 4
  %44 = load i32, i32* %u, align 4
  %45 = load i32, i32* %v, align 4
  %46 = load %array*, %array** %r, align 8
  %47 = getelementptr %array, %array* %46, i32 0, i32 2
  %48 = load %dimension_descriptor*, %dimension_descriptor** %47, align 8
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %44, %51
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = mul i32 %54, %52
  %56 = add i32 0, %55
  %57 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 1
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 %45, %59
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = mul i32 %62, %60
  %64 = add i32 %56, %63
  %65 = getelementptr %array, %array* %46, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %64, %66
  %68 = getelementptr %array, %array* %46, i32 0, i32 0
  %69 = load float*, float** %68, align 8
  %70 = getelementptr inbounds float, float* %69, i32 %67
  %71 = load float, float* %70, align 4
  %72 = load i32, i32* %u, align 4
  %73 = load i32, i32* %v, align 4
  %74 = mul i32 %72, %73
  %75 = sitofp i32 %74 to float
  %76 = fcmp one float %71, %75
  br i1 %76, label %then, label %else

then:                                             ; preds = %loop.body2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body2
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  br label %loop.head

loop.end3:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end3
  ret void
}

define void @check_real_without_pointer(%array* %r) {
.entry:
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %0 = getelementptr %array, %array* %r, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %.entry
  %6 = load i32, i32* %u, align 4
  %7 = add i32 %6, 1
  %8 = getelementptr %array, %array* %r, i32 0, i32 2
  %9 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, %12
  %16 = sub i32 %15, 1
  %17 = icmp sle i32 %7, %16
  br i1 %17, label %loop.body, label %loop.end3

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %u, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %u, align 4
  %20 = getelementptr %array, %array* %r, i32 0, i32 2
  %21 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 %24, 1
  store i32 %25, i32* %v, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %ifcont, %loop.body
  %26 = load i32, i32* %v, align 4
  %27 = add i32 %26, 1
  %28 = getelementptr %array, %array* %r, i32 0, i32 2
  %29 = load %dimension_descriptor*, %dimension_descriptor** %28, align 8
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %29, i32 1
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, %32
  %36 = sub i32 %35, 1
  %37 = icmp sle i32 %27, %36
  br i1 %37, label %loop.body2, label %loop.end

loop.body2:                                       ; preds = %loop.head1
  %38 = load i32, i32* %v, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %v, align 4
  %40 = load i32, i32* %u, align 4
  %41 = load i32, i32* %v, align 4
  %42 = getelementptr %array, %array* %r, i32 0, i32 2
  %43 = load %dimension_descriptor*, %dimension_descriptor** %42, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 %40, %46
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = mul i32 %49, %47
  %51 = add i32 0, %50
  %52 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 %41, %54
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = mul i32 %57, %55
  %59 = add i32 %51, %58
  %60 = getelementptr %array, %array* %r, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %59, %61
  %63 = getelementptr %array, %array* %r, i32 0, i32 0
  %64 = load float*, float** %63, align 8
  %65 = getelementptr inbounds float, float* %64, i32 %62
  %66 = load float, float* %65, align 4
  %67 = load i32, i32* %u, align 4
  %68 = load i32, i32* %v, align 4
  %69 = mul i32 %67, %68
  %70 = sitofp i32 %69 to float
  %71 = fcmp one float %66, %70
  br i1 %71, label %then, label %else

then:                                             ; preds = %loop.body2
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body2
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  br label %loop.head

loop.end3:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end3
  ret void
}

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %array_descriptor2 = alloca %array, align 8
  %array_descriptor = alloca %array.0, align 8
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %i = alloca %array.0*, align 8
  store %array.0* null, %array.0** %i, align 8
  %arr_desc = alloca %array.0, align 8
  %2 = getelementptr %array.0, %array.0* %arr_desc, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array.0, %array.0* %arr_desc, i32 0, i32 4
  store i32 1, i32* %6, align 4
  %7 = getelementptr %array.0, %array.0* %arr_desc, i32 0, i32 0
  store i32* null, i32** %7, align 8
  store %array.0* %arr_desc, %array.0** %i, align 8
  %iv = alloca [2 x i32], align 4
  %r = alloca %array*, align 8
  store %array* null, %array** %r, align 8
  %arr_desc1 = alloca %array, align 8
  %8 = getelementptr %array, %array* %arr_desc1, i32 0, i32 2
  %9 = alloca i32, align 4
  store i32 2, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = alloca %dimension_descriptor, i32 %10, align 8
  store %dimension_descriptor* %11, %dimension_descriptor** %8, align 8
  %12 = getelementptr %array, %array* %arr_desc1, i32 0, i32 4
  store i32 2, i32* %12, align 4
  %13 = getelementptr %array, %array* %arr_desc1, i32 0, i32 0
  store float* null, float** %13, align 8
  store %array* %arr_desc1, %array** %r, align 8
  %rv = alloca [6 x float], align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %14 = getelementptr [2 x i32], [2 x i32]* %iv, i32 0, i32 0
  %15 = getelementptr %array.0, %array.0* %array_descriptor, i32 0, i32 0
  store i32* %14, i32** %15, align 8
  %16 = getelementptr %array.0, %array.0* %array_descriptor, i32 0, i32 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %array_descriptor, i32 0, i32 2
  %18 = alloca i32, align 4
  store i32 1, i32* %18, align 4
  %19 = load i32, i32* %18, align 4
  %20 = alloca %dimension_descriptor, i32 %19, align 8
  %21 = getelementptr %array.0, %array.0* %array_descriptor, i32 0, i32 4
  store i32 1, i32* %21, align 4
  store %dimension_descriptor* %20, %dimension_descriptor** %17, align 8
  %22 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %22, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  store i32 1, i32* %24, align 4
  store i32 1, i32* %25, align 4
  store i32 2, i32* %26, align 4
  store %array.0* %array_descriptor, %array.0** %i, align 8
  %27 = getelementptr [6 x float], [6 x float]* %rv, i32 0, i32 0
  %28 = getelementptr %array, %array* %array_descriptor2, i32 0, i32 0
  store float* %27, float** %28, align 8
  %29 = getelementptr %array, %array* %array_descriptor2, i32 0, i32 1
  store i32 0, i32* %29, align 4
  %30 = getelementptr %array, %array* %array_descriptor2, i32 0, i32 2
  %31 = alloca i32, align 4
  store i32 2, i32* %31, align 4
  %32 = load i32, i32* %31, align 4
  %33 = alloca %dimension_descriptor, i32 %32, align 8
  %34 = getelementptr %array, %array* %array_descriptor2, i32 0, i32 4
  store i32 2, i32* %34, align 4
  store %dimension_descriptor* %33, %dimension_descriptor** %30, align 8
  %35 = load %dimension_descriptor*, %dimension_descriptor** %30, align 8
  %36 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 0
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 1
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 2
  store i32 1, i32* %37, align 4
  store i32 1, i32* %38, align 4
  store i32 2, i32* %39, align 4
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 1
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  store i32 2, i32* %41, align 4
  store i32 1, i32* %42, align 4
  store i32 3, i32* %43, align 4
  store %array* %array_descriptor2, %array** %r, align 8
  %44 = load %array.0*, %array.0** %i, align 8
  %45 = getelementptr %array.0, %array.0* %44, i32 0, i32 2
  %46 = load %dimension_descriptor*, %dimension_descriptor** %45, align 8
  %47 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %46, i32 0
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sub i32 1, %49
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = mul i32 %52, %50
  %54 = add i32 0, %53
  %55 = getelementptr %array.0, %array.0* %44, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %54, %56
  %58 = getelementptr %array.0, %array.0* %44, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds i32, i32* %59, i32 %57
  store i32 1, i32* %60, align 4
  %61 = load %array.0*, %array.0** %i, align 8
  %62 = getelementptr %array.0, %array.0* %61, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 1, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %69, %67
  %71 = add i32 0, %70
  %72 = getelementptr %array.0, %array.0* %61, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %71, %73
  %75 = getelementptr %array.0, %array.0* %61, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i32 %74
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %78, 1
  br i1 %79, label %then, label %else

then:                                             ; preds = %.entry
  %80 = load %array.0*, %array.0** %i, align 8
  %81 = getelementptr %array.0, %array.0* %80, i32 0, i32 2
  %82 = load %dimension_descriptor*, %dimension_descriptor** %81, align 8
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %82, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = sub i32 2, %85
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = mul i32 %88, %86
  %90 = add i32 0, %89
  %91 = getelementptr %array.0, %array.0* %80, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %90, %92
  %94 = getelementptr %array.0, %array.0* %80, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = getelementptr inbounds i32, i32* %95, i32 %93
  store i32 3, i32* %96, align 4
  br label %ifcont

else:                                             ; preds = %.entry
  %97 = load %array.0*, %array.0** %i, align 8
  %98 = getelementptr %array.0, %array.0* %97, i32 0, i32 2
  %99 = load %dimension_descriptor*, %dimension_descriptor** %98, align 8
  %100 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %99, i32 0
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = sub i32 2, %102
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = mul i32 %105, %103
  %107 = add i32 0, %106
  %108 = getelementptr %array.0, %array.0* %97, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %107, %109
  %111 = getelementptr %array.0, %array.0* %97, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = getelementptr inbounds i32, i32* %112, i32 %110
  store i32 7, i32* %113, align 4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %114 = getelementptr [2 x i32], [2 x i32]* %iv, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp ne i32 %115, 1
  br i1 %116, label %then3, label %else4

then3:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %117 = getelementptr [2 x i32], [2 x i32]* %iv, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = icmp ne i32 %118, 7
  br i1 %119, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %ifcont5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %120 = load %array*, %array** %r, align 8
  %121 = getelementptr %array, %array* %120, i32 0, i32 2
  %122 = load %dimension_descriptor*, %dimension_descriptor** %121, align 8
  %123 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %122, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %125, 1
  store i32 %126, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %ifcont8
  %127 = load i32, i32* %u, align 4
  %128 = add i32 %127, 1
  %129 = load %array*, %array** %r, align 8
  %130 = getelementptr %array, %array* %129, i32 0, i32 2
  %131 = load %dimension_descriptor*, %dimension_descriptor** %130, align 8
  %132 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %131, i32 0
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, %134
  %138 = sub i32 %137, 1
  %139 = icmp sle i32 %128, %138
  br i1 %139, label %loop.body, label %loop.end11

loop.body:                                        ; preds = %loop.head
  %140 = load i32, i32* %u, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %u, align 4
  %142 = load %array*, %array** %r, align 8
  %143 = getelementptr %array, %array* %142, i32 0, i32 2
  %144 = load %dimension_descriptor*, %dimension_descriptor** %143, align 8
  %145 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %144, i32 1
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = sub i32 %147, 1
  store i32 %148, i32* %v, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %loop.body
  %149 = load i32, i32* %v, align 4
  %150 = add i32 %149, 1
  %151 = load %array*, %array** %r, align 8
  %152 = getelementptr %array, %array* %151, i32 0, i32 2
  %153 = load %dimension_descriptor*, %dimension_descriptor** %152, align 8
  %154 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %153, i32 1
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %158, %156
  %160 = sub i32 %159, 1
  %161 = icmp sle i32 %150, %160
  br i1 %161, label %loop.body10, label %loop.end

loop.body10:                                      ; preds = %loop.head9
  %162 = load i32, i32* %v, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %v, align 4
  %164 = load i32, i32* %u, align 4
  %165 = load i32, i32* %v, align 4
  %166 = sub i32 %164, 1
  %167 = mul i32 1, %166
  %168 = add i32 0, %167
  %169 = sub i32 %165, 1
  %170 = mul i32 2, %169
  %171 = add i32 %168, %170
  %172 = getelementptr [6 x float], [6 x float]* %rv, i32 0, i32 %171
  %173 = load i32, i32* %u, align 4
  %174 = load i32, i32* %v, align 4
  %175 = mul i32 %173, %174
  %176 = sitofp i32 %175 to float
  store float %176, float* %172, align 4
  br label %loop.head9

loop.end:                                         ; preds = %loop.head9
  br label %loop.head

loop.end11:                                       ; preds = %loop.head
  call void @check_real(%array** %r)
  %177 = load %array*, %array** %r, align 8
  call void @check_real_without_pointer(%array* %177)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)
