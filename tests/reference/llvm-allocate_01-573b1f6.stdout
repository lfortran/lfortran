; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type { float, float }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { float*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define %complex_4 @reduce_sum_c(%complex_4* %c, i32* %__1c, i32* %__2c, i32* %__3c, i32* %__4c, i32* %__5c, i32* %__6c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = load i32, i32* %__1c, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = load i32, i32* %__2c, align 4
  %9 = load i32, i32* %__1c, align 4
  %10 = add i32 %8, %9
  %11 = sub i32 %10, 1
  %12 = icmp sle i32 %7, %11
  br i1 %12, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %__3c, align 4
  %16 = sub i32 %15, 1
  store i32 %16, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %17 = load i32, i32* %j, align 4
  %18 = add i32 %17, 1
  %19 = load i32, i32* %__4c, align 4
  %20 = load i32, i32* %__3c, align 4
  %21 = add i32 %19, %20
  %22 = sub i32 %21, 1
  %23 = icmp sle i32 %18, %22
  br i1 %23, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %24 = load i32, i32* %j, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %j, align 4
  %26 = load i32, i32* %__5c, align 4
  %27 = sub i32 %26, 1
  store i32 %27, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %28 = load i32, i32* %k, align 4
  %29 = add i32 %28, 1
  %30 = load i32, i32* %__6c, align 4
  %31 = load i32, i32* %__5c, align 4
  %32 = add i32 %30, %31
  %33 = sub i32 %32, 1
  %34 = icmp sle i32 %29, %33
  br i1 %34, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %35 = load i32, i32* %k, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %k, align 4
  %37 = load %complex_4, %complex_4* %r, align 4
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %j, align 4
  %40 = load i32, i32* %k, align 4
  %41 = load i32, i32* %__1c, align 4
  %42 = load i32, i32* %__2c, align 4
  %43 = load i32, i32* %__3c, align 4
  %44 = load i32, i32* %__4c, align 4
  %45 = load i32, i32* %__5c, align 4
  %46 = load i32, i32* %__6c, align 4
  %47 = sub i32 %38, %41
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = mul i32 1, %42
  %51 = sub i32 %39, %43
  %52 = mul i32 %50, %51
  %53 = add i32 %49, %52
  %54 = mul i32 %50, %44
  %55 = sub i32 %40, %45
  %56 = mul i32 %54, %55
  %57 = add i32 %53, %56
  %58 = mul i32 %54, %46
  %59 = getelementptr inbounds %complex_4, %complex_4* %c, i32 %57
  %60 = load %complex_4, %complex_4* %59, align 4
  %61 = alloca %complex_4, align 8
  store %complex_4 %37, %complex_4* %61, align 4
  %62 = alloca %complex_4, align 8
  store %complex_4 %60, %complex_4* %62, align 4
  %63 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %61, %complex_4* %62, %complex_4* %63)
  %64 = load %complex_4, %complex_4* %63, align 4
  store %complex_4 %64, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %65 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %65
}

define void @sum(%array** %a, %array.0** %b, %array.1** %c) {
.entry:
  %c_copy = alloca %array.1*, align 8
  store %array.1* null, %array.1** %c_copy, align 8
  %arr_desc = alloca %array.1, align 8
  %0 = getelementptr %array.1, %array.1* %arr_desc, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.1, %array.1* %arr_desc, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.1, %array.1* %arr_desc, i32 0, i32 0
  store %complex_4* null, %complex_4** %5, align 8
  store %array.1* %arr_desc, %array.1** %c_copy, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = load %array*, %array** %a, align 8
  %7 = getelementptr %array, %array* %6, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = load %array*, %array** %a, align 8
  %13 = getelementptr %array, %array* %12, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %14, i32 0
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %17
  %21 = sub i32 %20, 1
  %22 = load %array*, %array** %a, align 8
  %23 = getelementptr %array, %array* %22, i32 0, i32 2
  %24 = load %dimension_descriptor*, %dimension_descriptor** %23, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %21, %27
  %29 = add i32 %28, 1
  %30 = load %array.0*, %array.0** %b, align 8
  %31 = getelementptr %array.0, %array.0* %30, i32 0, i32 2
  %32 = load %dimension_descriptor*, %dimension_descriptor** %31, align 8
  %33 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %32, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load %array.0*, %array.0** %b, align 8
  %37 = getelementptr %array.0, %array.0* %36, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, %41
  %45 = sub i32 %44, 1
  %46 = load %array.0*, %array.0** %b, align 8
  %47 = getelementptr %array.0, %array.0* %46, i32 0, i32 2
  %48 = load %dimension_descriptor*, %dimension_descriptor** %47, align 8
  %49 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %48, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sub i32 %45, %51
  %53 = add i32 %52, 1
  %54 = load %array.0*, %array.0** %b, align 8
  %55 = getelementptr %array.0, %array.0* %54, i32 0, i32 2
  %56 = load %dimension_descriptor*, %dimension_descriptor** %55, align 8
  %57 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %56, i32 1
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = load %array.0*, %array.0** %b, align 8
  %61 = getelementptr %array.0, %array.0* %60, i32 0, i32 2
  %62 = load %dimension_descriptor*, %dimension_descriptor** %61, align 8
  %63 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %62, i32 1
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, %65
  %69 = sub i32 %68, 1
  %70 = load %array.0*, %array.0** %b, align 8
  %71 = getelementptr %array.0, %array.0* %70, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 1
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sub i32 %69, %75
  %77 = add i32 %76, 1
  %78 = load %array.1*, %array.1** %c_copy, align 8
  %79 = getelementptr %array.1, %array.1* %78, i32 0, i32 1
  store i32 0, i32* %79, align 4
  %80 = getelementptr %array.1, %array.1* %78, i32 0, i32 2
  %81 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 0
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 2
  store i32 1, i32* %83, align 4
  store i32 %11, i32* %84, align 4
  store i32 %29, i32* %85, align 4
  %86 = mul i32 1, %29
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 1
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 0
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 1
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 2
  store i32 %86, i32* %88, align 4
  store i32 %35, i32* %89, align 4
  store i32 %53, i32* %90, align 4
  %91 = mul i32 %86, %53
  %92 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 0
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 2
  store i32 %91, i32* %93, align 4
  store i32 %59, i32* %94, align 4
  store i32 %77, i32* %95, align 4
  %96 = mul i32 %91, %77
  %97 = getelementptr %array.1, %array.1* %78, i32 0, i32 0
  %98 = alloca i32, align 4
  %99 = mul i32 %96, 8
  store i32 %99, i32* %98, align 4
  %100 = load i32, i32* %98, align 4
  %101 = call i8* (i32, ...) @_lfortran_malloc(i32 %100)
  %102 = bitcast i8* %101 to %complex_4*
  store %complex_4* %102, %complex_4** %97, align 8
  %103 = load %array*, %array** %a, align 8
  %104 = getelementptr %array, %array* %103, i32 0, i32 2
  %105 = load %dimension_descriptor*, %dimension_descriptor** %104, align 8
  %106 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %105, i32 0
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = load %array*, %array** %a, align 8
  %110 = getelementptr %array, %array* %109, i32 0, i32 2
  %111 = load %dimension_descriptor*, %dimension_descriptor** %110, align 8
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %111, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, %114
  %118 = sub i32 %117, 1
  %119 = load %array*, %array** %a, align 8
  %120 = getelementptr %array, %array* %119, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %118, %124
  %126 = add i32 %125, 1
  %127 = load %array.0*, %array.0** %b, align 8
  %128 = getelementptr %array.0, %array.0* %127, i32 0, i32 2
  %129 = load %dimension_descriptor*, %dimension_descriptor** %128, align 8
  %130 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %129, i32 0
  %131 = getelementptr %dimension_descriptor, %dimension_descriptor* %130, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = load %array.0*, %array.0** %b, align 8
  %134 = getelementptr %array.0, %array.0* %133, i32 0, i32 2
  %135 = load %dimension_descriptor*, %dimension_descriptor** %134, align 8
  %136 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %135, i32 0
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, %138
  %142 = sub i32 %141, 1
  %143 = load %array.0*, %array.0** %b, align 8
  %144 = getelementptr %array.0, %array.0* %143, i32 0, i32 2
  %145 = load %dimension_descriptor*, %dimension_descriptor** %144, align 8
  %146 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %145, i32 0
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 %142, %148
  %150 = add i32 %149, 1
  %151 = load %array.0*, %array.0** %b, align 8
  %152 = getelementptr %array.0, %array.0* %151, i32 0, i32 2
  %153 = load %dimension_descriptor*, %dimension_descriptor** %152, align 8
  %154 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %153, i32 1
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = load %array.0*, %array.0** %b, align 8
  %158 = getelementptr %array.0, %array.0* %157, i32 0, i32 2
  %159 = load %dimension_descriptor*, %dimension_descriptor** %158, align 8
  %160 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %159, i32 1
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %160, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = add i32 %164, %162
  %166 = sub i32 %165, 1
  %167 = load %array.0*, %array.0** %b, align 8
  %168 = getelementptr %array.0, %array.0* %167, i32 0, i32 2
  %169 = load %dimension_descriptor*, %dimension_descriptor** %168, align 8
  %170 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %169, i32 1
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %166, %172
  %174 = add i32 %173, 1
  %175 = load %array.1*, %array.1** %c, align 8
  %176 = getelementptr %array.1, %array.1* %175, i32 0, i32 1
  store i32 0, i32* %176, align 4
  %177 = getelementptr %array.1, %array.1* %175, i32 0, i32 2
  %178 = load %dimension_descriptor*, %dimension_descriptor** %177, align 8
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 0
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 0
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 2
  store i32 1, i32* %180, align 4
  store i32 %108, i32* %181, align 4
  store i32 %126, i32* %182, align 4
  %183 = mul i32 1, %126
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 1
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 0
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 2
  store i32 %183, i32* %185, align 4
  store i32 %132, i32* %186, align 4
  store i32 %150, i32* %187, align 4
  %188 = mul i32 %183, %150
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 2
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 0
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 2
  store i32 %188, i32* %190, align 4
  store i32 %156, i32* %191, align 4
  store i32 %174, i32* %192, align 4
  %193 = mul i32 %188, %174
  %194 = getelementptr %array.1, %array.1* %175, i32 0, i32 0
  %195 = alloca i32, align 4
  %196 = mul i32 %193, 8
  store i32 %196, i32* %195, align 4
  %197 = load i32, i32* %195, align 4
  %198 = call i8* (i32, ...) @_lfortran_malloc(i32 %197)
  %199 = bitcast i8* %198 to %complex_4*
  store %complex_4* %199, %complex_4** %194, align 8
  %200 = load %array*, %array** %a, align 8
  %201 = getelementptr %array, %array* %200, i32 0, i32 2
  %202 = load %dimension_descriptor*, %dimension_descriptor** %201, align 8
  %203 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %202, i32 0
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = sub i32 %205, 1
  store i32 %206, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %207 = load i32, i32* %i, align 4
  %208 = add i32 %207, 1
  %209 = load %array*, %array** %a, align 8
  %210 = getelementptr %array, %array* %209, i32 0, i32 2
  %211 = load %dimension_descriptor*, %dimension_descriptor** %210, align 8
  %212 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %211, i32 0
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, %214
  %218 = sub i32 %217, 1
  %219 = icmp sle i32 %208, %218
  br i1 %219, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %220 = load i32, i32* %i, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %i, align 4
  %222 = load %array.0*, %array.0** %b, align 8
  %223 = getelementptr %array.0, %array.0* %222, i32 0, i32 2
  %224 = load %dimension_descriptor*, %dimension_descriptor** %223, align 8
  %225 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %224, i32 0
  %226 = getelementptr %dimension_descriptor, %dimension_descriptor* %225, i32 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = sub i32 %227, 1
  store i32 %228, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %229 = load i32, i32* %j, align 4
  %230 = add i32 %229, 1
  %231 = load %array.0*, %array.0** %b, align 8
  %232 = getelementptr %array.0, %array.0* %231, i32 0, i32 2
  %233 = load %dimension_descriptor*, %dimension_descriptor** %232, align 8
  %234 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %233, i32 0
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 1
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %234, i32 0, i32 2
  %238 = load i32, i32* %237, align 4
  %239 = add i32 %238, %236
  %240 = sub i32 %239, 1
  %241 = icmp sle i32 %230, %240
  br i1 %241, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %242 = load i32, i32* %j, align 4
  %243 = add i32 %242, 1
  store i32 %243, i32* %j, align 4
  %244 = load %array.0*, %array.0** %b, align 8
  %245 = getelementptr %array.0, %array.0* %244, i32 0, i32 2
  %246 = load %dimension_descriptor*, %dimension_descriptor** %245, align 8
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 1
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 %249, 1
  store i32 %250, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %251 = load i32, i32* %k, align 4
  %252 = add i32 %251, 1
  %253 = load %array.0*, %array.0** %b, align 8
  %254 = getelementptr %array.0, %array.0* %253, i32 0, i32 2
  %255 = load %dimension_descriptor*, %dimension_descriptor** %254, align 8
  %256 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %255, i32 1
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 2
  %260 = load i32, i32* %259, align 4
  %261 = add i32 %260, %258
  %262 = sub i32 %261, 1
  %263 = icmp sle i32 %252, %262
  br i1 %263, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %264 = load i32, i32* %k, align 4
  %265 = add i32 %264, 1
  store i32 %265, i32* %k, align 4
  %266 = load i32, i32* %i, align 4
  %267 = load i32, i32* %j, align 4
  %268 = load i32, i32* %k, align 4
  %269 = load %array.1*, %array.1** %c_copy, align 8
  %270 = getelementptr %array.1, %array.1* %269, i32 0, i32 2
  %271 = load %dimension_descriptor*, %dimension_descriptor** %270, align 8
  %272 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 0
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = sub i32 %266, %274
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = mul i32 %277, %275
  %279 = add i32 0, %278
  %280 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 1
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 %267, %282
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = mul i32 %285, %283
  %287 = add i32 %279, %286
  %288 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 2
  %289 = getelementptr %dimension_descriptor, %dimension_descriptor* %288, i32 0, i32 1
  %290 = load i32, i32* %289, align 4
  %291 = sub i32 %268, %290
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %288, i32 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = mul i32 %293, %291
  %295 = add i32 %287, %294
  %296 = getelementptr %array.1, %array.1* %269, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = add i32 %295, %297
  %299 = getelementptr %array.1, %array.1* %269, i32 0, i32 0
  %300 = load %complex_4*, %complex_4** %299, align 8
  %301 = getelementptr inbounds %complex_4, %complex_4* %300, i32 %298
  %302 = load i32, i32* %i, align 4
  %303 = load %array*, %array** %a, align 8
  %304 = getelementptr %array, %array* %303, i32 0, i32 2
  %305 = load %dimension_descriptor*, %dimension_descriptor** %304, align 8
  %306 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %305, i32 0
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sub i32 %302, %308
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = mul i32 %311, %309
  %313 = add i32 0, %312
  %314 = getelementptr %array, %array* %303, i32 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = add i32 %313, %315
  %317 = getelementptr %array, %array* %303, i32 0, i32 0
  %318 = load i32*, i32** %317, align 8
  %319 = getelementptr inbounds i32, i32* %318, i32 %316
  %320 = load i32, i32* %319, align 4
  %321 = sitofp i32 %320 to float
  %322 = load i32, i32* %j, align 4
  %323 = load i32, i32* %k, align 4
  %324 = load %array.0*, %array.0** %b, align 8
  %325 = getelementptr %array.0, %array.0* %324, i32 0, i32 2
  %326 = load %dimension_descriptor*, %dimension_descriptor** %325, align 8
  %327 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %326, i32 0
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = sub i32 %322, %329
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = mul i32 %332, %330
  %334 = add i32 0, %333
  %335 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %326, i32 1
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 %323, %337
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = mul i32 %340, %338
  %342 = add i32 %334, %341
  %343 = getelementptr %array.0, %array.0* %324, i32 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = add i32 %342, %344
  %346 = getelementptr %array.0, %array.0* %324, i32 0, i32 0
  %347 = load float*, float** %346, align 8
  %348 = getelementptr inbounds float, float* %347, i32 %345
  %349 = load float, float* %348, align 4
  %350 = fadd float %321, %349
  %351 = alloca %complex_4, align 8
  %352 = getelementptr %complex_4, %complex_4* %351, i32 0, i32 0
  %353 = getelementptr %complex_4, %complex_4* %351, i32 0, i32 1
  store float %350, float* %352, align 4
  store float 0.000000e+00, float* %353, align 4
  %354 = load %complex_4, %complex_4* %351, align 4
  store %complex_4 %354, %complex_4* %301, align 4
  %355 = load i32, i32* %i, align 4
  %356 = load i32, i32* %j, align 4
  %357 = load i32, i32* %k, align 4
  %358 = load %array.1*, %array.1** %c, align 8
  %359 = getelementptr %array.1, %array.1* %358, i32 0, i32 2
  %360 = load %dimension_descriptor*, %dimension_descriptor** %359, align 8
  %361 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %360, i32 0
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = sub i32 %355, %363
  %365 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = mul i32 %366, %364
  %368 = add i32 0, %367
  %369 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %360, i32 1
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %356, %371
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = mul i32 %374, %372
  %376 = add i32 %368, %375
  %377 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %360, i32 2
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %377, i32 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = sub i32 %357, %379
  %381 = getelementptr %dimension_descriptor, %dimension_descriptor* %377, i32 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = mul i32 %382, %380
  %384 = add i32 %376, %383
  %385 = getelementptr %array.1, %array.1* %358, i32 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = add i32 %384, %386
  %388 = getelementptr %array.1, %array.1* %358, i32 0, i32 0
  %389 = load %complex_4*, %complex_4** %388, align 8
  %390 = getelementptr inbounds %complex_4, %complex_4* %389, i32 %387
  %391 = load i32, i32* %i, align 4
  %392 = load %array*, %array** %a, align 8
  %393 = getelementptr %array, %array* %392, i32 0, i32 2
  %394 = load %dimension_descriptor*, %dimension_descriptor** %393, align 8
  %395 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %394, i32 0
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 1
  %397 = load i32, i32* %396, align 4
  %398 = sub i32 %391, %397
  %399 = getelementptr %dimension_descriptor, %dimension_descriptor* %395, i32 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = mul i32 %400, %398
  %402 = add i32 0, %401
  %403 = getelementptr %array, %array* %392, i32 0, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = add i32 %402, %404
  %406 = getelementptr %array, %array* %392, i32 0, i32 0
  %407 = load i32*, i32** %406, align 8
  %408 = getelementptr inbounds i32, i32* %407, i32 %405
  %409 = load i32, i32* %408, align 4
  %410 = sitofp i32 %409 to float
  %411 = load i32, i32* %j, align 4
  %412 = load i32, i32* %k, align 4
  %413 = load %array.0*, %array.0** %b, align 8
  %414 = getelementptr %array.0, %array.0* %413, i32 0, i32 2
  %415 = load %dimension_descriptor*, %dimension_descriptor** %414, align 8
  %416 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %415, i32 0
  %417 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = sub i32 %411, %418
  %420 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 0
  %421 = load i32, i32* %420, align 4
  %422 = mul i32 %421, %419
  %423 = add i32 0, %422
  %424 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %415, i32 1
  %425 = getelementptr %dimension_descriptor, %dimension_descriptor* %424, i32 0, i32 1
  %426 = load i32, i32* %425, align 4
  %427 = sub i32 %412, %426
  %428 = getelementptr %dimension_descriptor, %dimension_descriptor* %424, i32 0, i32 0
  %429 = load i32, i32* %428, align 4
  %430 = mul i32 %429, %427
  %431 = add i32 %423, %430
  %432 = getelementptr %array.0, %array.0* %413, i32 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = add i32 %431, %433
  %435 = getelementptr %array.0, %array.0* %413, i32 0, i32 0
  %436 = load float*, float** %435, align 8
  %437 = getelementptr inbounds float, float* %436, i32 %434
  %438 = load float, float* %437, align 4
  %439 = fadd float %410, %438
  %440 = alloca %complex_4, align 8
  %441 = getelementptr %complex_4, %complex_4* %440, i32 0, i32 0
  %442 = getelementptr %complex_4, %complex_4* %440, i32 0, i32 1
  store float %439, float* %441, align 4
  store float 0.000000e+00, float* %442, align 4
  %443 = load %complex_4, %complex_4* %440, align 4
  store %complex_4 %443, %complex_4* %390, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %444 = load %array.1*, %array.1** %c_copy, align 8
  %445 = getelementptr %array.1, %array.1* %444, i32 0, i32 0
  %446 = load %complex_4*, %complex_4** %445, align 8
  %447 = ptrtoint %complex_4* %446 to i64
  %448 = icmp ne i64 %447, 0
  br i1 %448, label %then, label %else

then:                                             ; preds = %loop.end6
  %449 = getelementptr %array.1, %array.1* %444, i32 0, i32 0
  %450 = load %complex_4*, %complex_4** %449, align 8
  %451 = alloca i8*, align 8
  %452 = bitcast %complex_4* %450 to i8*
  store i8* %452, i8** %451, align 8
  %453 = load i8*, i8** %451, align 8
  call void (i8*, ...) @_lfortran_free(i8* %453)
  %454 = getelementptr %array.1, %array.1* %444, i32 0, i32 0
  store %complex_4* null, %complex_4** %454, align 8
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %455 = load %array.1*, %array.1** %c_copy, align 8
  %456 = getelementptr %array.1, %array.1* %455, i32 0, i32 0
  %457 = load %complex_4*, %complex_4** %456, align 8
  %458 = ptrtoint %complex_4* %457 to i64
  %459 = icmp ne i64 %458, 0
  br i1 %459, label %then7, label %else8

then7:                                            ; preds = %ifcont
  %460 = getelementptr %array.1, %array.1* %455, i32 0, i32 0
  %461 = load %complex_4*, %complex_4** %460, align 8
  %462 = alloca i8*, align 8
  %463 = bitcast %complex_4* %461 to i8*
  store i8* %463, i8** %462, align 8
  %464 = load i8*, i8** %462, align 8
  call void (i8*, ...) @_lfortran_free(i8* %464)
  %465 = getelementptr %array.1, %array.1* %455, i32 0, i32 0
  store %complex_4* null, %complex_4** %465, align 8
  br label %ifcont9

else8:                                            ; preds = %ifcont
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  br label %return

return:                                           ; preds = %ifcont9
  ret void
}

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value61 = alloca i32, align 4
  %call_arg_value60 = alloca i32, align 4
  %call_arg_value59 = alloca i32, align 4
  %call_arg_value58 = alloca i32, align 4
  %call_arg_value57 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array*, align 8
  store %array* null, %array** %a, align 8
  %arr_desc = alloca %array, align 8
  %6 = getelementptr %array, %array* %arr_desc, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array, %array* %arr_desc, i32 0, i32 4
  store i32 1, i32* %10, align 4
  %11 = getelementptr %array, %array* %arr_desc, i32 0, i32 0
  store i32* null, i32** %11, align 8
  store %array* %arr_desc, %array** %a, align 8
  %b = alloca %array.0*, align 8
  store %array.0* null, %array.0** %b, align 8
  %arr_desc1 = alloca %array.0, align 8
  %12 = getelementptr %array.0, %array.0* %arr_desc1, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 2, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array.0, %array.0* %arr_desc1, i32 0, i32 4
  store i32 2, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %arr_desc1, i32 0, i32 0
  store float* null, float** %17, align 8
  store %array.0* %arr_desc1, %array.0** %b, align 8
  %c = alloca %array.1*, align 8
  store %array.1* null, %array.1** %c, align 8
  %arr_desc2 = alloca %array.1, align 8
  %18 = getelementptr %array.1, %array.1* %arr_desc2, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 3, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %22 = getelementptr %array.1, %array.1* %arr_desc2, i32 0, i32 4
  store i32 3, i32* %22, align 4
  %23 = getelementptr %array.1, %array.1* %arr_desc2, i32 0, i32 0
  store %complex_4* null, %complex_4** %23, align 8
  store %array.1* %arr_desc2, %array.1** %c, align 8
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %24 = load i32, i32* %n, align 4
  %25 = add i32 %24, 1
  %26 = load %array*, %array** %a, align 8
  %27 = getelementptr %array, %array* %26, i32 0, i32 1
  store i32 0, i32* %27, align 4
  %28 = getelementptr %array, %array* %26, i32 0, i32 2
  %29 = load %dimension_descriptor*, %dimension_descriptor** %28, align 8
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %29, i32 0
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 1
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 2
  store i32 1, i32* %31, align 4
  store i32 5, i32* %32, align 4
  store i32 %25, i32* %33, align 4
  %34 = mul i32 1, %25
  %35 = getelementptr %array, %array* %26, i32 0, i32 0
  %36 = alloca i32, align 4
  %37 = mul i32 %34, 4
  store i32 %37, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = call i8* (i32, ...) @_lfortran_malloc(i32 %38)
  %40 = bitcast i8* %39 to i32*
  store i32* %40, i32** %35, align 8
  %41 = load i32, i32* %n, align 4
  %42 = load i32, i32* %n, align 4
  %43 = mul i32 2, %42
  %44 = load i32, i32* %n, align 4
  %45 = sub i32 %43, %44
  %46 = add i32 %45, 1
  %47 = load i32, i32* %n, align 4
  %48 = load i32, i32* %n, align 4
  %49 = mul i32 3, %48
  %50 = load i32, i32* %n, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  %53 = load %array.0*, %array.0** %b, align 8
  %54 = getelementptr %array.0, %array.0* %53, i32 0, i32 1
  store i32 0, i32* %54, align 4
  %55 = getelementptr %array.0, %array.0* %53, i32 0, i32 2
  %56 = load %dimension_descriptor*, %dimension_descriptor** %55, align 8
  %57 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %56, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 0
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 2
  store i32 1, i32* %58, align 4
  store i32 %41, i32* %59, align 4
  store i32 %46, i32* %60, align 4
  %61 = mul i32 1, %46
  %62 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %56, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 0
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 2
  store i32 %61, i32* %63, align 4
  store i32 %47, i32* %64, align 4
  store i32 %52, i32* %65, align 4
  %66 = mul i32 %61, %52
  %67 = getelementptr %array.0, %array.0* %53, i32 0, i32 0
  %68 = alloca i32, align 4
  %69 = mul i32 %66, 4
  store i32 %69, i32* %68, align 4
  %70 = load i32, i32* %68, align 4
  %71 = call i8* (i32, ...) @_lfortran_malloc(i32 %70)
  %72 = bitcast i8* %71 to float*
  store float* %72, float** %67, align 8
  store i32 0, i32* %ierr, align 4
  %73 = load %array*, %array** %a, align 8
  %74 = getelementptr %array, %array* %73, i32 0, i32 2
  %75 = load %dimension_descriptor*, %dimension_descriptor** %74, align 8
  %76 = getelementptr %array, %array* %73, i32 0, i32 4
  %77 = load i32, i32* %76, align 4
  store i32 1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %78 = load i32, i32* %5, align 4
  %79 = icmp slt i32 %78, %77
  br i1 %79, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %80 = load i32, i32* %5, align 4
  %81 = load i32, i32* %4, align 4
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %75, i32 %80
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 %81, %84
  store i32 %85, i32* %4, align 4
  %86 = add i32 %80, 1
  store i32 %86, i32* %5, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %87 = load i32, i32* %4, align 4
  %88 = load i32, i32* %n, align 4
  %89 = add i32 %88, 1
  %90 = icmp ne i32 %87, %89
  br i1 %90, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %91 = load %array.0*, %array.0** %b, align 8
  %92 = getelementptr %array.0, %array.0* %91, i32 0, i32 2
  %93 = load %dimension_descriptor*, %dimension_descriptor** %92, align 8
  %94 = getelementptr %array.0, %array.0* %91, i32 0, i32 4
  %95 = load i32, i32* %94, align 4
  store i32 1, i32* %2, align 4
  store i32 0, i32* %3, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %ifcont
  %96 = load i32, i32* %3, align 4
  %97 = icmp slt i32 %96, %95
  br i1 %97, label %loop.body4, label %loop.end5

loop.body4:                                       ; preds = %loop.head3
  %98 = load i32, i32* %3, align 4
  %99 = load i32, i32* %2, align 4
  %100 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %93, i32 %98
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %100, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = mul i32 %99, %102
  store i32 %103, i32* %2, align 4
  %104 = add i32 %98, 1
  store i32 %104, i32* %3, align 4
  br label %loop.head3

loop.end5:                                        ; preds = %loop.head3
  %105 = load i32, i32* %2, align 4
  %106 = load i32, i32* %n, align 4
  %107 = add i32 %106, 1
  %108 = load i32, i32* %n, align 4
  %109 = mul i32 2, %108
  %110 = add i32 %109, 1
  %111 = mul i32 %107, %110
  %112 = icmp ne i32 %105, %111
  br i1 %112, label %then6, label %else7

then6:                                            ; preds = %loop.end5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %loop.end5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %113 = load %array*, %array** %a, align 8
  %114 = getelementptr %array, %array* %113, i32 0, i32 2
  %115 = load %dimension_descriptor*, %dimension_descriptor** %114, align 8
  %116 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %115, i32 0
  %117 = getelementptr %dimension_descriptor, %dimension_descriptor* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = sub i32 %118, 1
  store i32 %119, i32* %i, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont8
  %120 = load i32, i32* %i, align 4
  %121 = add i32 %120, 1
  %122 = load %array*, %array** %a, align 8
  %123 = getelementptr %array, %array* %122, i32 0, i32 2
  %124 = load %dimension_descriptor*, %dimension_descriptor** %123, align 8
  %125 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %124, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %127
  %131 = sub i32 %130, 1
  %132 = icmp sle i32 %121, %131
  br i1 %132, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %133 = load i32, i32* %i, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %i, align 4
  %135 = load i32, i32* %i, align 4
  %136 = load %array*, %array** %a, align 8
  %137 = getelementptr %array, %array* %136, i32 0, i32 2
  %138 = load %dimension_descriptor*, %dimension_descriptor** %137, align 8
  %139 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %138, i32 0
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = sub i32 %135, %141
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = mul i32 %144, %142
  %146 = add i32 0, %145
  %147 = getelementptr %array, %array* %136, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %146, %148
  %150 = getelementptr %array, %array* %136, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds i32, i32* %151, i32 %149
  %153 = load i32, i32* %i, align 4
  store i32 %153, i32* %152, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %154 = load %array.0*, %array.0** %b, align 8
  %155 = getelementptr %array.0, %array.0* %154, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 %159, 1
  store i32 %160, i32* %i, align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.end16, %loop.end11
  %161 = load i32, i32* %i, align 4
  %162 = add i32 %161, 1
  %163 = load %array.0*, %array.0** %b, align 8
  %164 = getelementptr %array.0, %array.0* %163, i32 0, i32 2
  %165 = load %dimension_descriptor*, %dimension_descriptor** %164, align 8
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %165, i32 0
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %170, %168
  %172 = sub i32 %171, 1
  %173 = icmp sle i32 %162, %172
  br i1 %173, label %loop.body13, label %loop.end17

loop.body13:                                      ; preds = %loop.head12
  %174 = load i32, i32* %i, align 4
  %175 = add i32 %174, 1
  store i32 %175, i32* %i, align 4
  %176 = load %array.0*, %array.0** %b, align 8
  %177 = getelementptr %array.0, %array.0* %176, i32 0, i32 2
  %178 = load %dimension_descriptor*, %dimension_descriptor** %177, align 8
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 1
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = sub i32 %181, 1
  store i32 %182, i32* %j, align 4
  br label %loop.head14

loop.head14:                                      ; preds = %loop.body15, %loop.body13
  %183 = load i32, i32* %j, align 4
  %184 = add i32 %183, 1
  %185 = load %array.0*, %array.0** %b, align 8
  %186 = getelementptr %array.0, %array.0* %185, i32 0, i32 2
  %187 = load %dimension_descriptor*, %dimension_descriptor** %186, align 8
  %188 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %187, i32 1
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 2
  %192 = load i32, i32* %191, align 4
  %193 = add i32 %192, %190
  %194 = sub i32 %193, 1
  %195 = icmp sle i32 %184, %194
  br i1 %195, label %loop.body15, label %loop.end16

loop.body15:                                      ; preds = %loop.head14
  %196 = load i32, i32* %j, align 4
  %197 = add i32 %196, 1
  store i32 %197, i32* %j, align 4
  %198 = load i32, i32* %i, align 4
  %199 = load i32, i32* %j, align 4
  %200 = load %array.0*, %array.0** %b, align 8
  %201 = getelementptr %array.0, %array.0* %200, i32 0, i32 2
  %202 = load %dimension_descriptor*, %dimension_descriptor** %201, align 8
  %203 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %202, i32 0
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = sub i32 %198, %205
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = mul i32 %208, %206
  %210 = add i32 0, %209
  %211 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %202, i32 1
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = sub i32 %199, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %216, %214
  %218 = add i32 %210, %217
  %219 = getelementptr %array.0, %array.0* %200, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = add i32 %218, %220
  %222 = getelementptr %array.0, %array.0* %200, i32 0, i32 0
  %223 = load float*, float** %222, align 8
  %224 = getelementptr inbounds float, float* %223, i32 %221
  %225 = load i32, i32* %i, align 4
  %226 = load i32, i32* %j, align 4
  %227 = add i32 %225, %226
  %228 = sitofp i32 %227 to float
  store float %228, float* %224, align 4
  br label %loop.head14

loop.end16:                                       ; preds = %loop.head14
  br label %loop.head12

loop.end17:                                       ; preds = %loop.head12
  %229 = load %array.1*, %array.1** %c, align 8
  %230 = getelementptr %array.1, %array.1* %229, i32 0, i32 0
  %231 = load %complex_4*, %complex_4** %230, align 8
  %232 = ptrtoint %complex_4* %231 to i64
  %233 = icmp ne i64 %232, 0
  br i1 %233, label %then18, label %else19

then18:                                           ; preds = %loop.end17
  %234 = getelementptr %array.1, %array.1* %229, i32 0, i32 0
  %235 = load %complex_4*, %complex_4** %234, align 8
  %236 = alloca i8*, align 8
  %237 = bitcast %complex_4* %235 to i8*
  store i8* %237, i8** %236, align 8
  %238 = load i8*, i8** %236, align 8
  call void (i8*, ...) @_lfortran_free(i8* %238)
  %239 = getelementptr %array.1, %array.1* %229, i32 0, i32 0
  store %complex_4* null, %complex_4** %239, align 8
  br label %ifcont20

else19:                                           ; preds = %loop.end17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  call void @sum(%array** %a, %array.0** %b, %array.1** %c)
  %240 = load %array.1*, %array.1** %c, align 8
  %241 = getelementptr %array.1, %array.1* %240, i32 0, i32 2
  %242 = load %dimension_descriptor*, %dimension_descriptor** %241, align 8
  %243 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %242, i32 0
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = icmp ne i32 %245, 5
  %247 = load %array.1*, %array.1** %c, align 8
  %248 = getelementptr %array.1, %array.1* %247, i32 0, i32 2
  %249 = load %dimension_descriptor*, %dimension_descriptor** %248, align 8
  %250 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %249, i32 0
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = add i32 %254, %252
  %256 = sub i32 %255, 1
  %257 = load i32, i32* %n, align 4
  %258 = add i32 %257, 5
  %259 = icmp ne i32 %256, %258
  %260 = icmp eq i1 %246, false
  %261 = select i1 %260, i1 %259, i1 %246
  br i1 %261, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont23

else22:                                           ; preds = %ifcont20
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %then21
  %262 = load %array.1*, %array.1** %c, align 8
  %263 = getelementptr %array.1, %array.1* %262, i32 0, i32 2
  %264 = load %dimension_descriptor*, %dimension_descriptor** %263, align 8
  %265 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %264, i32 1
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = load i32, i32* %n, align 4
  %269 = icmp ne i32 %267, %268
  %270 = load %array.1*, %array.1** %c, align 8
  %271 = getelementptr %array.1, %array.1* %270, i32 0, i32 2
  %272 = load %dimension_descriptor*, %dimension_descriptor** %271, align 8
  %273 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %272, i32 1
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %273, i32 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %273, i32 0, i32 2
  %277 = load i32, i32* %276, align 4
  %278 = add i32 %277, %275
  %279 = sub i32 %278, 1
  %280 = load i32, i32* %n, align 4
  %281 = mul i32 2, %280
  %282 = icmp ne i32 %279, %281
  %283 = icmp eq i1 %269, false
  %284 = select i1 %283, i1 %282, i1 %269
  br i1 %284, label %then24, label %else25

then24:                                           ; preds = %ifcont23
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont23
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  %285 = load %array.1*, %array.1** %c, align 8
  %286 = getelementptr %array.1, %array.1* %285, i32 0, i32 2
  %287 = load %dimension_descriptor*, %dimension_descriptor** %286, align 8
  %288 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %287, i32 2
  %289 = getelementptr %dimension_descriptor, %dimension_descriptor* %288, i32 0, i32 1
  %290 = load i32, i32* %289, align 4
  %291 = load i32, i32* %n, align 4
  %292 = icmp ne i32 %290, %291
  %293 = load %array.1*, %array.1** %c, align 8
  %294 = getelementptr %array.1, %array.1* %293, i32 0, i32 2
  %295 = load %dimension_descriptor*, %dimension_descriptor** %294, align 8
  %296 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %295, i32 2
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %296, i32 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %296, i32 0, i32 2
  %300 = load i32, i32* %299, align 4
  %301 = add i32 %300, %298
  %302 = sub i32 %301, 1
  %303 = load i32, i32* %n, align 4
  %304 = mul i32 3, %303
  %305 = icmp ne i32 %302, %304
  %306 = icmp eq i1 %292, false
  %307 = select i1 %306, i1 %305, i1 %292
  br i1 %307, label %then27, label %else28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %ifcont26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %308 = load %array*, %array** %a, align 8
  %309 = getelementptr %array, %array* %308, i32 0, i32 2
  %310 = load %dimension_descriptor*, %dimension_descriptor** %309, align 8
  %311 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %310, i32 0
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = sub i32 %313, 1
  store i32 %314, i32* %i, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %ifcont34, %ifcont29
  %315 = load i32, i32* %i, align 4
  %316 = add i32 %315, 1
  %317 = load %array*, %array** %a, align 8
  %318 = getelementptr %array, %array* %317, i32 0, i32 2
  %319 = load %dimension_descriptor*, %dimension_descriptor** %318, align 8
  %320 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %319, i32 0
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 2
  %324 = load i32, i32* %323, align 4
  %325 = add i32 %324, %322
  %326 = sub i32 %325, 1
  %327 = icmp sle i32 %316, %326
  br i1 %327, label %loop.body31, label %loop.end35

loop.body31:                                      ; preds = %loop.head30
  %328 = load i32, i32* %i, align 4
  %329 = add i32 %328, 1
  store i32 %329, i32* %i, align 4
  %330 = load i32, i32* %i, align 4
  %331 = load %array*, %array** %a, align 8
  %332 = getelementptr %array, %array* %331, i32 0, i32 2
  %333 = load %dimension_descriptor*, %dimension_descriptor** %332, align 8
  %334 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %333, i32 0
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = sub i32 %330, %336
  %338 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = mul i32 %339, %337
  %341 = add i32 0, %340
  %342 = getelementptr %array, %array* %331, i32 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = add i32 %341, %343
  %345 = getelementptr %array, %array* %331, i32 0, i32 0
  %346 = load i32*, i32** %345, align 8
  %347 = getelementptr inbounds i32, i32* %346, i32 %344
  %348 = load i32, i32* %347, align 4
  %349 = load i32, i32* %i, align 4
  %350 = icmp ne i32 %348, %349
  br i1 %350, label %then32, label %else33

then32:                                           ; preds = %loop.body31
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont34

else33:                                           ; preds = %loop.body31
  br label %ifcont34

ifcont34:                                         ; preds = %else33, %then32
  br label %loop.head30

loop.end35:                                       ; preds = %loop.head30
  %351 = load %array.0*, %array.0** %b, align 8
  %352 = getelementptr %array.0, %array.0* %351, i32 0, i32 2
  %353 = load %dimension_descriptor*, %dimension_descriptor** %352, align 8
  %354 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %353, i32 0
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %354, i32 0, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = sub i32 %356, 1
  store i32 %357, i32* %i, align 4
  br label %loop.head36

loop.head36:                                      ; preds = %loop.end43, %loop.end35
  %358 = load i32, i32* %i, align 4
  %359 = add i32 %358, 1
  %360 = load %array.0*, %array.0** %b, align 8
  %361 = getelementptr %array.0, %array.0* %360, i32 0, i32 2
  %362 = load %dimension_descriptor*, %dimension_descriptor** %361, align 8
  %363 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %362, i32 0
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 2
  %367 = load i32, i32* %366, align 4
  %368 = add i32 %367, %365
  %369 = sub i32 %368, 1
  %370 = icmp sle i32 %359, %369
  br i1 %370, label %loop.body37, label %loop.end44

loop.body37:                                      ; preds = %loop.head36
  %371 = load i32, i32* %i, align 4
  %372 = add i32 %371, 1
  store i32 %372, i32* %i, align 4
  %373 = load %array.0*, %array.0** %b, align 8
  %374 = getelementptr %array.0, %array.0* %373, i32 0, i32 2
  %375 = load %dimension_descriptor*, %dimension_descriptor** %374, align 8
  %376 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %375, i32 1
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %376, i32 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = sub i32 %378, 1
  store i32 %379, i32* %j, align 4
  br label %loop.head38

loop.head38:                                      ; preds = %ifcont42, %loop.body37
  %380 = load i32, i32* %j, align 4
  %381 = add i32 %380, 1
  %382 = load %array.0*, %array.0** %b, align 8
  %383 = getelementptr %array.0, %array.0* %382, i32 0, i32 2
  %384 = load %dimension_descriptor*, %dimension_descriptor** %383, align 8
  %385 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %384, i32 1
  %386 = getelementptr %dimension_descriptor, %dimension_descriptor* %385, i32 0, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = getelementptr %dimension_descriptor, %dimension_descriptor* %385, i32 0, i32 2
  %389 = load i32, i32* %388, align 4
  %390 = add i32 %389, %387
  %391 = sub i32 %390, 1
  %392 = icmp sle i32 %381, %391
  br i1 %392, label %loop.body39, label %loop.end43

loop.body39:                                      ; preds = %loop.head38
  %393 = load i32, i32* %j, align 4
  %394 = add i32 %393, 1
  store i32 %394, i32* %j, align 4
  %395 = load i32, i32* %i, align 4
  %396 = load i32, i32* %j, align 4
  %397 = load %array.0*, %array.0** %b, align 8
  %398 = getelementptr %array.0, %array.0* %397, i32 0, i32 2
  %399 = load %dimension_descriptor*, %dimension_descriptor** %398, align 8
  %400 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %399, i32 0
  %401 = getelementptr %dimension_descriptor, %dimension_descriptor* %400, i32 0, i32 1
  %402 = load i32, i32* %401, align 4
  %403 = sub i32 %395, %402
  %404 = getelementptr %dimension_descriptor, %dimension_descriptor* %400, i32 0, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = mul i32 %405, %403
  %407 = add i32 0, %406
  %408 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %399, i32 1
  %409 = getelementptr %dimension_descriptor, %dimension_descriptor* %408, i32 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = sub i32 %396, %410
  %412 = getelementptr %dimension_descriptor, %dimension_descriptor* %408, i32 0, i32 0
  %413 = load i32, i32* %412, align 4
  %414 = mul i32 %413, %411
  %415 = add i32 %407, %414
  %416 = getelementptr %array.0, %array.0* %397, i32 0, i32 1
  %417 = load i32, i32* %416, align 4
  %418 = add i32 %415, %417
  %419 = getelementptr %array.0, %array.0* %397, i32 0, i32 0
  %420 = load float*, float** %419, align 8
  %421 = getelementptr inbounds float, float* %420, i32 %418
  %422 = load float, float* %421, align 4
  %423 = load i32, i32* %i, align 4
  %424 = load i32, i32* %j, align 4
  %425 = add i32 %423, %424
  %426 = sitofp i32 %425 to float
  %427 = fcmp one float %422, %426
  br i1 %427, label %then40, label %else41

then40:                                           ; preds = %loop.body39
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont42

else41:                                           ; preds = %loop.body39
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  br label %loop.head38

loop.end43:                                       ; preds = %loop.head38
  br label %loop.head36

loop.end44:                                       ; preds = %loop.head36
  %428 = load %array.1*, %array.1** %c, align 8
  %429 = getelementptr %array.1, %array.1* %428, i32 0, i32 2
  %430 = load %dimension_descriptor*, %dimension_descriptor** %429, align 8
  %431 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %430, i32 0
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %431, i32 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = sub i32 %433, 1
  store i32 %434, i32* %i, align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.end55, %loop.end44
  %435 = load i32, i32* %i, align 4
  %436 = add i32 %435, 1
  %437 = load %array.1*, %array.1** %c, align 8
  %438 = getelementptr %array.1, %array.1* %437, i32 0, i32 2
  %439 = load %dimension_descriptor*, %dimension_descriptor** %438, align 8
  %440 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %439, i32 0
  %441 = getelementptr %dimension_descriptor, %dimension_descriptor* %440, i32 0, i32 1
  %442 = load i32, i32* %441, align 4
  %443 = getelementptr %dimension_descriptor, %dimension_descriptor* %440, i32 0, i32 2
  %444 = load i32, i32* %443, align 4
  %445 = add i32 %444, %442
  %446 = sub i32 %445, 1
  %447 = icmp sle i32 %436, %446
  br i1 %447, label %loop.body46, label %loop.end56

loop.body46:                                      ; preds = %loop.head45
  %448 = load i32, i32* %i, align 4
  %449 = add i32 %448, 1
  store i32 %449, i32* %i, align 4
  %450 = load %array.1*, %array.1** %c, align 8
  %451 = getelementptr %array.1, %array.1* %450, i32 0, i32 2
  %452 = load %dimension_descriptor*, %dimension_descriptor** %451, align 8
  %453 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %452, i32 1
  %454 = getelementptr %dimension_descriptor, %dimension_descriptor* %453, i32 0, i32 1
  %455 = load i32, i32* %454, align 4
  %456 = sub i32 %455, 1
  store i32 %456, i32* %j, align 4
  br label %loop.head47

loop.head47:                                      ; preds = %loop.end54, %loop.body46
  %457 = load i32, i32* %j, align 4
  %458 = add i32 %457, 1
  %459 = load %array.1*, %array.1** %c, align 8
  %460 = getelementptr %array.1, %array.1* %459, i32 0, i32 2
  %461 = load %dimension_descriptor*, %dimension_descriptor** %460, align 8
  %462 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %461, i32 1
  %463 = getelementptr %dimension_descriptor, %dimension_descriptor* %462, i32 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %462, i32 0, i32 2
  %466 = load i32, i32* %465, align 4
  %467 = add i32 %466, %464
  %468 = sub i32 %467, 1
  %469 = icmp sle i32 %458, %468
  br i1 %469, label %loop.body48, label %loop.end55

loop.body48:                                      ; preds = %loop.head47
  %470 = load i32, i32* %j, align 4
  %471 = add i32 %470, 1
  store i32 %471, i32* %j, align 4
  %472 = load %array.1*, %array.1** %c, align 8
  %473 = getelementptr %array.1, %array.1* %472, i32 0, i32 2
  %474 = load %dimension_descriptor*, %dimension_descriptor** %473, align 8
  %475 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %474, i32 2
  %476 = getelementptr %dimension_descriptor, %dimension_descriptor* %475, i32 0, i32 1
  %477 = load i32, i32* %476, align 4
  %478 = sub i32 %477, 1
  store i32 %478, i32* %k, align 4
  br label %loop.head49

loop.head49:                                      ; preds = %ifcont53, %loop.body48
  %479 = load i32, i32* %k, align 4
  %480 = add i32 %479, 1
  %481 = load %array.1*, %array.1** %c, align 8
  %482 = getelementptr %array.1, %array.1* %481, i32 0, i32 2
  %483 = load %dimension_descriptor*, %dimension_descriptor** %482, align 8
  %484 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %483, i32 2
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 2
  %488 = load i32, i32* %487, align 4
  %489 = add i32 %488, %486
  %490 = sub i32 %489, 1
  %491 = icmp sle i32 %480, %490
  br i1 %491, label %loop.body50, label %loop.end54

loop.body50:                                      ; preds = %loop.head49
  %492 = load i32, i32* %k, align 4
  %493 = add i32 %492, 1
  store i32 %493, i32* %k, align 4
  %494 = load i32, i32* %i, align 4
  %495 = load i32, i32* %j, align 4
  %496 = load i32, i32* %k, align 4
  %497 = load %array.1*, %array.1** %c, align 8
  %498 = getelementptr %array.1, %array.1* %497, i32 0, i32 2
  %499 = load %dimension_descriptor*, %dimension_descriptor** %498, align 8
  %500 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %499, i32 0
  %501 = getelementptr %dimension_descriptor, %dimension_descriptor* %500, i32 0, i32 1
  %502 = load i32, i32* %501, align 4
  %503 = sub i32 %494, %502
  %504 = getelementptr %dimension_descriptor, %dimension_descriptor* %500, i32 0, i32 0
  %505 = load i32, i32* %504, align 4
  %506 = mul i32 %505, %503
  %507 = add i32 0, %506
  %508 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %499, i32 1
  %509 = getelementptr %dimension_descriptor, %dimension_descriptor* %508, i32 0, i32 1
  %510 = load i32, i32* %509, align 4
  %511 = sub i32 %495, %510
  %512 = getelementptr %dimension_descriptor, %dimension_descriptor* %508, i32 0, i32 0
  %513 = load i32, i32* %512, align 4
  %514 = mul i32 %513, %511
  %515 = add i32 %507, %514
  %516 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %499, i32 2
  %517 = getelementptr %dimension_descriptor, %dimension_descriptor* %516, i32 0, i32 1
  %518 = load i32, i32* %517, align 4
  %519 = sub i32 %496, %518
  %520 = getelementptr %dimension_descriptor, %dimension_descriptor* %516, i32 0, i32 0
  %521 = load i32, i32* %520, align 4
  %522 = mul i32 %521, %519
  %523 = add i32 %515, %522
  %524 = getelementptr %array.1, %array.1* %497, i32 0, i32 1
  %525 = load i32, i32* %524, align 4
  %526 = add i32 %523, %525
  %527 = getelementptr %array.1, %array.1* %497, i32 0, i32 0
  %528 = load %complex_4*, %complex_4** %527, align 8
  %529 = getelementptr inbounds %complex_4, %complex_4* %528, i32 %526
  %530 = load %complex_4, %complex_4* %529, align 4
  %531 = load i32, i32* %i, align 4
  %532 = load i32, i32* %j, align 4
  %533 = add i32 %531, %532
  %534 = load i32, i32* %k, align 4
  %535 = add i32 %533, %534
  %536 = sitofp i32 %535 to float
  %537 = alloca %complex_4, align 8
  %538 = getelementptr %complex_4, %complex_4* %537, i32 0, i32 0
  %539 = getelementptr %complex_4, %complex_4* %537, i32 0, i32 1
  store float %536, float* %538, align 4
  store float 0.000000e+00, float* %539, align 4
  %540 = load %complex_4, %complex_4* %537, align 4
  %541 = alloca %complex_4, align 8
  store %complex_4 %530, %complex_4* %541, align 4
  %542 = getelementptr %complex_4, %complex_4* %541, i32 0, i32 0
  %543 = load float, float* %542, align 4
  %544 = alloca %complex_4, align 8
  store %complex_4 %540, %complex_4* %544, align 4
  %545 = getelementptr %complex_4, %complex_4* %544, i32 0, i32 0
  %546 = load float, float* %545, align 4
  %547 = alloca %complex_4, align 8
  store %complex_4 %530, %complex_4* %547, align 4
  %548 = getelementptr %complex_4, %complex_4* %547, i32 0, i32 1
  %549 = load float, float* %548, align 4
  %550 = alloca %complex_4, align 8
  store %complex_4 %540, %complex_4* %550, align 4
  %551 = getelementptr %complex_4, %complex_4* %550, i32 0, i32 1
  %552 = load float, float* %551, align 4
  %553 = fcmp une float %543, %546
  %554 = fcmp une float %549, %552
  %555 = and i1 %553, %554
  br i1 %555, label %then51, label %else52

then51:                                           ; preds = %loop.body50
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %loop.body50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  br label %loop.head49

loop.end54:                                       ; preds = %loop.head49
  br label %loop.head47

loop.end55:                                       ; preds = %loop.head47
  br label %loop.head45

loop.end56:                                       ; preds = %loop.head45
  %556 = load %array.1*, %array.1** %c, align 8
  %557 = getelementptr %array.1, %array.1* %556, i32 0, i32 0
  %558 = load %complex_4*, %complex_4** %557, align 8
  %559 = getelementptr %array.1, %array.1* %556, i32 0, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = getelementptr inbounds %complex_4, %complex_4* %558, i32 %560
  %562 = load %array.1*, %array.1** %c, align 8
  %563 = getelementptr %array.1, %array.1* %562, i32 0, i32 2
  %564 = load %dimension_descriptor*, %dimension_descriptor** %563, align 8
  %565 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %564, i32 0
  %566 = getelementptr %dimension_descriptor, %dimension_descriptor* %565, i32 0, i32 1
  %567 = load i32, i32* %566, align 4
  store i32 %567, i32* %call_arg_value, align 4
  %568 = load %array.1*, %array.1** %c, align 8
  %569 = getelementptr %array.1, %array.1* %568, i32 0, i32 2
  %570 = load %dimension_descriptor*, %dimension_descriptor** %569, align 8
  %571 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %570, i32 0
  %572 = getelementptr %dimension_descriptor, %dimension_descriptor* %571, i32 0, i32 2
  %573 = load i32, i32* %572, align 4
  store i32 %573, i32* %call_arg_value57, align 4
  %574 = load %array.1*, %array.1** %c, align 8
  %575 = getelementptr %array.1, %array.1* %574, i32 0, i32 2
  %576 = load %dimension_descriptor*, %dimension_descriptor** %575, align 8
  %577 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %576, i32 1
  %578 = getelementptr %dimension_descriptor, %dimension_descriptor* %577, i32 0, i32 1
  %579 = load i32, i32* %578, align 4
  store i32 %579, i32* %call_arg_value58, align 4
  %580 = load %array.1*, %array.1** %c, align 8
  %581 = getelementptr %array.1, %array.1* %580, i32 0, i32 2
  %582 = load %dimension_descriptor*, %dimension_descriptor** %581, align 8
  %583 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %582, i32 1
  %584 = getelementptr %dimension_descriptor, %dimension_descriptor* %583, i32 0, i32 2
  %585 = load i32, i32* %584, align 4
  store i32 %585, i32* %call_arg_value59, align 4
  %586 = load %array.1*, %array.1** %c, align 8
  %587 = getelementptr %array.1, %array.1* %586, i32 0, i32 2
  %588 = load %dimension_descriptor*, %dimension_descriptor** %587, align 8
  %589 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %588, i32 2
  %590 = getelementptr %dimension_descriptor, %dimension_descriptor* %589, i32 0, i32 1
  %591 = load i32, i32* %590, align 4
  store i32 %591, i32* %call_arg_value60, align 4
  %592 = load %array.1*, %array.1** %c, align 8
  %593 = getelementptr %array.1, %array.1* %592, i32 0, i32 2
  %594 = load %dimension_descriptor*, %dimension_descriptor** %593, align 8
  %595 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %594, i32 2
  %596 = getelementptr %dimension_descriptor, %dimension_descriptor* %595, i32 0, i32 2
  %597 = load i32, i32* %596, align 4
  store i32 %597, i32* %call_arg_value61, align 4
  %598 = call %complex_4 @reduce_sum_c(%complex_4* %561, i32* %call_arg_value, i32* %call_arg_value57, i32* %call_arg_value58, i32* %call_arg_value59, i32* %call_arg_value60, i32* %call_arg_value61)
  store %complex_4 %598, %complex_4* %r, align 4
  %599 = load %complex_4, %complex_4* %r, align 4
  %600 = alloca %complex_4, align 8
  %601 = getelementptr %complex_4, %complex_4* %600, i32 0, i32 0
  %602 = getelementptr %complex_4, %complex_4* %600, i32 0, i32 1
  store float 1.143450e+05, float* %601, align 4
  store float 0.000000e+00, float* %602, align 4
  %603 = load %complex_4, %complex_4* %600, align 4
  %604 = alloca %complex_4, align 8
  store %complex_4 %599, %complex_4* %604, align 4
  %605 = getelementptr %complex_4, %complex_4* %604, i32 0, i32 0
  %606 = load float, float* %605, align 4
  %607 = alloca %complex_4, align 8
  store %complex_4 %603, %complex_4* %607, align 4
  %608 = getelementptr %complex_4, %complex_4* %607, i32 0, i32 0
  %609 = load float, float* %608, align 4
  %610 = alloca %complex_4, align 8
  store %complex_4 %599, %complex_4* %610, align 4
  %611 = getelementptr %complex_4, %complex_4* %610, i32 0, i32 1
  %612 = load float, float* %611, align 4
  %613 = alloca %complex_4, align 8
  store %complex_4 %603, %complex_4* %613, align 4
  %614 = getelementptr %complex_4, %complex_4* %613, i32 0, i32 1
  %615 = load float, float* %614, align 4
  %616 = fcmp une float %606, %609
  %617 = fcmp une float %612, %615
  %618 = and i1 %616, %617
  br i1 %618, label %then62, label %else63

then62:                                           ; preds = %loop.end56
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont64

else63:                                           ; preds = %loop.end56
  br label %ifcont64

ifcont64:                                         ; preds = %else63, %then62
  %619 = load %array*, %array** %a, align 8
  %620 = getelementptr %array, %array* %619, i32 0, i32 0
  %621 = load i32*, i32** %620, align 8
  %622 = ptrtoint i32* %621 to i64
  %623 = icmp ne i64 %622, 0
  br i1 %623, label %then65, label %else66

then65:                                           ; preds = %ifcont64
  %624 = getelementptr %array, %array* %619, i32 0, i32 0
  %625 = load i32*, i32** %624, align 8
  %626 = alloca i8*, align 8
  %627 = bitcast i32* %625 to i8*
  store i8* %627, i8** %626, align 8
  %628 = load i8*, i8** %626, align 8
  call void (i8*, ...) @_lfortran_free(i8* %628)
  %629 = getelementptr %array, %array* %619, i32 0, i32 0
  store i32* null, i32** %629, align 8
  br label %ifcont67

else66:                                           ; preds = %ifcont64
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %630 = load %array.0*, %array.0** %b, align 8
  %631 = getelementptr %array.0, %array.0* %630, i32 0, i32 0
  %632 = load float*, float** %631, align 8
  %633 = ptrtoint float* %632 to i64
  %634 = icmp ne i64 %633, 0
  br i1 %634, label %then68, label %else69

then68:                                           ; preds = %ifcont67
  %635 = getelementptr %array.0, %array.0* %630, i32 0, i32 0
  %636 = load float*, float** %635, align 8
  %637 = alloca i8*, align 8
  %638 = bitcast float* %636 to i8*
  store i8* %638, i8** %637, align 8
  %639 = load i8*, i8** %637, align 8
  call void (i8*, ...) @_lfortran_free(i8* %639)
  %640 = getelementptr %array.0, %array.0* %630, i32 0, i32 0
  store float* null, float** %640, align 8
  br label %ifcont70

else69:                                           ; preds = %ifcont67
  br label %ifcont70

ifcont70:                                         ; preds = %else69, %then68
  %641 = load %array.1*, %array.1** %c, align 8
  %642 = getelementptr %array.1, %array.1* %641, i32 0, i32 0
  %643 = load %complex_4*, %complex_4** %642, align 8
  %644 = ptrtoint %complex_4* %643 to i64
  %645 = icmp ne i64 %644, 0
  br i1 %645, label %then71, label %else72

then71:                                           ; preds = %ifcont70
  %646 = getelementptr %array.1, %array.1* %641, i32 0, i32 0
  %647 = load %complex_4*, %complex_4** %646, align 8
  %648 = alloca i8*, align 8
  %649 = bitcast %complex_4* %647 to i8*
  store i8* %649, i8** %648, align 8
  %650 = load i8*, i8** %648, align 8
  call void (i8*, ...) @_lfortran_free(i8* %650)
  %651 = getelementptr %array.1, %array.1* %641, i32 0, i32 0
  store %complex_4* null, %complex_4** %651, align 8
  br label %ifcont73

else72:                                           ; preds = %ifcont70
  br label %ifcont73

ifcont73:                                         ; preds = %else72, %then71
  %652 = load %array*, %array** %a, align 8
  %653 = getelementptr %array, %array* %652, i32 0, i32 0
  %654 = load i32*, i32** %653, align 8
  %655 = ptrtoint i32* %654 to i64
  %656 = icmp ne i64 %655, 0
  br i1 %656, label %then74, label %else75

then74:                                           ; preds = %ifcont73
  %657 = getelementptr %array, %array* %652, i32 0, i32 0
  %658 = load i32*, i32** %657, align 8
  %659 = alloca i8*, align 8
  %660 = bitcast i32* %658 to i8*
  store i8* %660, i8** %659, align 8
  %661 = load i8*, i8** %659, align 8
  call void (i8*, ...) @_lfortran_free(i8* %661)
  %662 = getelementptr %array, %array* %652, i32 0, i32 0
  store i32* null, i32** %662, align 8
  br label %ifcont76

else75:                                           ; preds = %ifcont73
  br label %ifcont76

ifcont76:                                         ; preds = %else75, %then74
  %663 = load %array.0*, %array.0** %b, align 8
  %664 = getelementptr %array.0, %array.0* %663, i32 0, i32 0
  %665 = load float*, float** %664, align 8
  %666 = ptrtoint float* %665 to i64
  %667 = icmp ne i64 %666, 0
  br i1 %667, label %then77, label %else78

then77:                                           ; preds = %ifcont76
  %668 = getelementptr %array.0, %array.0* %663, i32 0, i32 0
  %669 = load float*, float** %668, align 8
  %670 = alloca i8*, align 8
  %671 = bitcast float* %669 to i8*
  store i8* %671, i8** %670, align 8
  %672 = load i8*, i8** %670, align 8
  call void (i8*, ...) @_lfortran_free(i8* %672)
  %673 = getelementptr %array.0, %array.0* %663, i32 0, i32 0
  store float* null, float** %673, align 8
  br label %ifcont79

else78:                                           ; preds = %ifcont76
  br label %ifcont79

ifcont79:                                         ; preds = %else78, %then77
  %674 = load %array.1*, %array.1** %c, align 8
  %675 = getelementptr %array.1, %array.1* %674, i32 0, i32 0
  %676 = load %complex_4*, %complex_4** %675, align 8
  %677 = ptrtoint %complex_4* %676 to i64
  %678 = icmp ne i64 %677, 0
  br i1 %678, label %then80, label %else81

then80:                                           ; preds = %ifcont79
  %679 = getelementptr %array.1, %array.1* %674, i32 0, i32 0
  %680 = load %complex_4*, %complex_4** %679, align 8
  %681 = alloca i8*, align 8
  %682 = bitcast %complex_4* %680 to i8*
  store i8* %682, i8** %681, align 8
  %683 = load i8*, i8** %681, align 8
  call void (i8*, ...) @_lfortran_free(i8* %683)
  %684 = getelementptr %array.1, %array.1* %674, i32 0, i32 0
  store %complex_4* null, %complex_4** %684, align 8
  br label %ifcont82

else81:                                           ; preds = %ifcont79
  br label %ifcont82

ifcont82:                                         ; preds = %else81, %then80
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
