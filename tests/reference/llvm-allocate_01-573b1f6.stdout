; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type { float, float }
%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { float*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define %complex_4 @reduce_sum_c(%complex_4* %c, i32* %__1c, i32* %__2c, i32* %__3c, i32* %__4c, i32* %__5c, i32* %__6c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = load i32, i32* %__1c, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = load i32, i32* %__2c, align 4
  %9 = load i32, i32* %__1c, align 4
  %10 = add i32 %8, %9
  %11 = sub i32 %10, 1
  %12 = icmp sle i32 %7, %11
  br i1 %12, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  %15 = load i32, i32* %__3c, align 4
  %16 = sub i32 %15, 1
  store i32 %16, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %17 = load i32, i32* %j, align 4
  %18 = add i32 %17, 1
  %19 = load i32, i32* %__4c, align 4
  %20 = load i32, i32* %__3c, align 4
  %21 = add i32 %19, %20
  %22 = sub i32 %21, 1
  %23 = icmp sle i32 %18, %22
  br i1 %23, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %24 = load i32, i32* %j, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %j, align 4
  %26 = load i32, i32* %__5c, align 4
  %27 = sub i32 %26, 1
  store i32 %27, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %28 = load i32, i32* %k, align 4
  %29 = add i32 %28, 1
  %30 = load i32, i32* %__6c, align 4
  %31 = load i32, i32* %__5c, align 4
  %32 = add i32 %30, %31
  %33 = sub i32 %32, 1
  %34 = icmp sle i32 %29, %33
  br i1 %34, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %35 = load i32, i32* %k, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %k, align 4
  %37 = load %complex_4, %complex_4* %r, align 4
  %38 = load i32, i32* %i, align 4
  %39 = load i32, i32* %j, align 4
  %40 = load i32, i32* %k, align 4
  %41 = load i32, i32* %__1c, align 4
  %42 = load i32, i32* %__2c, align 4
  %43 = load i32, i32* %__3c, align 4
  %44 = load i32, i32* %__4c, align 4
  %45 = load i32, i32* %__5c, align 4
  %46 = load i32, i32* %__6c, align 4
  %47 = sub i32 %38, %41
  %48 = mul i32 1, %47
  %49 = add i32 0, %48
  %50 = mul i32 1, %42
  %51 = sub i32 %39, %43
  %52 = mul i32 %50, %51
  %53 = add i32 %49, %52
  %54 = mul i32 %50, %44
  %55 = sub i32 %40, %45
  %56 = mul i32 %54, %55
  %57 = add i32 %53, %56
  %58 = mul i32 %54, %46
  %59 = getelementptr inbounds %complex_4, %complex_4* %c, i32 %57
  %60 = load %complex_4, %complex_4* %59, align 4
  %61 = alloca %complex_4, align 8
  store %complex_4 %37, %complex_4* %61, align 4
  %62 = alloca %complex_4, align 8
  store %complex_4 %60, %complex_4* %62, align 4
  %63 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %61, %complex_4* %62, %complex_4* %63)
  %64 = load %complex_4, %complex_4* %63, align 4
  store %complex_4 %64, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %65 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %65
}

define void @sum(%array* %a, %array.0* %b, %array.1* %c) {
.entry:
  %c_copy = alloca %array.1, align 8
  %0 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = getelementptr %array, %array* %a, i32 0, i32 2
  %7 = load %dimension_descriptor*, %dimension_descriptor** %6, align 8
  %8 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %7, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr %array, %array* %a, i32 0, i32 2
  %12 = load %dimension_descriptor*, %dimension_descriptor** %11, align 8
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %12, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %15
  %19 = sub i32 %18, 1
  %20 = getelementptr %array, %array* %a, i32 0, i32 2
  %21 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 %19, %24
  %26 = add i32 %25, 1
  %27 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = sub i32 %39, 1
  %41 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 %40, %45
  %47 = add i32 %46, 1
  %48 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %49 = load %dimension_descriptor*, %dimension_descriptor** %48, align 8
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %54 = load %dimension_descriptor*, %dimension_descriptor** %53, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, %57
  %61 = sub i32 %60, 1
  %62 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 1
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %61, %66
  %68 = add i32 %67, 1
  %69 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 1
  store i32 0, i32* %69, align 4
  %70 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 true, i1* %70, align 1
  %71 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 0
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 2
  store i32 1, i32* %74, align 4
  store i32 %10, i32* %75, align 4
  %77 = mul i32 1, %26
  store i32 %26, i32* %76, align 4
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  store i32 1, i32* %79, align 4
  store i32 %31, i32* %80, align 4
  %82 = mul i32 %77, %47
  store i32 %47, i32* %81, align 4
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 2
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  store i32 1, i32* %84, align 4
  store i32 %52, i32* %85, align 4
  %87 = mul i32 %82, %68
  store i32 %68, i32* %86, align 4
  %88 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %89 = alloca i32, align 4
  %90 = mul i32 %87, 8
  store i32 %90, i32* %89, align 4
  %91 = load i32, i32* %89, align 4
  %92 = call i8* (i32, ...) @_lfortran_malloc(i32 %91)
  %93 = bitcast i8* %92 to %complex_4*
  store %complex_4* %93, %complex_4** %88, align 8
  %94 = getelementptr %array, %array* %a, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr %array, %array* %a, i32 0, i32 2
  %100 = load %dimension_descriptor*, %dimension_descriptor** %99, align 8
  %101 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, %103
  %107 = sub i32 %106, 1
  %108 = getelementptr %array, %array* %a, i32 0, i32 2
  %109 = load %dimension_descriptor*, %dimension_descriptor** %108, align 8
  %110 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 0
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 %107, %112
  %114 = add i32 %113, 1
  %115 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, %124
  %128 = sub i32 %127, 1
  %129 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %130 = load %dimension_descriptor*, %dimension_descriptor** %129, align 8
  %131 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %130, i32 0
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %128, %133
  %135 = add i32 %134, 1
  %136 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %137 = load %dimension_descriptor*, %dimension_descriptor** %136, align 8
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %137, i32 1
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %142 = load %dimension_descriptor*, %dimension_descriptor** %141, align 8
  %143 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %142, i32 1
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, %145
  %149 = sub i32 %148, 1
  %150 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 1
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %149, %154
  %156 = add i32 %155, 1
  %157 = getelementptr %array.1, %array.1* %c, i32 0, i32 1
  store i32 0, i32* %157, align 4
  %158 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 true, i1* %158, align 1
  %159 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159, align 8
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 2
  store i32 1, i32* %162, align 4
  store i32 %98, i32* %163, align 4
  %165 = mul i32 1, %114
  store i32 %114, i32* %164, align 4
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 1
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 2
  store i32 1, i32* %167, align 4
  store i32 %119, i32* %168, align 4
  %170 = mul i32 %165, %135
  store i32 %135, i32* %169, align 4
  %171 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 2
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 0
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 1
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 2
  store i32 1, i32* %172, align 4
  store i32 %140, i32* %173, align 4
  %175 = mul i32 %170, %156
  store i32 %156, i32* %174, align 4
  %176 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %177 = alloca i32, align 4
  %178 = mul i32 %175, 8
  store i32 %178, i32* %177, align 4
  %179 = load i32, i32* %177, align 4
  %180 = call i8* (i32, ...) @_lfortran_malloc(i32 %179)
  %181 = bitcast i8* %180 to %complex_4*
  store %complex_4* %181, %complex_4** %176, align 8
  %182 = getelementptr %array, %array* %a, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %183, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 %186, 1
  store i32 %187, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %188 = load i32, i32* %i, align 4
  %189 = add i32 %188, 1
  %190 = getelementptr %array, %array* %a, i32 0, i32 2
  %191 = load %dimension_descriptor*, %dimension_descriptor** %190, align 8
  %192 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %191, i32 0
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %196, %194
  %198 = sub i32 %197, 1
  %199 = icmp sle i32 %189, %198
  br i1 %199, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %200 = load i32, i32* %i, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %i, align 4
  %202 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %203 = load %dimension_descriptor*, %dimension_descriptor** %202, align 8
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %203, i32 0
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 %206, 1
  store i32 %207, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %208 = load i32, i32* %j, align 4
  %209 = add i32 %208, 1
  %210 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %211 = load %dimension_descriptor*, %dimension_descriptor** %210, align 8
  %212 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %211, i32 0
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, %214
  %218 = sub i32 %217, 1
  %219 = icmp sle i32 %209, %218
  br i1 %219, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %220 = load i32, i32* %j, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %j, align 4
  %222 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %223 = load %dimension_descriptor*, %dimension_descriptor** %222, align 8
  %224 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %223, i32 1
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %226, 1
  store i32 %227, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %228 = load i32, i32* %k, align 4
  %229 = add i32 %228, 1
  %230 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %231 = load %dimension_descriptor*, %dimension_descriptor** %230, align 8
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 1
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = add i32 %236, %234
  %238 = sub i32 %237, 1
  %239 = icmp sle i32 %229, %238
  br i1 %239, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %240 = load i32, i32* %k, align 4
  %241 = add i32 %240, 1
  store i32 %241, i32* %k, align 4
  %242 = load i32, i32* %i, align 4
  %243 = load i32, i32* %j, align 4
  %244 = load i32, i32* %k, align 4
  %245 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 2
  %246 = load %dimension_descriptor*, %dimension_descriptor** %245, align 8
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 0
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 %242, %249
  %251 = mul i32 1, %250
  %252 = add i32 0, %251
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = mul i32 1, %254
  %256 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 1
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 %243, %258
  %260 = mul i32 %255, %259
  %261 = add i32 %252, %260
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = mul i32 %255, %263
  %265 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 2
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = sub i32 %244, %267
  %269 = mul i32 %264, %268
  %270 = add i32 %261, %269
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 2
  %272 = load i32, i32* %271, align 4
  %273 = mul i32 %264, %272
  %274 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %275 = load %complex_4*, %complex_4** %274, align 8
  %276 = getelementptr inbounds %complex_4, %complex_4* %275, i32 %270
  %277 = load i32, i32* %i, align 4
  %278 = getelementptr %array, %array* %a, i32 0, i32 2
  %279 = load %dimension_descriptor*, %dimension_descriptor** %278, align 8
  %280 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %279, i32 0
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 %277, %282
  %284 = mul i32 1, %283
  %285 = add i32 0, %284
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = mul i32 1, %287
  %289 = getelementptr %array, %array* %a, i32 0, i32 0
  %290 = load i32*, i32** %289, align 8
  %291 = getelementptr inbounds i32, i32* %290, i32 %285
  %292 = load i32, i32* %291, align 4
  %293 = sitofp i32 %292 to float
  %294 = load i32, i32* %j, align 4
  %295 = load i32, i32* %k, align 4
  %296 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %297 = load %dimension_descriptor*, %dimension_descriptor** %296, align 8
  %298 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %297, i32 0
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = sub i32 %294, %300
  %302 = mul i32 1, %301
  %303 = add i32 0, %302
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 2
  %305 = load i32, i32* %304, align 4
  %306 = mul i32 1, %305
  %307 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %297, i32 1
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = sub i32 %295, %309
  %311 = mul i32 %306, %310
  %312 = add i32 %303, %311
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = mul i32 %306, %314
  %316 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %317 = load float*, float** %316, align 8
  %318 = getelementptr inbounds float, float* %317, i32 %312
  %319 = load float, float* %318, align 4
  %320 = fadd float %293, %319
  %321 = alloca %complex_4, align 8
  %322 = getelementptr %complex_4, %complex_4* %321, i32 0, i32 0
  %323 = getelementptr %complex_4, %complex_4* %321, i32 0, i32 1
  store float %320, float* %322, align 4
  store float 0.000000e+00, float* %323, align 4
  %324 = load %complex_4, %complex_4* %321, align 4
  store %complex_4 %324, %complex_4* %276, align 4
  %325 = load i32, i32* %i, align 4
  %326 = load i32, i32* %j, align 4
  %327 = load i32, i32* %k, align 4
  %328 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %329 = load %dimension_descriptor*, %dimension_descriptor** %328, align 8
  %330 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 0
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = sub i32 %325, %332
  %334 = mul i32 1, %333
  %335 = add i32 0, %334
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = mul i32 1, %337
  %339 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 1
  %340 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = sub i32 %326, %341
  %343 = mul i32 %338, %342
  %344 = add i32 %335, %343
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 2
  %346 = load i32, i32* %345, align 4
  %347 = mul i32 %338, %346
  %348 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 2
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = sub i32 %327, %350
  %352 = mul i32 %347, %351
  %353 = add i32 %344, %352
  %354 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 2
  %355 = load i32, i32* %354, align 4
  %356 = mul i32 %347, %355
  %357 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %358 = load %complex_4*, %complex_4** %357, align 8
  %359 = getelementptr inbounds %complex_4, %complex_4* %358, i32 %353
  %360 = load i32, i32* %i, align 4
  %361 = getelementptr %array, %array* %a, i32 0, i32 2
  %362 = load %dimension_descriptor*, %dimension_descriptor** %361, align 8
  %363 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %362, i32 0
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = sub i32 %360, %365
  %367 = mul i32 1, %366
  %368 = add i32 0, %367
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 2
  %370 = load i32, i32* %369, align 4
  %371 = mul i32 1, %370
  %372 = getelementptr %array, %array* %a, i32 0, i32 0
  %373 = load i32*, i32** %372, align 8
  %374 = getelementptr inbounds i32, i32* %373, i32 %368
  %375 = load i32, i32* %374, align 4
  %376 = sitofp i32 %375 to float
  %377 = load i32, i32* %j, align 4
  %378 = load i32, i32* %k, align 4
  %379 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %380 = load %dimension_descriptor*, %dimension_descriptor** %379, align 8
  %381 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %380, i32 0
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = sub i32 %377, %383
  %385 = mul i32 1, %384
  %386 = add i32 0, %385
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = mul i32 1, %388
  %390 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %380, i32 1
  %391 = getelementptr %dimension_descriptor, %dimension_descriptor* %390, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = sub i32 %378, %392
  %394 = mul i32 %389, %393
  %395 = add i32 %386, %394
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %390, i32 0, i32 2
  %397 = load i32, i32* %396, align 4
  %398 = mul i32 %389, %397
  %399 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %400 = load float*, float** %399, align 8
  %401 = getelementptr inbounds float, float* %400, i32 %395
  %402 = load float, float* %401, align 4
  %403 = fadd float %376, %402
  %404 = alloca %complex_4, align 8
  %405 = getelementptr %complex_4, %complex_4* %404, i32 0, i32 0
  %406 = getelementptr %complex_4, %complex_4* %404, i32 0, i32 1
  store float %403, float* %405, align 4
  store float 0.000000e+00, float* %406, align 4
  %407 = load %complex_4, %complex_4* %404, align 4
  store %complex_4 %407, %complex_4* %359, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %408 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %409 = load %complex_4*, %complex_4** %408, align 8
  %410 = alloca i8*, align 8
  %411 = bitcast %complex_4* %409 to i8*
  store i8* %411, i8** %410, align 8
  %412 = load i8*, i8** %410, align 8
  call void (i8*, ...) @_lfortran_free(i8* %412)
  %413 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 false, i1* %413, align 1
  %414 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  %415 = load i1, i1* %414, align 1
  br i1 %415, label %then, label %else

then:                                             ; preds = %loop.end6
  %416 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 0
  %417 = load %complex_4*, %complex_4** %416, align 8
  %418 = alloca i8*, align 8
  %419 = bitcast %complex_4* %417 to i8*
  store i8* %419, i8** %418, align 8
  %420 = load i8*, i8** %418, align 8
  call void (i8*, ...) @_lfortran_free(i8* %420)
  %421 = getelementptr %array.1, %array.1* %c_copy, i32 0, i32 3
  store i1 false, i1* %421, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value68 = alloca i32, align 4
  %call_arg_value67 = alloca i32, align 4
  %call_arg_value66 = alloca i32, align 4
  %call_arg_value65 = alloca i32, align 4
  %call_arg_value64 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 2
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = alloca %dimension_descriptor, i32 %4, align 8
  store %dimension_descriptor* %5, %dimension_descriptor** %2, align 8
  %6 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %6, align 4
  %7 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %7, align 1
  %b = alloca %array.0, align 8
  %8 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %9 = alloca i32, align 4
  store i32 2, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = alloca %dimension_descriptor, i32 %10, align 8
  store %dimension_descriptor* %11, %dimension_descriptor** %8, align 8
  %12 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  store i32 2, i32* %12, align 4
  %13 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %13, align 1
  %c = alloca %array.1, align 8
  %14 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = load i32, i32* %15, align 4
  %17 = alloca %dimension_descriptor, i32 %16, align 8
  store %dimension_descriptor* %17, %dimension_descriptor** %14, align 8
  %18 = getelementptr %array.1, %array.1* %c, i32 0, i32 4
  store i32 3, i32* %18, align 4
  %19 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 false, i1* %19, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %20 = load i32, i32* %n, align 4
  %21 = add i32 %20, 1
  %22 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 true, i1* %23, align 1
  %24 = getelementptr %array, %array* %a, i32 0, i32 2
  %25 = load %dimension_descriptor*, %dimension_descriptor** %24, align 8
  %26 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 2
  store i32 1, i32* %27, align 4
  store i32 5, i32* %28, align 4
  %30 = mul i32 1, %21
  store i32 %21, i32* %29, align 4
  %31 = getelementptr %array, %array* %a, i32 0, i32 0
  %32 = alloca i32, align 4
  %33 = mul i32 %30, 4
  store i32 %33, i32* %32, align 4
  %34 = load i32, i32* %32, align 4
  %35 = call i8* (i32, ...) @_lfortran_malloc(i32 %34)
  %36 = bitcast i8* %35 to i32*
  store i32* %36, i32** %31, align 8
  %37 = load i32, i32* %n, align 4
  %38 = load i32, i32* %n, align 4
  %39 = mul i32 2, %38
  %40 = load i32, i32* %n, align 4
  %41 = sub i32 %39, %40
  %42 = add i32 %41, 1
  %43 = load i32, i32* %n, align 4
  %44 = load i32, i32* %n, align 4
  %45 = mul i32 3, %44
  %46 = load i32, i32* %n, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  %49 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %49, align 4
  %50 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 true, i1* %50, align 1
  %51 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  store i32 1, i32* %54, align 4
  store i32 %37, i32* %55, align 4
  %57 = mul i32 1, %42
  store i32 %42, i32* %56, align 4
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  store i32 1, i32* %59, align 4
  store i32 %43, i32* %60, align 4
  %62 = mul i32 %57, %48
  store i32 %48, i32* %61, align 4
  %63 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %64 = alloca i32, align 4
  %65 = mul i32 %62, 4
  store i32 %65, i32* %64, align 4
  %66 = load i32, i32* %64, align 4
  %67 = call i8* (i32, ...) @_lfortran_malloc(i32 %66)
  %68 = bitcast i8* %67 to float*
  store float* %68, float** %63, align 8
  store i32 0, i32* %ierr, align 4
  %69 = getelementptr %array, %array* %a, i32 0, i32 2
  %70 = load %dimension_descriptor*, %dimension_descriptor** %69, align 8
  %71 = getelementptr %array, %array* %a, i32 0, i32 4
  %72 = load i32, i32* %71, align 4
  %73 = alloca i32, align 4
  store i32 1, i32* %73, align 4
  %74 = alloca i32, align 4
  store i32 0, i32* %74, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, %72
  br i1 %76, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %77 = load i32, i32* %74, align 4
  %78 = load i32, i32* %73, align 4
  %79 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %70, i32 %77
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 %78, %81
  store i32 %82, i32* %73, align 4
  %83 = add i32 %77, 1
  store i32 %83, i32* %74, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %84 = load i32, i32* %73, align 4
  %85 = load i32, i32* %n, align 4
  %86 = add i32 %85, 1
  %87 = icmp ne i32 %84, %86
  br i1 %87, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %88 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %89 = load %dimension_descriptor*, %dimension_descriptor** %88, align 8
  %90 = getelementptr %array.0, %array.0* %b, i32 0, i32 4
  %91 = load i32, i32* %90, align 4
  %92 = alloca i32, align 4
  store i32 1, i32* %92, align 4
  %93 = alloca i32, align 4
  store i32 0, i32* %93, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %ifcont
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, %91
  br i1 %95, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %96 = load i32, i32* %93, align 4
  %97 = load i32, i32* %92, align 4
  %98 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %89, i32 %96
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = mul i32 %97, %100
  store i32 %101, i32* %92, align 4
  %102 = add i32 %96, 1
  store i32 %102, i32* %93, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %103 = load i32, i32* %92, align 4
  %104 = load i32, i32* %n, align 4
  %105 = add i32 %104, 1
  %106 = load i32, i32* %n, align 4
  %107 = mul i32 2, %106
  %108 = add i32 %107, 1
  %109 = mul i32 %105, %108
  %110 = icmp ne i32 %103, %109
  br i1 %110, label %then4, label %else5

then4:                                            ; preds = %loop.end3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %loop.end3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %111 = getelementptr %array, %array* %a, i32 0, i32 2
  %112 = load %dimension_descriptor*, %dimension_descriptor** %111, align 8
  %113 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %112, i32 0
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = sub i32 %115, 1
  store i32 %116, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %117 = load i32, i32* %i, align 4
  %118 = add i32 %117, 1
  %119 = getelementptr %array, %array* %a, i32 0, i32 2
  %120 = load %dimension_descriptor*, %dimension_descriptor** %119, align 8
  %121 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %120, i32 0
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, %123
  %127 = sub i32 %126, 1
  %128 = icmp sle i32 %118, %127
  br i1 %128, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %129 = load i32, i32* %i, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %i, align 4
  %131 = load i32, i32* %i, align 4
  %132 = getelementptr %array, %array* %a, i32 0, i32 2
  %133 = load %dimension_descriptor*, %dimension_descriptor** %132, align 8
  %134 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %133, i32 0
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = sub i32 %131, %136
  %138 = mul i32 1, %137
  %139 = add i32 0, %138
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = mul i32 1, %141
  %143 = getelementptr %array, %array* %a, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = getelementptr inbounds i32, i32* %144, i32 %139
  %146 = load i32, i32* %i, align 4
  store i32 %146, i32* %145, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %147 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %148 = load %dimension_descriptor*, %dimension_descriptor** %147, align 8
  %149 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %148, i32 0
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 %151, 1
  store i32 %152, i32* %i, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.end9
  %153 = load i32, i32* %i, align 4
  %154 = add i32 %153, 1
  %155 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = add i32 %161, %159
  %163 = sub i32 %162, 1
  %164 = icmp sle i32 %154, %163
  br i1 %164, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %165 = load i32, i32* %i, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %i, align 4
  %167 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %168 = load %dimension_descriptor*, %dimension_descriptor** %167, align 8
  %169 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %168, i32 1
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %169, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = sub i32 %171, 1
  store i32 %172, i32* %j, align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %173 = load i32, i32* %j, align 4
  %174 = add i32 %173, 1
  %175 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %176 = load %dimension_descriptor*, %dimension_descriptor** %175, align 8
  %177 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %176, i32 1
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, %179
  %183 = sub i32 %182, 1
  %184 = icmp sle i32 %174, %183
  br i1 %184, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %185 = load i32, i32* %j, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %j, align 4
  %187 = load i32, i32* %i, align 4
  %188 = load i32, i32* %j, align 4
  %189 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %190 = load %dimension_descriptor*, %dimension_descriptor** %189, align 8
  %191 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %190, i32 0
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 %187, %193
  %195 = mul i32 1, %194
  %196 = add i32 0, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %191, i32 0, i32 2
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 1, %198
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %190, i32 1
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %188, %202
  %204 = mul i32 %199, %203
  %205 = add i32 %196, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 %199, %207
  %209 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %210 = load float*, float** %209, align 8
  %211 = getelementptr inbounds float, float* %210, i32 %205
  %212 = load i32, i32* %i, align 4
  %213 = load i32, i32* %j, align 4
  %214 = add i32 %212, %213
  %215 = sitofp i32 %214 to float
  store float %215, float* %211, align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %216 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  %217 = load i1, i1* %216, align 1
  br i1 %217, label %then16, label %else17

then16:                                           ; preds = %loop.end15
  %218 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %219 = load %complex_4*, %complex_4** %218, align 8
  %220 = alloca i8*, align 8
  %221 = bitcast %complex_4* %219 to i8*
  store i8* %221, i8** %220, align 8
  %222 = load i8*, i8** %220, align 8
  call void (i8*, ...) @_lfortran_free(i8* %222)
  %223 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 false, i1* %223, align 1
  br label %ifcont18

else17:                                           ; preds = %loop.end15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %224 = alloca %array, align 8
  %225 = alloca %array.0, align 8
  %226 = alloca %array.1, align 8
  call void @sum(%array* %a, %array.0* %b, %array.1* %c)
  %227 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %228 = load %dimension_descriptor*, %dimension_descriptor** %227, align 8
  %229 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %228, i32 0
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %229, i32 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = icmp ne i32 %231, 5
  %233 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %234 = load %dimension_descriptor*, %dimension_descriptor** %233, align 8
  %235 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %234, i32 0
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = add i32 %239, %237
  %241 = sub i32 %240, 1
  %242 = load i32, i32* %n, align 4
  %243 = add i32 %242, 5
  %244 = icmp ne i32 %241, %243
  %245 = icmp eq i1 %232, false
  %246 = alloca i1, align 1
  br i1 %245, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  store i1 %244, i1* %246, align 1
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  store i1 %232, i1* %246, align 1
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  %247 = load i1, i1* %246, align 1
  br i1 %247, label %then22, label %else23

then22:                                           ; preds = %ifcont21
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  %248 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %249 = load %dimension_descriptor*, %dimension_descriptor** %248, align 8
  %250 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %249, i32 1
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %250, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = load i32, i32* %n, align 4
  %254 = icmp ne i32 %252, %253
  %255 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %256 = load %dimension_descriptor*, %dimension_descriptor** %255, align 8
  %257 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %256, i32 1
  %258 = getelementptr %dimension_descriptor, %dimension_descriptor* %257, i32 0, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %257, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = add i32 %261, %259
  %263 = sub i32 %262, 1
  %264 = load i32, i32* %n, align 4
  %265 = mul i32 2, %264
  %266 = icmp ne i32 %263, %265
  %267 = icmp eq i1 %254, false
  %268 = alloca i1, align 1
  br i1 %267, label %then25, label %else26

then25:                                           ; preds = %ifcont24
  store i1 %266, i1* %268, align 1
  br label %ifcont27

else26:                                           ; preds = %ifcont24
  store i1 %254, i1* %268, align 1
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %269 = load i1, i1* %268, align 1
  br i1 %269, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %270 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %271 = load %dimension_descriptor*, %dimension_descriptor** %270, align 8
  %272 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 2
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = load i32, i32* %n, align 4
  %276 = icmp ne i32 %274, %275
  %277 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %278 = load %dimension_descriptor*, %dimension_descriptor** %277, align 8
  %279 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %278, i32 2
  %280 = getelementptr %dimension_descriptor, %dimension_descriptor* %279, i32 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr %dimension_descriptor, %dimension_descriptor* %279, i32 0, i32 2
  %283 = load i32, i32* %282, align 4
  %284 = add i32 %283, %281
  %285 = sub i32 %284, 1
  %286 = load i32, i32* %n, align 4
  %287 = mul i32 3, %286
  %288 = icmp ne i32 %285, %287
  %289 = icmp eq i1 %276, false
  %290 = alloca i1, align 1
  br i1 %289, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  store i1 %288, i1* %290, align 1
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  store i1 %276, i1* %290, align 1
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %291 = load i1, i1* %290, align 1
  br i1 %291, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %292 = getelementptr %array, %array* %a, i32 0, i32 2
  %293 = load %dimension_descriptor*, %dimension_descriptor** %292, align 8
  %294 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %293, i32 0
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 1
  %296 = load i32, i32* %295, align 4
  %297 = sub i32 %296, 1
  store i32 %297, i32* %i, align 4
  br label %loop.head37

loop.head37:                                      ; preds = %ifcont41, %ifcont36
  %298 = load i32, i32* %i, align 4
  %299 = add i32 %298, 1
  %300 = getelementptr %array, %array* %a, i32 0, i32 2
  %301 = load %dimension_descriptor*, %dimension_descriptor** %300, align 8
  %302 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %301, i32 0
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %302, i32 0, i32 2
  %306 = load i32, i32* %305, align 4
  %307 = add i32 %306, %304
  %308 = sub i32 %307, 1
  %309 = icmp sle i32 %299, %308
  br i1 %309, label %loop.body38, label %loop.end42

loop.body38:                                      ; preds = %loop.head37
  %310 = load i32, i32* %i, align 4
  %311 = add i32 %310, 1
  store i32 %311, i32* %i, align 4
  %312 = load i32, i32* %i, align 4
  %313 = getelementptr %array, %array* %a, i32 0, i32 2
  %314 = load %dimension_descriptor*, %dimension_descriptor** %313, align 8
  %315 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %314, i32 0
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = sub i32 %312, %317
  %319 = mul i32 1, %318
  %320 = add i32 0, %319
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = mul i32 1, %322
  %324 = getelementptr %array, %array* %a, i32 0, i32 0
  %325 = load i32*, i32** %324, align 8
  %326 = getelementptr inbounds i32, i32* %325, i32 %320
  %327 = load i32, i32* %326, align 4
  %328 = load i32, i32* %i, align 4
  %329 = icmp ne i32 %327, %328
  br i1 %329, label %then39, label %else40

then39:                                           ; preds = %loop.body38
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %loop.body38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  br label %loop.head37

loop.end42:                                       ; preds = %loop.head37
  %330 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %331 = load %dimension_descriptor*, %dimension_descriptor** %330, align 8
  %332 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %331, i32 0
  %333 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = sub i32 %334, 1
  store i32 %335, i32* %i, align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.end50, %loop.end42
  %336 = load i32, i32* %i, align 4
  %337 = add i32 %336, 1
  %338 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %339 = load %dimension_descriptor*, %dimension_descriptor** %338, align 8
  %340 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %339, i32 0
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 2
  %344 = load i32, i32* %343, align 4
  %345 = add i32 %344, %342
  %346 = sub i32 %345, 1
  %347 = icmp sle i32 %337, %346
  br i1 %347, label %loop.body44, label %loop.end51

loop.body44:                                      ; preds = %loop.head43
  %348 = load i32, i32* %i, align 4
  %349 = add i32 %348, 1
  store i32 %349, i32* %i, align 4
  %350 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %351 = load %dimension_descriptor*, %dimension_descriptor** %350, align 8
  %352 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %351, i32 1
  %353 = getelementptr %dimension_descriptor, %dimension_descriptor* %352, i32 0, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = sub i32 %354, 1
  store i32 %355, i32* %j, align 4
  br label %loop.head45

loop.head45:                                      ; preds = %ifcont49, %loop.body44
  %356 = load i32, i32* %j, align 4
  %357 = add i32 %356, 1
  %358 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %359 = load %dimension_descriptor*, %dimension_descriptor** %358, align 8
  %360 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %359, i32 1
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 1
  %362 = load i32, i32* %361, align 4
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %360, i32 0, i32 2
  %364 = load i32, i32* %363, align 4
  %365 = add i32 %364, %362
  %366 = sub i32 %365, 1
  %367 = icmp sle i32 %357, %366
  br i1 %367, label %loop.body46, label %loop.end50

loop.body46:                                      ; preds = %loop.head45
  %368 = load i32, i32* %j, align 4
  %369 = add i32 %368, 1
  store i32 %369, i32* %j, align 4
  %370 = load i32, i32* %i, align 4
  %371 = load i32, i32* %j, align 4
  %372 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %373 = load %dimension_descriptor*, %dimension_descriptor** %372, align 8
  %374 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %373, i32 0
  %375 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 1
  %376 = load i32, i32* %375, align 4
  %377 = sub i32 %370, %376
  %378 = mul i32 1, %377
  %379 = add i32 0, %378
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %374, i32 0, i32 2
  %381 = load i32, i32* %380, align 4
  %382 = mul i32 1, %381
  %383 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %373, i32 1
  %384 = getelementptr %dimension_descriptor, %dimension_descriptor* %383, i32 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = sub i32 %371, %385
  %387 = mul i32 %382, %386
  %388 = add i32 %379, %387
  %389 = getelementptr %dimension_descriptor, %dimension_descriptor* %383, i32 0, i32 2
  %390 = load i32, i32* %389, align 4
  %391 = mul i32 %382, %390
  %392 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %393 = load float*, float** %392, align 8
  %394 = getelementptr inbounds float, float* %393, i32 %388
  %395 = load float, float* %394, align 4
  %396 = load i32, i32* %i, align 4
  %397 = load i32, i32* %j, align 4
  %398 = add i32 %396, %397
  %399 = sitofp i32 %398 to float
  %400 = fcmp une float %395, %399
  br i1 %400, label %then47, label %else48

then47:                                           ; preds = %loop.body46
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont49

else48:                                           ; preds = %loop.body46
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  br label %loop.head45

loop.end50:                                       ; preds = %loop.head45
  br label %loop.head43

loop.end51:                                       ; preds = %loop.head43
  %401 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %402 = load %dimension_descriptor*, %dimension_descriptor** %401, align 8
  %403 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %402, i32 0
  %404 = getelementptr %dimension_descriptor, %dimension_descriptor* %403, i32 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = sub i32 %405, 1
  store i32 %406, i32* %i, align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.end62, %loop.end51
  %407 = load i32, i32* %i, align 4
  %408 = add i32 %407, 1
  %409 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %410 = load %dimension_descriptor*, %dimension_descriptor** %409, align 8
  %411 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %410, i32 0
  %412 = getelementptr %dimension_descriptor, %dimension_descriptor* %411, i32 0, i32 1
  %413 = load i32, i32* %412, align 4
  %414 = getelementptr %dimension_descriptor, %dimension_descriptor* %411, i32 0, i32 2
  %415 = load i32, i32* %414, align 4
  %416 = add i32 %415, %413
  %417 = sub i32 %416, 1
  %418 = icmp sle i32 %408, %417
  br i1 %418, label %loop.body53, label %loop.end63

loop.body53:                                      ; preds = %loop.head52
  %419 = load i32, i32* %i, align 4
  %420 = add i32 %419, 1
  store i32 %420, i32* %i, align 4
  %421 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %422 = load %dimension_descriptor*, %dimension_descriptor** %421, align 8
  %423 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %422, i32 1
  %424 = getelementptr %dimension_descriptor, %dimension_descriptor* %423, i32 0, i32 1
  %425 = load i32, i32* %424, align 4
  %426 = sub i32 %425, 1
  store i32 %426, i32* %j, align 4
  br label %loop.head54

loop.head54:                                      ; preds = %loop.end61, %loop.body53
  %427 = load i32, i32* %j, align 4
  %428 = add i32 %427, 1
  %429 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %430 = load %dimension_descriptor*, %dimension_descriptor** %429, align 8
  %431 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %430, i32 1
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %431, i32 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = getelementptr %dimension_descriptor, %dimension_descriptor* %431, i32 0, i32 2
  %435 = load i32, i32* %434, align 4
  %436 = add i32 %435, %433
  %437 = sub i32 %436, 1
  %438 = icmp sle i32 %428, %437
  br i1 %438, label %loop.body55, label %loop.end62

loop.body55:                                      ; preds = %loop.head54
  %439 = load i32, i32* %j, align 4
  %440 = add i32 %439, 1
  store i32 %440, i32* %j, align 4
  %441 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %442 = load %dimension_descriptor*, %dimension_descriptor** %441, align 8
  %443 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %442, i32 2
  %444 = getelementptr %dimension_descriptor, %dimension_descriptor* %443, i32 0, i32 1
  %445 = load i32, i32* %444, align 4
  %446 = sub i32 %445, 1
  store i32 %446, i32* %k, align 4
  br label %loop.head56

loop.head56:                                      ; preds = %ifcont60, %loop.body55
  %447 = load i32, i32* %k, align 4
  %448 = add i32 %447, 1
  %449 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %450 = load %dimension_descriptor*, %dimension_descriptor** %449, align 8
  %451 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %450, i32 2
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %451, i32 0, i32 1
  %453 = load i32, i32* %452, align 4
  %454 = getelementptr %dimension_descriptor, %dimension_descriptor* %451, i32 0, i32 2
  %455 = load i32, i32* %454, align 4
  %456 = add i32 %455, %453
  %457 = sub i32 %456, 1
  %458 = icmp sle i32 %448, %457
  br i1 %458, label %loop.body57, label %loop.end61

loop.body57:                                      ; preds = %loop.head56
  %459 = load i32, i32* %k, align 4
  %460 = add i32 %459, 1
  store i32 %460, i32* %k, align 4
  %461 = load i32, i32* %i, align 4
  %462 = load i32, i32* %j, align 4
  %463 = load i32, i32* %k, align 4
  %464 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %465 = load %dimension_descriptor*, %dimension_descriptor** %464, align 8
  %466 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %465, i32 0
  %467 = getelementptr %dimension_descriptor, %dimension_descriptor* %466, i32 0, i32 1
  %468 = load i32, i32* %467, align 4
  %469 = sub i32 %461, %468
  %470 = mul i32 1, %469
  %471 = add i32 0, %470
  %472 = getelementptr %dimension_descriptor, %dimension_descriptor* %466, i32 0, i32 2
  %473 = load i32, i32* %472, align 4
  %474 = mul i32 1, %473
  %475 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %465, i32 1
  %476 = getelementptr %dimension_descriptor, %dimension_descriptor* %475, i32 0, i32 1
  %477 = load i32, i32* %476, align 4
  %478 = sub i32 %462, %477
  %479 = mul i32 %474, %478
  %480 = add i32 %471, %479
  %481 = getelementptr %dimension_descriptor, %dimension_descriptor* %475, i32 0, i32 2
  %482 = load i32, i32* %481, align 4
  %483 = mul i32 %474, %482
  %484 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %465, i32 2
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = sub i32 %463, %486
  %488 = mul i32 %483, %487
  %489 = add i32 %480, %488
  %490 = getelementptr %dimension_descriptor, %dimension_descriptor* %484, i32 0, i32 2
  %491 = load i32, i32* %490, align 4
  %492 = mul i32 %483, %491
  %493 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %494 = load %complex_4*, %complex_4** %493, align 8
  %495 = getelementptr inbounds %complex_4, %complex_4* %494, i32 %489
  %496 = load %complex_4, %complex_4* %495, align 4
  %497 = load i32, i32* %i, align 4
  %498 = load i32, i32* %j, align 4
  %499 = add i32 %497, %498
  %500 = load i32, i32* %k, align 4
  %501 = add i32 %499, %500
  %502 = sitofp i32 %501 to float
  %503 = alloca %complex_4, align 8
  %504 = getelementptr %complex_4, %complex_4* %503, i32 0, i32 0
  %505 = getelementptr %complex_4, %complex_4* %503, i32 0, i32 1
  store float %502, float* %504, align 4
  store float 0.000000e+00, float* %505, align 4
  %506 = load %complex_4, %complex_4* %503, align 4
  %507 = alloca %complex_4, align 8
  store %complex_4 %496, %complex_4* %507, align 4
  %508 = getelementptr %complex_4, %complex_4* %507, i32 0, i32 0
  %509 = load float, float* %508, align 4
  %510 = alloca %complex_4, align 8
  store %complex_4 %506, %complex_4* %510, align 4
  %511 = getelementptr %complex_4, %complex_4* %510, i32 0, i32 0
  %512 = load float, float* %511, align 4
  %513 = alloca %complex_4, align 8
  store %complex_4 %496, %complex_4* %513, align 4
  %514 = getelementptr %complex_4, %complex_4* %513, i32 0, i32 1
  %515 = load float, float* %514, align 4
  %516 = alloca %complex_4, align 8
  store %complex_4 %506, %complex_4* %516, align 4
  %517 = getelementptr %complex_4, %complex_4* %516, i32 0, i32 1
  %518 = load float, float* %517, align 4
  %519 = fcmp une float %509, %512
  %520 = fcmp une float %515, %518
  %521 = and i1 %519, %520
  br i1 %521, label %then58, label %else59

then58:                                           ; preds = %loop.body57
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont60

else59:                                           ; preds = %loop.body57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  br label %loop.head56

loop.end61:                                       ; preds = %loop.head56
  br label %loop.head54

loop.end62:                                       ; preds = %loop.head54
  br label %loop.head52

loop.end63:                                       ; preds = %loop.head52
  %522 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %523 = load %complex_4*, %complex_4** %522, align 8
  %524 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %525 = load %dimension_descriptor*, %dimension_descriptor** %524, align 8
  %526 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %525, i32 0
  %527 = getelementptr %dimension_descriptor, %dimension_descriptor* %526, i32 0, i32 1
  %528 = load i32, i32* %527, align 4
  store i32 %528, i32* %call_arg_value, align 4
  %529 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %530 = load %dimension_descriptor*, %dimension_descriptor** %529, align 8
  %531 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %530, i32 0
  %532 = getelementptr %dimension_descriptor, %dimension_descriptor* %531, i32 0, i32 2
  %533 = load i32, i32* %532, align 4
  store i32 %533, i32* %call_arg_value64, align 4
  %534 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %535 = load %dimension_descriptor*, %dimension_descriptor** %534, align 8
  %536 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %535, i32 1
  %537 = getelementptr %dimension_descriptor, %dimension_descriptor* %536, i32 0, i32 1
  %538 = load i32, i32* %537, align 4
  store i32 %538, i32* %call_arg_value65, align 4
  %539 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %540 = load %dimension_descriptor*, %dimension_descriptor** %539, align 8
  %541 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %540, i32 1
  %542 = getelementptr %dimension_descriptor, %dimension_descriptor* %541, i32 0, i32 2
  %543 = load i32, i32* %542, align 4
  store i32 %543, i32* %call_arg_value66, align 4
  %544 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %545 = load %dimension_descriptor*, %dimension_descriptor** %544, align 8
  %546 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %545, i32 2
  %547 = getelementptr %dimension_descriptor, %dimension_descriptor* %546, i32 0, i32 1
  %548 = load i32, i32* %547, align 4
  store i32 %548, i32* %call_arg_value67, align 4
  %549 = getelementptr %array.1, %array.1* %c, i32 0, i32 2
  %550 = load %dimension_descriptor*, %dimension_descriptor** %549, align 8
  %551 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %550, i32 2
  %552 = getelementptr %dimension_descriptor, %dimension_descriptor* %551, i32 0, i32 2
  %553 = load i32, i32* %552, align 4
  store i32 %553, i32* %call_arg_value68, align 4
  %554 = call %complex_4 @reduce_sum_c(%complex_4* %523, i32* %call_arg_value, i32* %call_arg_value64, i32* %call_arg_value65, i32* %call_arg_value66, i32* %call_arg_value67, i32* %call_arg_value68)
  store %complex_4 %554, %complex_4* %r, align 4
  %555 = load %complex_4, %complex_4* %r, align 4
  %556 = alloca %complex_4, align 8
  %557 = getelementptr %complex_4, %complex_4* %556, i32 0, i32 0
  %558 = getelementptr %complex_4, %complex_4* %556, i32 0, i32 1
  store float 1.143450e+05, float* %557, align 4
  store float 0.000000e+00, float* %558, align 4
  %559 = load %complex_4, %complex_4* %556, align 4
  %560 = alloca %complex_4, align 8
  store %complex_4 %555, %complex_4* %560, align 4
  %561 = getelementptr %complex_4, %complex_4* %560, i32 0, i32 0
  %562 = load float, float* %561, align 4
  %563 = alloca %complex_4, align 8
  store %complex_4 %559, %complex_4* %563, align 4
  %564 = getelementptr %complex_4, %complex_4* %563, i32 0, i32 0
  %565 = load float, float* %564, align 4
  %566 = alloca %complex_4, align 8
  store %complex_4 %555, %complex_4* %566, align 4
  %567 = getelementptr %complex_4, %complex_4* %566, i32 0, i32 1
  %568 = load float, float* %567, align 4
  %569 = alloca %complex_4, align 8
  store %complex_4 %559, %complex_4* %569, align 4
  %570 = getelementptr %complex_4, %complex_4* %569, i32 0, i32 1
  %571 = load float, float* %570, align 4
  %572 = fcmp une float %562, %565
  %573 = fcmp une float %568, %571
  %574 = and i1 %572, %573
  br i1 %574, label %then69, label %else70

then69:                                           ; preds = %loop.end63
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %loop.end63
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %575 = getelementptr %array, %array* %a, i32 0, i32 3
  %576 = load i1, i1* %575, align 1
  br i1 %576, label %then72, label %else73

then72:                                           ; preds = %ifcont71
  %577 = getelementptr %array, %array* %a, i32 0, i32 0
  %578 = load i32*, i32** %577, align 8
  %579 = alloca i8*, align 8
  %580 = bitcast i32* %578 to i8*
  store i8* %580, i8** %579, align 8
  %581 = load i8*, i8** %579, align 8
  call void (i8*, ...) @_lfortran_free(i8* %581)
  %582 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %582, align 1
  br label %ifcont74

else73:                                           ; preds = %ifcont71
  br label %ifcont74

ifcont74:                                         ; preds = %else73, %then72
  %583 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  %584 = load i1, i1* %583, align 1
  br i1 %584, label %then75, label %else76

then75:                                           ; preds = %ifcont74
  %585 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %586 = load float*, float** %585, align 8
  %587 = alloca i8*, align 8
  %588 = bitcast float* %586 to i8*
  store i8* %588, i8** %587, align 8
  %589 = load i8*, i8** %587, align 8
  call void (i8*, ...) @_lfortran_free(i8* %589)
  %590 = getelementptr %array.0, %array.0* %b, i32 0, i32 3
  store i1 false, i1* %590, align 1
  br label %ifcont77

else76:                                           ; preds = %ifcont74
  br label %ifcont77

ifcont77:                                         ; preds = %else76, %then75
  %591 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  %592 = load i1, i1* %591, align 1
  br i1 %592, label %then78, label %else79

then78:                                           ; preds = %ifcont77
  %593 = getelementptr %array.1, %array.1* %c, i32 0, i32 0
  %594 = load %complex_4*, %complex_4** %593, align 8
  %595 = alloca i8*, align 8
  %596 = bitcast %complex_4* %594 to i8*
  store i8* %596, i8** %595, align 8
  %597 = load i8*, i8** %595, align 8
  call void (i8*, ...) @_lfortran_free(i8* %597)
  %598 = getelementptr %array.1, %array.1* %c, i32 0, i32 3
  store i1 false, i1* %598, align 1
  br label %ifcont80

else79:                                           ; preds = %ifcont77
  br label %ifcont80

ifcont80:                                         ; preds = %else79, %then78
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
