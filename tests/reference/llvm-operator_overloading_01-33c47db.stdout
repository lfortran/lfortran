; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [11 x i8] c"S-DESC-4,L\00", align 1
@string_const_data = private constant [5 x i8] c"T*T:\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data, i32 0, i32 0), i64 4 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [11 x i8] c"S-DESC-4,L\00", align 1
@string_const_data.2 = private constant [5 x i8] c"T*F:\00"
@string_const.3 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.2, i32 0, i32 0), i64 4 }>
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [11 x i8] c"S-DESC-4,L\00", align 1
@string_const_data.5 = private constant [5 x i8] c"F*T:\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.5, i32 0, i32 0), i64 4 }>
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.7 = private unnamed_addr constant [11 x i8] c"S-DESC-4,L\00", align 1
@string_const_data.8 = private constant [5 x i8] c"F*F:\00"
@string_const.9 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.8, i32 0, i32 0), i64 4 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.10 = private unnamed_addr constant [12 x i8] c"S-DESC-4,I4\00", align 1
@string_const_data.11 = private constant [5 x i8] c"T+T:\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.11, i32 0, i32 0), i64 4 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.13 = private unnamed_addr constant [12 x i8] c"S-DESC-4,I4\00", align 1
@string_const_data.14 = private constant [5 x i8] c"T+F:\00"
@string_const.15 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.14, i32 0, i32 0), i64 4 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.16 = private unnamed_addr constant [12 x i8] c"S-DESC-4,I4\00", align 1
@string_const_data.17 = private constant [5 x i8] c"F+T:\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.17, i32 0, i32 0), i64 4 }>
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.19 = private unnamed_addr constant [12 x i8] c"S-DESC-4,I4\00", align 1
@string_const_data.20 = private constant [5 x i8] c"F+F:\00"
@string_const.21 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.20, i32 0, i32 0), i64 4 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @__module_operator_overloading_01_overload_asterisk_m_bin_add(i1* %log1, i1* %log2) {
.entry:
  %bin_add = alloca i32, align 4
  %0 = load i1, i1* %log1, align 1
  %1 = load i1, i1* %log2, align 1
  %2 = icmp eq i1 %0, false
  %3 = select i1 %2, i1 %0, i1 %1
  br i1 %3, label %then, label %else

then:                                             ; preds = %.entry
  store i32 2, i32* %bin_add, align 4
  br label %ifcont3

else:                                             ; preds = %.entry
  %4 = load i1, i1* %log1, align 1
  %5 = xor i1 %4, true
  %6 = load i1, i1* %log2, align 1
  %7 = xor i1 %6, true
  %8 = icmp eq i1 %5, false
  %9 = select i1 %8, i1 %5, i1 %7
  br i1 %9, label %then1, label %else2

then1:                                            ; preds = %else
  store i32 0, i32* %bin_add, align 4
  br label %ifcont

else2:                                            ; preds = %else
  store i32 1, i32* %bin_add, align 4
  br label %ifcont

ifcont:                                           ; preds = %else2, %then1
  br label %ifcont3

ifcont3:                                          ; preds = %ifcont, %then
  br label %return

return:                                           ; preds = %ifcont3
  %10 = load i32, i32* %bin_add, align 4
  ret i32 %10
}

define i1 @__module_operator_overloading_01_overload_asterisk_m_logical_and(i1* %log1, i1* %log2) {
.entry:
  %logical_and = alloca i1, align 1
  %0 = load i1, i1* %log1, align 1
  %1 = load i1, i1* %log2, align 1
  %2 = icmp eq i1 %0, false
  %3 = select i1 %2, i1 %0, i1 %1
  store i1 %3, i1* %logical_and, align 1
  br label %return

return:                                           ; preds = %.entry
  %4 = load i1, i1* %logical_and, align 1
  ret i1 %4
}

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %f = alloca i1, align 1
  store i1 false, i1* %f, align 1
  %t = alloca i1, align 1
  store i1 true, i1* %t, align 1
  %2 = call i1 @__module_operator_overloading_01_overload_asterisk_m_logical_and(i1* %t, i1* %t)
  %3 = alloca i1, align 1
  store i1 %2, i1* %3, align 1
  %4 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const, i1* %3)
  %5 = call i64 @_lfortran_str_len(i8* %4)
  %6 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %6 to %string_descriptor*
  %7 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %4, i8** %7, align 8
  %8 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %5, i64* %8, align 4
  %9 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %12 = load i64, i64* %11, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %10, i64 %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i64 1)
  %13 = call i1 @__module_operator_overloading_01_overload_asterisk_m_logical_and(i1* %t, i1* %f)
  %14 = alloca i1, align 1
  store i1 %13, i1* %14, align 1
  %15 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @serialization_info.1, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.3, i1* %14)
  %16 = call i64 @_lfortran_str_len(i8* %15)
  %17 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc1 = bitcast i8* %17 to %string_descriptor*
  %18 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %15, i8** %18, align 8
  %19 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %16, i64* %19, align 4
  %20 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  %23 = load i64, i64* %22, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %21, i64 %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i64 1)
  %24 = call i1 @__module_operator_overloading_01_overload_asterisk_m_logical_and(i1* %f, i1* %t)
  %25 = alloca i1, align 1
  store i1 %24, i1* %25, align 1
  %26 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @serialization_info.4, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.6, i1* %25)
  %27 = call i64 @_lfortran_str_len(i8* %26)
  %28 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %28 to %string_descriptor*
  %29 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %26, i8** %29, align 8
  %30 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %27, i64* %30, align 4
  %31 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %34 = load i64, i64* %33, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %32, i64 %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i64 1)
  %35 = call i1 @__module_operator_overloading_01_overload_asterisk_m_logical_and(i1* %f, i1* %f)
  %36 = alloca i1, align 1
  store i1 %35, i1* %36, align 1
  %37 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @serialization_info.7, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.9, i1* %36)
  %38 = call i64 @_lfortran_str_len(i8* %37)
  %39 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc3 = bitcast i8* %39 to %string_descriptor*
  %40 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  store i8* %37, i8** %40, align 8
  %41 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  store i64 %38, i64* %41, align 4
  %42 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  %45 = load i64, i64* %44, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %43, i64 %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i64 1)
  %46 = call i32 @__module_operator_overloading_01_overload_asterisk_m_bin_add(i1* %t, i1* %t)
  %47 = alloca i32, align 4
  store i32 %46, i32* %47, align 4
  %48 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @serialization_info.10, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.12, i32* %47)
  %49 = call i64 @_lfortran_str_len(i8* %48)
  %50 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc4 = bitcast i8* %50 to %string_descriptor*
  %51 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  store i8* %48, i8** %51, align 8
  %52 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  store i64 %49, i64* %52, align 4
  %53 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  %56 = load i64, i64* %55, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %54, i64 %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i64 1)
  %57 = call i32 @__module_operator_overloading_01_overload_asterisk_m_bin_add(i1* %t, i1* %f)
  %58 = alloca i32, align 4
  store i32 %57, i32* %58, align 4
  %59 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @serialization_info.13, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.15, i32* %58)
  %60 = call i64 @_lfortran_str_len(i8* %59)
  %61 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc5 = bitcast i8* %61 to %string_descriptor*
  %62 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  store i8* %59, i8** %62, align 8
  %63 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  store i64 %60, i64* %63, align 4
  %64 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  %67 = load i64, i64* %66, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %65, i64 %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i64 1)
  %68 = call i32 @__module_operator_overloading_01_overload_asterisk_m_bin_add(i1* %f, i1* %t)
  %69 = alloca i32, align 4
  store i32 %68, i32* %69, align 4
  %70 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @serialization_info.16, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.18, i32* %69)
  %71 = call i64 @_lfortran_str_len(i8* %70)
  %72 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc6 = bitcast i8* %72 to %string_descriptor*
  %73 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  store i8* %70, i8** %73, align 8
  %74 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  store i64 %71, i64* %74, align 4
  %75 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  %78 = load i64, i64* %77, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %76, i64 %78, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i64 1)
  %79 = call i32 @__module_operator_overloading_01_overload_asterisk_m_bin_add(i1* %f, i1* %f)
  %80 = alloca i32, align 4
  store i32 %79, i32* %80, align 4
  %81 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @serialization_info.19, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.21, i32* %80)
  %82 = call i64 @_lfortran_str_len(i8* %81)
  %83 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc7 = bitcast i8* %83 to %string_descriptor*
  %84 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  store i8* %81, i8** %84, align 8
  %85 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  store i64 %82, i64* %85, align 4
  %86 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  %89 = load i64, i64* %88, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %87, i64 %89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i64 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i64, i8*, i64)

declare void @_lpython_free_argv()
