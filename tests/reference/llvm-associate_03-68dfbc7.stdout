; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [9 x i8] c"%d%s%d%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [7 x i8] c"%lld%s\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %i = alloca i32, align 4
  %p1 = alloca i32*, align 8
  %t1 = alloca i32, align 4
  store i32 2, i32* %t1, align 4
  %t2 = alloca i32, align 4
  store i32 1, i32* %t2, align 4
  %2 = load i32, i32* %t1, align 4
  %3 = load i32, i32* %t2, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i32 %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  %4 = load i32, i32* %t1, align 4
  %5 = load i32, i32* %t2, align 4
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %then, label %else

then:                                             ; preds = %.entry
  store i32* %t1, i32** %p1, align 8
  br label %ifcont

else:                                             ; preds = %.entry
  store i32* %t2, i32** %p1, align 8
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %7 = load i32*, i32** %p1, align 8
  %8 = ptrtoint i32* %7 to i64
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i32 0, i32 0), i64 %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  %9 = load i32*, i32** %p1, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %i, align 4
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %t2, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_printf(i8*, ...)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
