; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@18 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c" \00", align 1
@21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@22 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@30 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@31 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1
@32 = private unnamed_addr constant [2 x i8] c" \00", align 1
@33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@34 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@35 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@36 = private unnamed_addr constant [2 x i8] c" \00", align 1
@37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@38 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@39 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@40 = private unnamed_addr constant [2 x i8] c" \00", align 1
@41 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@42 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@43 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@44 = private unnamed_addr constant [2 x i8] c" \00", align 1
@45 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@46 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@47 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@48 = private unnamed_addr constant [2 x i8] c" \00", align 1
@49 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@50 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@51 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@52 = private unnamed_addr constant [2 x i8] c" \00", align 1
@53 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@54 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@55 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@56 = private unnamed_addr constant [2 x i8] c" \00", align 1
@57 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@58 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@59 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@60 = private unnamed_addr constant [2 x i8] c" \00", align 1
@61 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@62 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@63 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1
@64 = private unnamed_addr constant [2 x i8] c" \00", align 1
@65 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@66 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@67 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@68 = private unnamed_addr constant [2 x i8] c" \00", align 1
@69 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@70 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@71 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@72 = private unnamed_addr constant [2 x i8] c" \00", align 1
@73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@74 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@75 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@76 = private unnamed_addr constant [2 x i8] c" \00", align 1
@77 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@78 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@79 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@80 = private unnamed_addr constant [2 x i8] c" \00", align 1
@81 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@82 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@83 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@84 = private unnamed_addr constant [2 x i8] c" \00", align 1
@85 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@86 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@87 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@88 = private unnamed_addr constant [2 x i8] c" \00", align 1
@89 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@90 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@91 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@92 = private unnamed_addr constant [2 x i8] c" \00", align 1
@93 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@94 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@95 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1

define i32 @main() {
.entry:
  %marks = alloca i32, align 4
  store i32 81, i32* %marks, align 4
  %0 = load i32, i32* %marks, align 4
  %1 = icmp sle i32 91, %0
  %2 = load i32, i32* %marks, align 4
  %3 = icmp sle i32 %2, 100
  %4 = mul i1 %1, %3
  br i1 %4, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %ifcont15

else:                                             ; preds = %.entry
  %5 = load i32, i32* %marks, align 4
  %6 = icmp sle i32 81, %5
  %7 = load i32, i32* %marks, align 4
  %8 = icmp sle i32 %7, 90
  %9 = mul i1 %6, %8
  br i1 %9, label %then1, label %else2

then1:                                            ; preds = %else
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  br label %ifcont14

else2:                                            ; preds = %else
  %10 = load i32, i32* %marks, align 4
  %11 = icmp sle i32 71, %10
  %12 = load i32, i32* %marks, align 4
  %13 = icmp sle i32 %12, 80
  %14 = mul i1 %11, %13
  br i1 %14, label %then3, label %else4

then3:                                            ; preds = %else2
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %ifcont13

else4:                                            ; preds = %else2
  %15 = load i32, i32* %marks, align 4
  %16 = icmp sle i32 61, %15
  %17 = load i32, i32* %marks, align 4
  %18 = icmp sle i32 %17, 70
  %19 = mul i1 %16, %18
  br i1 %19, label %then5, label %else6

then5:                                            ; preds = %else4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %ifcont12

else6:                                            ; preds = %else4
  %20 = load i32, i32* %marks, align 4
  %21 = icmp sle i32 41, %20
  %22 = load i32, i32* %marks, align 4
  %23 = icmp sle i32 %22, 60
  %24 = mul i1 %21, %23
  br i1 %24, label %then7, label %else8

then7:                                            ; preds = %else6
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0))
  br label %ifcont11

else8:                                            ; preds = %else6
  %25 = load i32, i32* %marks, align 4
  %26 = icmp sle i32 %25, 40
  br i1 %26, label %then9, label %else10

then9:                                            ; preds = %else8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0))
  br label %ifcont

else10:                                           ; preds = %else8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  br label %ifcont

ifcont:                                           ; preds = %else10, %then9
  br label %ifcont11

ifcont11:                                         ; preds = %ifcont, %then7
  br label %ifcont12

ifcont12:                                         ; preds = %ifcont11, %then5
  br label %ifcont13

ifcont13:                                         ; preds = %ifcont12, %then3
  br label %ifcont14

ifcont14:                                         ; preds = %ifcont13, %then1
  br label %ifcont15

ifcont15:                                         ; preds = %ifcont14, %then
  %27 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0), i32 %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0))
  %28 = load i32, i32* %marks, align 4
  %29 = icmp sle i32 91, %28
  %30 = load i32, i32* %marks, align 4
  %31 = icmp sle i32 %30, 100
  %32 = mul i1 %29, %31
  br i1 %32, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @33, i32 0, i32 0))
  br label %ifcont33

else17:                                           ; preds = %ifcont15
  %33 = load i32, i32* %marks, align 4
  %34 = icmp sle i32 81, %33
  %35 = load i32, i32* %marks, align 4
  %36 = icmp sle i32 %35, 90
  %37 = mul i1 %34, %36
  br i1 %37, label %then18, label %else19

then18:                                           ; preds = %else17
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  br label %ifcont32

else19:                                           ; preds = %else17
  %38 = load i32, i32* %marks, align 4
  %39 = icmp sle i32 71, %38
  %40 = load i32, i32* %marks, align 4
  %41 = icmp sle i32 %40, 80
  %42 = mul i1 %39, %41
  br i1 %42, label %then20, label %else21

then20:                                           ; preds = %else19
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @41, i32 0, i32 0))
  br label %ifcont31

else21:                                           ; preds = %else19
  %43 = load i32, i32* %marks, align 4
  %44 = icmp sle i32 61, %43
  %45 = load i32, i32* %marks, align 4
  %46 = icmp sle i32 %45, 70
  %47 = mul i1 %44, %46
  br i1 %47, label %then22, label %else23

then22:                                           ; preds = %else21
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @46, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @45, i32 0, i32 0))
  br label %ifcont30

else23:                                           ; preds = %else21
  %48 = load i32, i32* %marks, align 4
  %49 = icmp sle i32 41, %48
  %50 = load i32, i32* %marks, align 4
  %51 = icmp sle i32 %50, 60
  %52 = mul i1 %49, %51
  br i1 %52, label %then24, label %else25

then24:                                           ; preds = %else23
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @50, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @49, i32 0, i32 0))
  br label %ifcont29

else25:                                           ; preds = %else23
  %53 = load i32, i32* %marks, align 4
  %54 = icmp sle i32 %53, 40
  br i1 %54, label %then26, label %else27

then26:                                           ; preds = %else25
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @54, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @53, i32 0, i32 0))
  br label %ifcont28

else27:                                           ; preds = %else25
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @58, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @57, i32 0, i32 0))
  br label %ifcont28

ifcont28:                                         ; preds = %else27, %then26
  br label %ifcont29

ifcont29:                                         ; preds = %ifcont28, %then24
  br label %ifcont30

ifcont30:                                         ; preds = %ifcont29, %then22
  br label %ifcont31

ifcont31:                                         ; preds = %ifcont30, %then20
  br label %ifcont32

ifcont32:                                         ; preds = %ifcont31, %then18
  br label %ifcont33

ifcont33:                                         ; preds = %ifcont32, %then16
  %55 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @62, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @60, i32 0, i32 0), i32 %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @61, i32 0, i32 0))
  %56 = load i32, i32* %marks, align 4
  %57 = icmp sle i32 91, %56
  %58 = load i32, i32* %marks, align 4
  %59 = icmp sle i32 %58, 100
  %60 = mul i1 %57, %59
  br i1 %60, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @66, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @65, i32 0, i32 0))
  br label %ifcont51

else35:                                           ; preds = %ifcont33
  %61 = load i32, i32* %marks, align 4
  %62 = icmp sle i32 81, %61
  %63 = load i32, i32* %marks, align 4
  %64 = icmp sle i32 %63, 90
  %65 = mul i1 %62, %64
  br i1 %65, label %then36, label %else37

then36:                                           ; preds = %else35
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @69, i32 0, i32 0))
  br label %ifcont50

else37:                                           ; preds = %else35
  %66 = load i32, i32* %marks, align 4
  %67 = icmp sle i32 71, %66
  %68 = load i32, i32* %marks, align 4
  %69 = icmp sle i32 %68, 80
  %70 = mul i1 %67, %69
  br i1 %70, label %then38, label %else39

then38:                                           ; preds = %else37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @74, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @73, i32 0, i32 0))
  br label %ifcont49

else39:                                           ; preds = %else37
  %71 = load i32, i32* %marks, align 4
  %72 = icmp sle i32 61, %71
  %73 = load i32, i32* %marks, align 4
  %74 = icmp sle i32 %73, 70
  %75 = mul i1 %72, %74
  br i1 %75, label %then40, label %else41

then40:                                           ; preds = %else39
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @78, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @77, i32 0, i32 0))
  br label %ifcont48

else41:                                           ; preds = %else39
  %76 = load i32, i32* %marks, align 4
  %77 = icmp sle i32 41, %76
  %78 = load i32, i32* %marks, align 4
  %79 = icmp sle i32 %78, 60
  %80 = mul i1 %77, %79
  br i1 %80, label %then42, label %else43

then42:                                           ; preds = %else41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @82, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @81, i32 0, i32 0))
  br label %ifcont47

else43:                                           ; preds = %else41
  %81 = load i32, i32* %marks, align 4
  %82 = icmp sle i32 %81, 40
  br i1 %82, label %then44, label %else45

then44:                                           ; preds = %else43
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @86, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @85, i32 0, i32 0))
  br label %ifcont46

else45:                                           ; preds = %else43
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @90, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @89, i32 0, i32 0))
  br label %ifcont46

ifcont46:                                         ; preds = %else45, %then44
  br label %ifcont47

ifcont47:                                         ; preds = %ifcont46, %then42
  br label %ifcont48

ifcont48:                                         ; preds = %ifcont47, %then40
  br label %ifcont49

ifcont49:                                         ; preds = %ifcont48, %then38
  br label %ifcont50

ifcont50:                                         ; preds = %ifcont49, %then36
  br label %ifcont51

ifcont51:                                         ; preds = %ifcont50, %then34
  %83 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @94, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @92, i32 0, i32 0), i32 %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @93, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
