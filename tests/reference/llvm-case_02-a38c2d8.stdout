; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@18 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c" \00", align 1
@21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@22 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@30 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@31 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1
@32 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@33 = private unnamed_addr constant [2 x i8] c" \00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@36 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@37 = private unnamed_addr constant [2 x i8] c" \00", align 1
@38 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@39 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@40 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@42 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@43 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@45 = private unnamed_addr constant [2 x i8] c" \00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@47 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@48 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@49 = private unnamed_addr constant [2 x i8] c" \00", align 1
@50 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@51 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@52 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@53 = private unnamed_addr constant [2 x i8] c" \00", align 1
@54 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@55 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@56 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@57 = private unnamed_addr constant [2 x i8] c" \00", align 1
@58 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@59 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@60 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@61 = private unnamed_addr constant [2 x i8] c" \00", align 1
@62 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@63 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@64 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1
@65 = private unnamed_addr constant [2 x i8] c" \00", align 1
@66 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@67 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@68 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@70 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@71 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@72 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@73 = private unnamed_addr constant [2 x i8] c" \00", align 1
@74 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@75 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@76 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@77 = private unnamed_addr constant [2 x i8] c" \00", align 1
@78 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@79 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@80 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@81 = private unnamed_addr constant [2 x i8] c" \00", align 1
@82 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@83 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@84 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@85 = private unnamed_addr constant [2 x i8] c" \00", align 1
@86 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@87 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@88 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@89 = private unnamed_addr constant [2 x i8] c" \00", align 1
@90 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@91 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@92 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@93 = private unnamed_addr constant [2 x i8] c" \00", align 1
@94 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@95 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@96 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %marks = alloca i32, align 4
  %out = alloca i32, align 4
  store i32 81, i32* %marks, align 4
  %2 = load i32, i32* %marks, align 4
  %3 = icmp sle i32 91, %2
  %4 = load i32, i32* %marks, align 4
  %5 = icmp sle i32 %4, 100
  %6 = icmp eq i1 %3, false
  %7 = alloca i1, align 1
  br i1 %6, label %then, label %else

then:                                             ; preds = %.entry
  store i1 %3, i1* %7, align 1
  br label %ifcont

else:                                             ; preds = %.entry
  store i1 %5, i1* %7, align 1
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %8 = load i1, i1* %7, align 1
  br i1 %8, label %then1, label %else2

then1:                                            ; preds = %ifcont
  store i32 0, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %ifcont30

else2:                                            ; preds = %ifcont
  %9 = load i32, i32* %marks, align 4
  %10 = icmp sle i32 81, %9
  %11 = load i32, i32* %marks, align 4
  %12 = icmp sle i32 %11, 90
  %13 = icmp eq i1 %10, false
  %14 = alloca i1, align 1
  br i1 %13, label %then3, label %else4

then3:                                            ; preds = %else2
  store i1 %10, i1* %14, align 1
  br label %ifcont5

else4:                                            ; preds = %else2
  store i1 %12, i1* %14, align 1
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %15 = load i1, i1* %14, align 1
  br i1 %15, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  store i32 1, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  br label %ifcont29

else7:                                            ; preds = %ifcont5
  %16 = load i32, i32* %marks, align 4
  %17 = icmp sle i32 71, %16
  %18 = load i32, i32* %marks, align 4
  %19 = icmp sle i32 %18, 80
  %20 = icmp eq i1 %17, false
  %21 = alloca i1, align 1
  br i1 %20, label %then8, label %else9

then8:                                            ; preds = %else7
  store i1 %17, i1* %21, align 1
  br label %ifcont10

else9:                                            ; preds = %else7
  store i1 %19, i1* %21, align 1
  br label %ifcont10

ifcont10:                                         ; preds = %else9, %then8
  %22 = load i1, i1* %21, align 1
  br i1 %22, label %then11, label %else12

then11:                                           ; preds = %ifcont10
  store i32 2, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %ifcont28

else12:                                           ; preds = %ifcont10
  %23 = load i32, i32* %marks, align 4
  %24 = icmp sle i32 61, %23
  %25 = load i32, i32* %marks, align 4
  %26 = icmp sle i32 %25, 70
  %27 = icmp eq i1 %24, false
  %28 = alloca i1, align 1
  br i1 %27, label %then13, label %else14

then13:                                           ; preds = %else12
  store i1 %24, i1* %28, align 1
  br label %ifcont15

else14:                                           ; preds = %else12
  store i1 %26, i1* %28, align 1
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %29 = load i1, i1* %28, align 1
  br i1 %29, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  store i32 3, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %ifcont27

else17:                                           ; preds = %ifcont15
  %30 = load i32, i32* %marks, align 4
  %31 = icmp sle i32 41, %30
  %32 = load i32, i32* %marks, align 4
  %33 = icmp sle i32 %32, 60
  %34 = icmp eq i1 %31, false
  %35 = alloca i1, align 1
  br i1 %34, label %then18, label %else19

then18:                                           ; preds = %else17
  store i1 %31, i1* %35, align 1
  br label %ifcont20

else19:                                           ; preds = %else17
  store i1 %33, i1* %35, align 1
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  %36 = load i1, i1* %35, align 1
  br i1 %36, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  store i32 4, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0))
  br label %ifcont26

else22:                                           ; preds = %ifcont20
  %37 = load i32, i32* %marks, align 4
  %38 = icmp sle i32 %37, 40
  br i1 %38, label %then23, label %else24

then23:                                           ; preds = %else22
  store i32 5, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0))
  br label %ifcont25

else24:                                           ; preds = %else22
  store i32 6, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %then23
  br label %ifcont26

ifcont26:                                         ; preds = %ifcont25, %then21
  br label %ifcont27

ifcont27:                                         ; preds = %ifcont26, %then16
  br label %ifcont28

ifcont28:                                         ; preds = %ifcont27, %then11
  br label %ifcont29

ifcont29:                                         ; preds = %ifcont28, %then6
  br label %ifcont30

ifcont30:                                         ; preds = %ifcont29, %then1
  %39 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0), i32 %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0))
  %40 = load i32, i32* %out, align 4
  %41 = icmp ne i32 %40, 1
  br i1 %41, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @32, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %42 = load i32, i32* %marks, align 4
  %43 = icmp sle i32 91, %42
  %44 = load i32, i32* %marks, align 4
  %45 = icmp sle i32 %44, 100
  %46 = icmp eq i1 %43, false
  %47 = alloca i1, align 1
  br i1 %46, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  store i1 %43, i1* %47, align 1
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  store i1 %45, i1* %47, align 1
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %48 = load i1, i1* %47, align 1
  br i1 %48, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  br label %ifcont66

else38:                                           ; preds = %ifcont36
  %49 = load i32, i32* %marks, align 4
  %50 = icmp sle i32 81, %49
  %51 = load i32, i32* %marks, align 4
  %52 = icmp sle i32 %51, 90
  %53 = icmp eq i1 %50, false
  %54 = alloca i1, align 1
  br i1 %53, label %then39, label %else40

then39:                                           ; preds = %else38
  store i1 %50, i1* %54, align 1
  br label %ifcont41

else40:                                           ; preds = %else38
  store i1 %52, i1* %54, align 1
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %55 = load i1, i1* %54, align 1
  br i1 %55, label %then42, label %else43

then42:                                           ; preds = %ifcont41
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0))
  br label %ifcont65

else43:                                           ; preds = %ifcont41
  %56 = load i32, i32* %marks, align 4
  %57 = icmp sle i32 71, %56
  %58 = load i32, i32* %marks, align 4
  %59 = icmp sle i32 %58, 80
  %60 = icmp eq i1 %57, false
  %61 = alloca i1, align 1
  br i1 %60, label %then44, label %else45

then44:                                           ; preds = %else43
  store i1 %57, i1* %61, align 1
  br label %ifcont46

else45:                                           ; preds = %else43
  store i1 %59, i1* %61, align 1
  br label %ifcont46

ifcont46:                                         ; preds = %else45, %then44
  %62 = load i1, i1* %61, align 1
  br i1 %62, label %then47, label %else48

then47:                                           ; preds = %ifcont46
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0))
  br label %ifcont64

else48:                                           ; preds = %ifcont46
  %63 = load i32, i32* %marks, align 4
  %64 = icmp sle i32 61, %63
  %65 = load i32, i32* %marks, align 4
  %66 = icmp sle i32 %65, 70
  %67 = icmp eq i1 %64, false
  %68 = alloca i1, align 1
  br i1 %67, label %then49, label %else50

then49:                                           ; preds = %else48
  store i1 %64, i1* %68, align 1
  br label %ifcont51

else50:                                           ; preds = %else48
  store i1 %66, i1* %68, align 1
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %69 = load i1, i1* %68, align 1
  br i1 %69, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @48, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  br label %ifcont63

else53:                                           ; preds = %ifcont51
  %70 = load i32, i32* %marks, align 4
  %71 = icmp sle i32 41, %70
  %72 = load i32, i32* %marks, align 4
  %73 = icmp sle i32 %72, 60
  %74 = icmp eq i1 %71, false
  %75 = alloca i1, align 1
  br i1 %74, label %then54, label %else55

then54:                                           ; preds = %else53
  store i1 %71, i1* %75, align 1
  br label %ifcont56

else55:                                           ; preds = %else53
  store i1 %73, i1* %75, align 1
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  %76 = load i1, i1* %75, align 1
  br i1 %76, label %then57, label %else58

then57:                                           ; preds = %ifcont56
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @50, i32 0, i32 0))
  br label %ifcont62

else58:                                           ; preds = %ifcont56
  %77 = load i32, i32* %marks, align 4
  %78 = icmp sle i32 %77, 40
  br i1 %78, label %then59, label %else60

then59:                                           ; preds = %else58
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i32 0, i32 0))
  br label %ifcont61

else60:                                           ; preds = %else58
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0))
  br label %ifcont61

ifcont61:                                         ; preds = %else60, %then59
  br label %ifcont62

ifcont62:                                         ; preds = %ifcont61, %then57
  br label %ifcont63

ifcont63:                                         ; preds = %ifcont62, %then52
  br label %ifcont64

ifcont64:                                         ; preds = %ifcont63, %then47
  br label %ifcont65

ifcont65:                                         ; preds = %ifcont64, %then42
  br label %ifcont66

ifcont66:                                         ; preds = %ifcont65, %then37
  %79 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @61, i32 0, i32 0), i32 %79, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @62, i32 0, i32 0))
  %80 = load i32, i32* %marks, align 4
  %81 = icmp sle i32 91, %80
  %82 = load i32, i32* %marks, align 4
  %83 = icmp sle i32 %82, 100
  %84 = icmp eq i1 %81, false
  %85 = alloca i1, align 1
  br i1 %84, label %then67, label %else68

then67:                                           ; preds = %ifcont66
  store i1 %81, i1* %85, align 1
  br label %ifcont69

else68:                                           ; preds = %ifcont66
  store i1 %83, i1* %85, align 1
  br label %ifcont69

ifcont69:                                         ; preds = %else68, %then67
  %86 = load i1, i1* %85, align 1
  br i1 %86, label %then70, label %else71

then70:                                           ; preds = %ifcont69
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @68, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @66, i32 0, i32 0))
  br label %ifcont99

else71:                                           ; preds = %ifcont69
  %87 = load i32, i32* %marks, align 4
  %88 = icmp sle i32 81, %87
  %89 = load i32, i32* %marks, align 4
  %90 = icmp sle i32 %89, 90
  %91 = icmp eq i1 %88, false
  %92 = alloca i1, align 1
  br i1 %91, label %then72, label %else73

then72:                                           ; preds = %else71
  store i1 %88, i1* %92, align 1
  br label %ifcont74

else73:                                           ; preds = %else71
  store i1 %90, i1* %92, align 1
  br label %ifcont74

ifcont74:                                         ; preds = %else73, %then72
  %93 = load i1, i1* %92, align 1
  br i1 %93, label %then75, label %else76

then75:                                           ; preds = %ifcont74
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @70, i32 0, i32 0))
  br label %ifcont98

else76:                                           ; preds = %ifcont74
  %94 = load i32, i32* %marks, align 4
  %95 = icmp sle i32 71, %94
  %96 = load i32, i32* %marks, align 4
  %97 = icmp sle i32 %96, 80
  %98 = icmp eq i1 %95, false
  %99 = alloca i1, align 1
  br i1 %98, label %then77, label %else78

then77:                                           ; preds = %else76
  store i1 %95, i1* %99, align 1
  br label %ifcont79

else78:                                           ; preds = %else76
  store i1 %97, i1* %99, align 1
  br label %ifcont79

ifcont79:                                         ; preds = %else78, %then77
  %100 = load i1, i1* %99, align 1
  br i1 %100, label %then80, label %else81

then80:                                           ; preds = %ifcont79
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0))
  br label %ifcont97

else81:                                           ; preds = %ifcont79
  %101 = load i32, i32* %marks, align 4
  %102 = icmp sle i32 61, %101
  %103 = load i32, i32* %marks, align 4
  %104 = icmp sle i32 %103, 70
  %105 = icmp eq i1 %102, false
  %106 = alloca i1, align 1
  br i1 %105, label %then82, label %else83

then82:                                           ; preds = %else81
  store i1 %102, i1* %106, align 1
  br label %ifcont84

else83:                                           ; preds = %else81
  store i1 %104, i1* %106, align 1
  br label %ifcont84

ifcont84:                                         ; preds = %else83, %then82
  %107 = load i1, i1* %106, align 1
  br i1 %107, label %then85, label %else86

then85:                                           ; preds = %ifcont84
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @78, i32 0, i32 0))
  br label %ifcont96

else86:                                           ; preds = %ifcont84
  %108 = load i32, i32* %marks, align 4
  %109 = icmp sle i32 41, %108
  %110 = load i32, i32* %marks, align 4
  %111 = icmp sle i32 %110, 60
  %112 = icmp eq i1 %109, false
  %113 = alloca i1, align 1
  br i1 %112, label %then87, label %else88

then87:                                           ; preds = %else86
  store i1 %109, i1* %113, align 1
  br label %ifcont89

else88:                                           ; preds = %else86
  store i1 %111, i1* %113, align 1
  br label %ifcont89

ifcont89:                                         ; preds = %else88, %then87
  %114 = load i1, i1* %113, align 1
  br i1 %114, label %then90, label %else91

then90:                                           ; preds = %ifcont89
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @84, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @82, i32 0, i32 0))
  br label %ifcont95

else91:                                           ; preds = %ifcont89
  %115 = load i32, i32* %marks, align 4
  %116 = icmp sle i32 %115, 40
  br i1 %116, label %then92, label %else93

then92:                                           ; preds = %else91
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @88, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @86, i32 0, i32 0))
  br label %ifcont94

else93:                                           ; preds = %else91
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @92, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @90, i32 0, i32 0))
  br label %ifcont94

ifcont94:                                         ; preds = %else93, %then92
  br label %ifcont95

ifcont95:                                         ; preds = %ifcont94, %then90
  br label %ifcont96

ifcont96:                                         ; preds = %ifcont95, %then85
  br label %ifcont97

ifcont97:                                         ; preds = %ifcont96, %then80
  br label %ifcont98

ifcont98:                                         ; preds = %ifcont97, %then75
  br label %ifcont99

ifcont99:                                         ; preds = %ifcont98, %then70
  %117 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @96, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @93, i32 0, i32 0), i32 %117, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @94, i32 0, i32 0))
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_printf(i8*, ...)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
