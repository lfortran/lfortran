; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data = private constant [11 x i8] c"Excellent!\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.1 = private constant [11 x i8] c"Very good!\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.1, i32 0, i32 0), i64 10 }>
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.3 = private constant [11 x i8] c"Well done!\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.5 = private constant [9 x i8] c"Not bad!\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([9 x i8], [9 x i8]* @string_const_data.5, i32 0, i32 0), i64 8 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.7 = private constant [12 x i8] c"You passed!\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([12 x i8], [12 x i8]* @string_const_data.7, i32 0, i32 0), i64 11 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.9 = private constant [18 x i8] c"Better try again!\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([18 x i8], [18 x i8]* @string_const_data.9, i32 0, i32 0), i64 17 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.11 = private constant [14 x i8] c"Invalid marks\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([14 x i8], [14 x i8]* @string_const_data.11, i32 0, i32 0), i64 13 }>
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [13 x i8] c"S-DESC-15,I4\00", align 1
@string_const_data.13 = private constant [16 x i8] c"Your marks are \00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([16 x i8], [16 x i8]* @string_const_data.13, i32 0, i32 0), i64 15 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@16 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.19 = private constant [11 x i8] c"Excellent!\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@18 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.21 = private constant [11 x i8] c"Very good!\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.21, i32 0, i32 0), i64 10 }>
@20 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.23 = private constant [11 x i8] c"Well done!\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@22 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@23 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.25 = private constant [9 x i8] c"Not bad!\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([9 x i8], [9 x i8]* @string_const_data.25, i32 0, i32 0), i64 8 }>
@24 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.27 = private constant [12 x i8] c"You passed!\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([12 x i8], [12 x i8]* @string_const_data.27, i32 0, i32 0), i64 11 }>
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.29 = private constant [18 x i8] c"Better try again!\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([18 x i8], [18 x i8]* @string_const_data.29, i32 0, i32 0), i64 17 }>
@28 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.31 = private constant [14 x i8] c"Invalid marks\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([14 x i8], [14 x i8]* @string_const_data.31, i32 0, i32 0), i64 13 }>
@30 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@31 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.33 = private unnamed_addr constant [13 x i8] c"S-DESC-15,I4\00", align 1
@string_const_data.34 = private constant [16 x i8] c"Your marks are \00"
@string_const.35 = private global %string_descriptor <{ i8* getelementptr inbounds ([16 x i8], [16 x i8]* @string_const_data.34, i32 0, i32 0), i64 15 }>
@32 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.36 = private constant [11 x i8] c"Excellent!\00"
@string_const.37 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.36, i32 0, i32 0), i64 10 }>
@34 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.38 = private constant [11 x i8] c"Very good!\00"
@string_const.39 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.38, i32 0, i32 0), i64 10 }>
@36 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.40 = private constant [11 x i8] c"Well done!\00"
@string_const.41 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.40, i32 0, i32 0), i64 10 }>
@38 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@39 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.42 = private constant [9 x i8] c"Not bad!\00"
@string_const.43 = private global %string_descriptor <{ i8* getelementptr inbounds ([9 x i8], [9 x i8]* @string_const_data.42, i32 0, i32 0), i64 8 }>
@40 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@41 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.44 = private constant [12 x i8] c"You passed!\00"
@string_const.45 = private global %string_descriptor <{ i8* getelementptr inbounds ([12 x i8], [12 x i8]* @string_const_data.44, i32 0, i32 0), i64 11 }>
@42 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.46 = private constant [18 x i8] c"Better try again!\00"
@string_const.47 = private global %string_descriptor <{ i8* getelementptr inbounds ([18 x i8], [18 x i8]* @string_const_data.46, i32 0, i32 0), i64 17 }>
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@45 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.48 = private constant [14 x i8] c"Invalid marks\00"
@string_const.49 = private global %string_descriptor <{ i8* getelementptr inbounds ([14 x i8], [14 x i8]* @string_const_data.48, i32 0, i32 0), i64 13 }>
@46 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@47 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.50 = private unnamed_addr constant [13 x i8] c"S-DESC-15,I4\00", align 1
@string_const_data.51 = private constant [16 x i8] c"Your marks are \00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([16 x i8], [16 x i8]* @string_const_data.51, i32 0, i32 0), i64 15 }>
@48 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %marks = alloca i32, align 4
  %out = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %marks1 = alloca i32, align 4
  %out2 = alloca i32, align 4
  store i32 81, i32* %marks1, align 4
  %2 = load i32, i32* %marks1, align 4
  %3 = icmp sle i32 91, %2
  %4 = load i32, i32* %marks1, align 4
  %5 = icmp sle i32 %4, 100
  %6 = icmp eq i1 %3, false
  %7 = select i1 %6, i1 %3, i1 %5
  br i1 %7, label %then, label %else

then:                                             ; preds = %.entry
  store i32 0, i32* %out2, align 4
  %8 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %8, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i64 1)
  br label %ifcont17

else:                                             ; preds = %.entry
  %9 = load i32, i32* %marks1, align 4
  %10 = icmp sle i32 81, %9
  %11 = load i32, i32* %marks1, align 4
  %12 = icmp sle i32 %11, 90
  %13 = icmp eq i1 %10, false
  %14 = select i1 %13, i1 %10, i1 %12
  br i1 %14, label %then3, label %else4

then3:                                            ; preds = %else
  store i32 1, i32* %out2, align 4
  %15 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %15, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i64 1)
  br label %ifcont16

else4:                                            ; preds = %else
  %16 = load i32, i32* %marks1, align 4
  %17 = icmp sle i32 71, %16
  %18 = load i32, i32* %marks1, align 4
  %19 = icmp sle i32 %18, 80
  %20 = icmp eq i1 %17, false
  %21 = select i1 %20, i1 %17, i1 %19
  br i1 %21, label %then5, label %else6

then5:                                            ; preds = %else4
  store i32 2, i32* %out2, align 4
  %22 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %22, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i64 1)
  br label %ifcont15

else6:                                            ; preds = %else4
  %23 = load i32, i32* %marks1, align 4
  %24 = icmp sle i32 61, %23
  %25 = load i32, i32* %marks1, align 4
  %26 = icmp sle i32 %25, 70
  %27 = icmp eq i1 %24, false
  %28 = select i1 %27, i1 %24, i1 %26
  br i1 %28, label %then7, label %else8

then7:                                            ; preds = %else6
  store i32 3, i32* %out2, align 4
  %29 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %29, i64 8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i64 1)
  br label %ifcont14

else8:                                            ; preds = %else6
  %30 = load i32, i32* %marks1, align 4
  %31 = icmp sle i32 41, %30
  %32 = load i32, i32* %marks1, align 4
  %33 = icmp sle i32 %32, 60
  %34 = icmp eq i1 %31, false
  %35 = select i1 %34, i1 %31, i1 %33
  br i1 %35, label %then9, label %else10

then9:                                            ; preds = %else8
  store i32 4, i32* %out2, align 4
  %36 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %36, i64 11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i64 1)
  br label %ifcont13

else10:                                           ; preds = %else8
  %37 = load i32, i32* %marks1, align 4
  %38 = icmp sle i32 %37, 40
  br i1 %38, label %then11, label %else12

then11:                                           ; preds = %else10
  store i32 5, i32* %out2, align 4
  %39 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %39, i64 17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i64 1)
  br label %ifcont

else12:                                           ; preds = %else10
  store i32 6, i32* %out2, align 4
  %40 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %40, i64 13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i64 1)
  br label %ifcont

ifcont:                                           ; preds = %else12, %then11
  br label %ifcont13

ifcont13:                                         ; preds = %ifcont, %then9
  br label %ifcont14

ifcont14:                                         ; preds = %ifcont13, %then7
  br label %ifcont15

ifcont15:                                         ; preds = %ifcont14, %then5
  br label %ifcont16

ifcont16:                                         ; preds = %ifcont15, %then3
  br label %ifcont17

ifcont17:                                         ; preds = %ifcont16, %then
  %41 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.14, i32* %marks1)
  %42 = call i64 @_lfortran_str_len(i8* %41)
  %43 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %43 to %string_descriptor*
  %44 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %41, i8** %44, align 8
  %45 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %42, i64* %45, align 4
  %46 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %49 = load i64, i64* %48, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %47, i64 %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i64 1)
  %50 = load i32, i32* %out2, align 4
  %51 = icmp ne i32 %50, 1
  br i1 %51, label %then18, label %else19

then18:                                           ; preds = %ifcont17
  %52 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %53 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i32 0, i32 0), i8* %52, i8* %53)
  call void @exit(i32 1)
  br label %ifcont20

else19:                                           ; preds = %ifcont17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  %54 = load i32, i32* %marks1, align 4
  %55 = icmp sle i32 91, %54
  %56 = load i32, i32* %marks1, align 4
  %57 = icmp sle i32 %56, 100
  %58 = icmp eq i1 %55, false
  %59 = select i1 %58, i1 %55, i1 %57
  br i1 %59, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  %60 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i8* %60, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0), i64 1)
  br label %ifcont38

else22:                                           ; preds = %ifcont20
  %61 = load i32, i32* %marks1, align 4
  %62 = icmp sle i32 81, %61
  %63 = load i32, i32* %marks1, align 4
  %64 = icmp sle i32 %63, 90
  %65 = icmp eq i1 %62, false
  %66 = select i1 %65, i1 %62, i1 %64
  br i1 %66, label %then23, label %else24

then23:                                           ; preds = %else22
  %67 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i32 0, i32 0), i8* %67, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0), i64 1)
  br label %ifcont37

else24:                                           ; preds = %else22
  %68 = load i32, i32* %marks1, align 4
  %69 = icmp sle i32 71, %68
  %70 = load i32, i32* %marks1, align 4
  %71 = icmp sle i32 %70, 80
  %72 = icmp eq i1 %69, false
  %73 = select i1 %72, i1 %69, i1 %71
  br i1 %73, label %then25, label %else26

then25:                                           ; preds = %else24
  %74 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @22, i32 0, i32 0), i8* %74, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0), i64 1)
  br label %ifcont36

else26:                                           ; preds = %else24
  %75 = load i32, i32* %marks1, align 4
  %76 = icmp sle i32 61, %75
  %77 = load i32, i32* %marks1, align 4
  %78 = icmp sle i32 %77, 70
  %79 = icmp eq i1 %76, false
  %80 = select i1 %79, i1 %76, i1 %78
  br i1 %80, label %then27, label %else28

then27:                                           ; preds = %else26
  %81 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @24, i32 0, i32 0), i8* %81, i64 8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @23, i32 0, i32 0), i64 1)
  br label %ifcont35

else28:                                           ; preds = %else26
  %82 = load i32, i32* %marks1, align 4
  %83 = icmp sle i32 41, %82
  %84 = load i32, i32* %marks1, align 4
  %85 = icmp sle i32 %84, 60
  %86 = icmp eq i1 %83, false
  %87 = select i1 %86, i1 %83, i1 %85
  br i1 %87, label %then29, label %else30

then29:                                           ; preds = %else28
  %88 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* %88, i64 11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0), i64 1)
  br label %ifcont34

else30:                                           ; preds = %else28
  %89 = load i32, i32* %marks1, align 4
  %90 = icmp sle i32 %89, 40
  br i1 %90, label %then31, label %else32

then31:                                           ; preds = %else30
  %91 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0), i8* %91, i64 17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @27, i32 0, i32 0), i64 1)
  br label %ifcont33

else32:                                           ; preds = %else30
  %92 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @30, i32 0, i32 0), i8* %92, i64 13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0), i64 1)
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  br label %ifcont34

ifcont34:                                         ; preds = %ifcont33, %then29
  br label %ifcont35

ifcont35:                                         ; preds = %ifcont34, %then27
  br label %ifcont36

ifcont36:                                         ; preds = %ifcont35, %then25
  br label %ifcont37

ifcont37:                                         ; preds = %ifcont36, %then23
  br label %ifcont38

ifcont38:                                         ; preds = %ifcont37, %then21
  %93 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @serialization_info.33, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.35, i32* %marks1)
  %94 = call i64 @_lfortran_str_len(i8* %93)
  %95 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc39 = bitcast i8* %95 to %string_descriptor*
  %96 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc39, i32 0, i32 0
  store i8* %93, i8** %96, align 8
  %97 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc39, i32 0, i32 1
  store i64 %94, i64* %97, align 4
  %98 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc39, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc39, i32 0, i32 1
  %101 = load i64, i64* %100, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i32 0, i32 0), i8* %99, i64 %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0), i64 1)
  %102 = load i32, i32* %marks1, align 4
  %103 = icmp sle i32 91, %102
  %104 = load i32, i32* %marks1, align 4
  %105 = icmp sle i32 %104, 100
  %106 = icmp eq i1 %103, false
  %107 = select i1 %106, i1 %103, i1 %105
  br i1 %107, label %then40, label %else41

then40:                                           ; preds = %ifcont38
  %108 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.37, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @34, i32 0, i32 0), i8* %108, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @33, i32 0, i32 0), i64 1)
  br label %ifcont57

else41:                                           ; preds = %ifcont38
  %109 = load i32, i32* %marks1, align 4
  %110 = icmp sle i32 81, %109
  %111 = load i32, i32* %marks1, align 4
  %112 = icmp sle i32 %111, 90
  %113 = icmp eq i1 %110, false
  %114 = select i1 %113, i1 %110, i1 %112
  br i1 %114, label %then42, label %else43

then42:                                           ; preds = %else41
  %115 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.39, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @36, i32 0, i32 0), i8* %115, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), i64 1)
  br label %ifcont56

else43:                                           ; preds = %else41
  %116 = load i32, i32* %marks1, align 4
  %117 = icmp sle i32 71, %116
  %118 = load i32, i32* %marks1, align 4
  %119 = icmp sle i32 %118, 80
  %120 = icmp eq i1 %117, false
  %121 = select i1 %120, i1 %117, i1 %119
  br i1 %121, label %then44, label %else45

then44:                                           ; preds = %else43
  %122 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.41, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i8* %122, i64 10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0), i64 1)
  br label %ifcont55

else45:                                           ; preds = %else43
  %123 = load i32, i32* %marks1, align 4
  %124 = icmp sle i32 61, %123
  %125 = load i32, i32* %marks1, align 4
  %126 = icmp sle i32 %125, 70
  %127 = icmp eq i1 %124, false
  %128 = select i1 %127, i1 %124, i1 %126
  br i1 %128, label %then46, label %else47

then46:                                           ; preds = %else45
  %129 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.43, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i32 0, i32 0), i8* %129, i64 8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @39, i32 0, i32 0), i64 1)
  br label %ifcont54

else47:                                           ; preds = %else45
  %130 = load i32, i32* %marks1, align 4
  %131 = icmp sle i32 41, %130
  %132 = load i32, i32* %marks1, align 4
  %133 = icmp sle i32 %132, 60
  %134 = icmp eq i1 %131, false
  %135 = select i1 %134, i1 %131, i1 %133
  br i1 %135, label %then48, label %else49

then48:                                           ; preds = %else47
  %136 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.45, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @42, i32 0, i32 0), i8* %136, i64 11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @41, i32 0, i32 0), i64 1)
  br label %ifcont53

else49:                                           ; preds = %else47
  %137 = load i32, i32* %marks1, align 4
  %138 = icmp sle i32 %137, 40
  br i1 %138, label %then50, label %else51

then50:                                           ; preds = %else49
  %139 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.47, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* %139, i64 17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0), i64 1)
  br label %ifcont52

else51:                                           ; preds = %else49
  %140 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.49, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @46, i32 0, i32 0), i8* %140, i64 13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @45, i32 0, i32 0), i64 1)
  br label %ifcont52

ifcont52:                                         ; preds = %else51, %then50
  br label %ifcont53

ifcont53:                                         ; preds = %ifcont52, %then48
  br label %ifcont54

ifcont54:                                         ; preds = %ifcont53, %then46
  br label %ifcont55

ifcont55:                                         ; preds = %ifcont54, %then44
  br label %ifcont56

ifcont56:                                         ; preds = %ifcont55, %then42
  br label %ifcont57

ifcont57:                                         ; preds = %ifcont56, %then40
  %141 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @serialization_info.50, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.52, i32* %marks1)
  %142 = call i64 @_lfortran_str_len(i8* %141)
  %143 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc58 = bitcast i8* %143 to %string_descriptor*
  %144 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 0
  store i8* %141, i8** %144, align 8
  %145 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 1
  store i64 %142, i64* %145, align 4
  %146 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 1
  %149 = load i64, i64* %148, align 4
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @48, i32 0, i32 0), i8* %147, i64 %149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @47, i32 0, i32 0), i64 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont57
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lfortran_printf(i8*, i8*, i64, i8*, i64)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare i8* @_lfortran_malloc(i64)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
