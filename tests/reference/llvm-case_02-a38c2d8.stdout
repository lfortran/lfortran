; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@18 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c" \00", align 1
@21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@22 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@30 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@31 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1
@32 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@33 = private unnamed_addr constant [2 x i8] c" \00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@36 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@37 = private unnamed_addr constant [2 x i8] c" \00", align 1
@38 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@39 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@40 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@42 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@43 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@45 = private unnamed_addr constant [2 x i8] c" \00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@47 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@48 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@49 = private unnamed_addr constant [2 x i8] c" \00", align 1
@50 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@51 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@52 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@53 = private unnamed_addr constant [2 x i8] c" \00", align 1
@54 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@55 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@56 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@57 = private unnamed_addr constant [2 x i8] c" \00", align 1
@58 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@59 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@60 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@61 = private unnamed_addr constant [2 x i8] c" \00", align 1
@62 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@63 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@64 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1
@65 = private unnamed_addr constant [2 x i8] c" \00", align 1
@66 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@67 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@68 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@70 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@71 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@72 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@73 = private unnamed_addr constant [2 x i8] c" \00", align 1
@74 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@75 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@76 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@77 = private unnamed_addr constant [2 x i8] c" \00", align 1
@78 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@79 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@80 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@81 = private unnamed_addr constant [2 x i8] c" \00", align 1
@82 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@83 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@84 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@85 = private unnamed_addr constant [2 x i8] c" \00", align 1
@86 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@87 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@88 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@89 = private unnamed_addr constant [2 x i8] c" \00", align 1
@90 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@91 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@92 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@93 = private unnamed_addr constant [2 x i8] c" \00", align 1
@94 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@95 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@96 = private unnamed_addr constant [9 x i8] c"%s%s%d%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %marks = alloca i32, align 4
  %out = alloca i32, align 4
  store i32 81, i32* %marks, align 4
  %2 = load i32, i32* %marks, align 4
  %3 = icmp sle i32 91, %2
  %4 = load i32, i32* %marks, align 4
  %5 = icmp sle i32 %4, 100
  %6 = mul i1 %3, %5
  br i1 %6, label %then, label %else

then:                                             ; preds = %.entry
  store i32 0, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %ifcont15

else:                                             ; preds = %.entry
  %7 = load i32, i32* %marks, align 4
  %8 = icmp sle i32 81, %7
  %9 = load i32, i32* %marks, align 4
  %10 = icmp sle i32 %9, 90
  %11 = mul i1 %8, %10
  br i1 %11, label %then1, label %else2

then1:                                            ; preds = %else
  store i32 1, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  br label %ifcont14

else2:                                            ; preds = %else
  %12 = load i32, i32* %marks, align 4
  %13 = icmp sle i32 71, %12
  %14 = load i32, i32* %marks, align 4
  %15 = icmp sle i32 %14, 80
  %16 = mul i1 %13, %15
  br i1 %16, label %then3, label %else4

then3:                                            ; preds = %else2
  store i32 2, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %ifcont13

else4:                                            ; preds = %else2
  %17 = load i32, i32* %marks, align 4
  %18 = icmp sle i32 61, %17
  %19 = load i32, i32* %marks, align 4
  %20 = icmp sle i32 %19, 70
  %21 = mul i1 %18, %20
  br i1 %21, label %then5, label %else6

then5:                                            ; preds = %else4
  store i32 3, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %ifcont12

else6:                                            ; preds = %else4
  %22 = load i32, i32* %marks, align 4
  %23 = icmp sle i32 41, %22
  %24 = load i32, i32* %marks, align 4
  %25 = icmp sle i32 %24, 60
  %26 = mul i1 %23, %25
  br i1 %26, label %then7, label %else8

then7:                                            ; preds = %else6
  store i32 4, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0))
  br label %ifcont11

else8:                                            ; preds = %else6
  %27 = load i32, i32* %marks, align 4
  %28 = icmp sle i32 %27, 40
  br i1 %28, label %then9, label %else10

then9:                                            ; preds = %else8
  store i32 5, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0))
  br label %ifcont

else10:                                           ; preds = %else8
  store i32 6, i32* %out, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  br label %ifcont

ifcont:                                           ; preds = %else10, %then9
  br label %ifcont11

ifcont11:                                         ; preds = %ifcont, %then7
  br label %ifcont12

ifcont12:                                         ; preds = %ifcont11, %then5
  br label %ifcont13

ifcont13:                                         ; preds = %ifcont12, %then3
  br label %ifcont14

ifcont14:                                         ; preds = %ifcont13, %then1
  br label %ifcont15

ifcont15:                                         ; preds = %ifcont14, %then
  %29 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0), i32 %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0))
  %30 = load i32, i32* %out, align 4
  %31 = icmp ne i32 %30, 1
  br i1 %31, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @32, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %32 = load i32, i32* %marks, align 4
  %33 = icmp sle i32 91, %32
  %34 = load i32, i32* %marks, align 4
  %35 = icmp sle i32 %34, 100
  %36 = mul i1 %33, %35
  br i1 %36, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  br label %ifcont36

else20:                                           ; preds = %ifcont18
  %37 = load i32, i32* %marks, align 4
  %38 = icmp sle i32 81, %37
  %39 = load i32, i32* %marks, align 4
  %40 = icmp sle i32 %39, 90
  %41 = mul i1 %38, %40
  br i1 %41, label %then21, label %else22

then21:                                           ; preds = %else20
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0))
  br label %ifcont35

else22:                                           ; preds = %else20
  %42 = load i32, i32* %marks, align 4
  %43 = icmp sle i32 71, %42
  %44 = load i32, i32* %marks, align 4
  %45 = icmp sle i32 %44, 80
  %46 = mul i1 %43, %45
  br i1 %46, label %then23, label %else24

then23:                                           ; preds = %else22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0))
  br label %ifcont34

else24:                                           ; preds = %else22
  %47 = load i32, i32* %marks, align 4
  %48 = icmp sle i32 61, %47
  %49 = load i32, i32* %marks, align 4
  %50 = icmp sle i32 %49, 70
  %51 = mul i1 %48, %50
  br i1 %51, label %then25, label %else26

then25:                                           ; preds = %else24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @48, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  br label %ifcont33

else26:                                           ; preds = %else24
  %52 = load i32, i32* %marks, align 4
  %53 = icmp sle i32 41, %52
  %54 = load i32, i32* %marks, align 4
  %55 = icmp sle i32 %54, 60
  %56 = mul i1 %53, %55
  br i1 %56, label %then27, label %else28

then27:                                           ; preds = %else26
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @50, i32 0, i32 0))
  br label %ifcont32

else28:                                           ; preds = %else26
  %57 = load i32, i32* %marks, align 4
  %58 = icmp sle i32 %57, 40
  br i1 %58, label %then29, label %else30

then29:                                           ; preds = %else28
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i32 0, i32 0))
  br label %ifcont31

else30:                                           ; preds = %else28
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0))
  br label %ifcont31

ifcont31:                                         ; preds = %else30, %then29
  br label %ifcont32

ifcont32:                                         ; preds = %ifcont31, %then27
  br label %ifcont33

ifcont33:                                         ; preds = %ifcont32, %then25
  br label %ifcont34

ifcont34:                                         ; preds = %ifcont33, %then23
  br label %ifcont35

ifcont35:                                         ; preds = %ifcont34, %then21
  br label %ifcont36

ifcont36:                                         ; preds = %ifcont35, %then19
  %59 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @61, i32 0, i32 0), i32 %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @62, i32 0, i32 0))
  %60 = load i32, i32* %marks, align 4
  %61 = icmp sle i32 91, %60
  %62 = load i32, i32* %marks, align 4
  %63 = icmp sle i32 %62, 100
  %64 = mul i1 %61, %63
  br i1 %64, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @68, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @66, i32 0, i32 0))
  br label %ifcont54

else38:                                           ; preds = %ifcont36
  %65 = load i32, i32* %marks, align 4
  %66 = icmp sle i32 81, %65
  %67 = load i32, i32* %marks, align 4
  %68 = icmp sle i32 %67, 90
  %69 = mul i1 %66, %68
  br i1 %69, label %then39, label %else40

then39:                                           ; preds = %else38
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @70, i32 0, i32 0))
  br label %ifcont53

else40:                                           ; preds = %else38
  %70 = load i32, i32* %marks, align 4
  %71 = icmp sle i32 71, %70
  %72 = load i32, i32* %marks, align 4
  %73 = icmp sle i32 %72, 80
  %74 = mul i1 %71, %73
  br i1 %74, label %then41, label %else42

then41:                                           ; preds = %else40
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0))
  br label %ifcont52

else42:                                           ; preds = %else40
  %75 = load i32, i32* %marks, align 4
  %76 = icmp sle i32 61, %75
  %77 = load i32, i32* %marks, align 4
  %78 = icmp sle i32 %77, 70
  %79 = mul i1 %76, %78
  br i1 %79, label %then43, label %else44

then43:                                           ; preds = %else42
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @78, i32 0, i32 0))
  br label %ifcont51

else44:                                           ; preds = %else42
  %80 = load i32, i32* %marks, align 4
  %81 = icmp sle i32 41, %80
  %82 = load i32, i32* %marks, align 4
  %83 = icmp sle i32 %82, 60
  %84 = mul i1 %81, %83
  br i1 %84, label %then45, label %else46

then45:                                           ; preds = %else44
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @84, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @82, i32 0, i32 0))
  br label %ifcont50

else46:                                           ; preds = %else44
  %85 = load i32, i32* %marks, align 4
  %86 = icmp sle i32 %85, 40
  br i1 %86, label %then47, label %else48

then47:                                           ; preds = %else46
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @88, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @86, i32 0, i32 0))
  br label %ifcont49

else48:                                           ; preds = %else46
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @92, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @90, i32 0, i32 0))
  br label %ifcont49

ifcont49:                                         ; preds = %else48, %then47
  br label %ifcont50

ifcont50:                                         ; preds = %ifcont49, %then45
  br label %ifcont51

ifcont51:                                         ; preds = %ifcont50, %then43
  br label %ifcont52

ifcont52:                                         ; preds = %ifcont51, %then41
  br label %ifcont53

ifcont53:                                         ; preds = %ifcont52, %then39
  br label %ifcont54

ifcont54:                                         ; preds = %ifcont53, %then37
  %87 = load i32, i32* %marks, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @96, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @93, i32 0, i32 0), i32 %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @94, i32 0, i32 0))
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_printf(i8*, ...)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
