; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c" \00", align 1
@21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@22 = private unnamed_addr constant [6 x i8] c"2,3,4\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main() {
.entry:
  %i = alloca i32, align 4
  store i32 4, i32* %i, align 4
  %0 = load i32, i32* %i, align 4
  %1 = icmp eq i32 %0, 1
  br i1 %1, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %ifcont9

else:                                             ; preds = %.entry
  %2 = load i32, i32* %i, align 4
  %3 = icmp eq i32 %2, 2
  br i1 %3, label %then1, label %else2

then1:                                            ; preds = %else
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  br label %ifcont8

else2:                                            ; preds = %else
  %4 = load i32, i32* %i, align 4
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %then3, label %else4

then3:                                            ; preds = %else2
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %ifcont7

else4:                                            ; preds = %else2
  %6 = load i32, i32* %i, align 4
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %then5, label %else6

then5:                                            ; preds = %else4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %ifcont

else6:                                            ; preds = %else4
  br label %ifcont

ifcont:                                           ; preds = %else6, %then5
  br label %ifcont7

ifcont7:                                          ; preds = %ifcont, %then3
  br label %ifcont8

ifcont8:                                          ; preds = %ifcont7, %then1
  br label %ifcont9

ifcont9:                                          ; preds = %ifcont8, %then
  %8 = load i32, i32* %i, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0))
  br label %ifcont15

else11:                                           ; preds = %ifcont9
  %10 = load i32, i32* %i, align 4
  %11 = icmp eq i32 %10, 2
  %12 = load i32, i32* %i, align 4
  %13 = icmp eq i32 %12, 3
  %14 = add i1 %11, %13
  %15 = load i32, i32* %i, align 4
  %16 = icmp eq i32 %15, 4
  %17 = add i1 %14, %16
  br i1 %17, label %then12, label %else13

then12:                                           ; preds = %else11
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0))
  br label %ifcont14

else13:                                           ; preds = %else11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  br label %ifcont15

ifcont15:                                         ; preds = %ifcont14, %then10
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
