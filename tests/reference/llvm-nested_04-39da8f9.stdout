; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y = global i32 0
@__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_yy = global float 0.000000e+00
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data = private constant [4 x i8] c"b()\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([4 x i8], [4 x i8]* @string_const_data, i32 0, i32 0), i64 3 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @__module_nested_04_a_b(i32* %x) {
.entry:
  %call_arg_value = alloca i32, align 4
  %b = alloca i32, align 4
  %y = alloca i32, align 4
  %yy = alloca float, align 4
  store float 0x401A666660000000, float* %yy, align 4
  %0 = load i32, i32* %x, align 4
  store i32 %0, i32* %y, align 4
  %1 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %1, i32 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1)
  %2 = load i32, i32* %y, align 4
  store i32 %2, i32* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y, align 4
  %3 = load float, float* %yy, align 4
  store float %3, float* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_yy, align 4
  store i32 6, i32* %call_arg_value, align 4
  %4 = call i32 @b.__module_nested_04_a_c(i32* %call_arg_value)
  store i32 %4, i32* %b, align 4
  %5 = load i32, i32* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y, align 4
  store i32 %5, i32* %y, align 4
  %6 = load float, float* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_yy, align 4
  store float %6, float* %yy, align 4
  br label %return

return:                                           ; preds = %.entry
  %7 = load i32, i32* %b, align 4
  ret i32 %7
}

define i32 @b.__module_nested_04_a_c(i32* %z) {
.entry:
  %c = alloca i32, align 4
  %0 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, i32* %z)
  %1 = call i64 @_lfortran_str_len(i8* %0)
  %2 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %2 to %string_descriptor*
  %3 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %1, i64* %4, align 4
  %5 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %8 = load i64, i64* %7, align 4
  %9 = trunc i64 %8 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %6, i32 %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  %10 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i32 0, i32 0, i32* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_y)
  %11 = call i64 @_lfortran_str_len(i8* %10)
  %12 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc1 = bitcast i8* %12 to %string_descriptor*
  %13 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %10, i8** %13, align 8
  %14 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %11, i64* %14, align 4
  %15 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  %18 = load i64, i64* %17, align 4
  %19 = trunc i64 %18 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %16, i32 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  %20 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i32 0, i32 0, float* @__module___lcompilers_created__nested_context__b____lcompilers_created__nested_context__b_yy)
  %21 = call i64 @_lfortran_str_len(i8* %20)
  %22 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %22 to %string_descriptor*
  %23 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %20, i8** %23, align 8
  %24 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %21, i64* %24, align 4
  %25 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %26, i32 %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1)
  %30 = load i32, i32* %z, align 4
  store i32 %30, i32* %c, align 4
  br label %return

return:                                           ; preds = %.entry
  %31 = load i32, i32* %c, align 4
  ret i32 %31
}

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value = alloca i32, align 4
  %test = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %test1 = alloca i32, align 4
  store i32 5, i32* %call_arg_value, align 4
  %2 = call i32 @__module_nested_04_a_b(i32* %call_arg_value)
  store i32 %2, i32* %test1, align 4
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lpython_free_argv()
