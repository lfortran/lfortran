; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@"ERROR STOP" = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.5 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@25 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.6 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.7 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@31 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@32 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@33 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.8 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@35 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@36 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@37 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@38 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.9 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@39 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@42 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.10 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@43 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 10
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %j2, align 4
  %8 = load i32, i32* %i1, align 4
  %9 = add i32 %7, %8
  store i32 %9, i32* %j2, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %10 = load i32, i32* %j2, align 4
  %11 = icmp ne i32 %10, 55
  br i1 %11, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %12 = alloca i64, align 8
  %13 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i64* %12, i32 0, i32 0, i32* %j2)
  %14 = load i64, i64* %12, align 4
  %15 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %15 to %string_descriptor*
  %16 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %13, i8** %16, align 8
  %17 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %14, i64* %17, align 4
  %18 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %21 = load i64, i64* %20, align 4
  %22 = trunc i64 %21 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %19, i32 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 11, i32* %i1, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %ifcont
  %23 = load i32, i32* %i1, align 4
  %24 = add i32 %23, -1
  %25 = icmp sge i32 %24, 1
  br i1 %25, label %loop.body4, label %loop.end5

loop.body4:                                       ; preds = %loop.head3
  %26 = load i32, i32* %i1, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %i1, align 4
  %28 = load i32, i32* %j2, align 4
  %29 = load i32, i32* %i1, align 4
  %30 = add i32 %28, %29
  store i32 %30, i32* %j2, align 4
  br label %loop.head3

loop.end5:                                        ; preds = %loop.head3
  %31 = load i32, i32* %j2, align 4
  %32 = icmp ne i32 %31, 55
  br i1 %32, label %then6, label %else7

then6:                                            ; preds = %loop.end5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %loop.end5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %33 = alloca i64, align 8
  %34 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i64* %33, i32 0, i32 0, i32* %j2)
  %35 = load i64, i64* %33, align 4
  %36 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc9 = bitcast i8* %36 to %string_descriptor*
  %37 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 0
  store i8* %34, i8** %37, align 8
  %38 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 1
  store i64 %35, i64* %38, align 4
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 1
  %42 = load i64, i64* %41, align 4
  %43 = trunc i64 %42 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %40, i32 %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 -1, i32* %i1, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.body11, %ifcont8
  %44 = load i32, i32* %i1, align 4
  %45 = add i32 %44, 2
  %46 = icmp sle i32 %45, 9
  br i1 %46, label %loop.body11, label %loop.end12

loop.body11:                                      ; preds = %loop.head10
  %47 = load i32, i32* %i1, align 4
  %48 = add i32 %47, 2
  store i32 %48, i32* %i1, align 4
  %49 = load i32, i32* %j2, align 4
  %50 = load i32, i32* %i1, align 4
  %51 = add i32 %49, %50
  store i32 %51, i32* %j2, align 4
  br label %loop.head10

loop.end12:                                       ; preds = %loop.head10
  %52 = load i32, i32* %j2, align 4
  %53 = icmp ne i32 %52, 25
  br i1 %53, label %then13, label %else14

then13:                                           ; preds = %loop.end12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %loop.end12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %54 = alloca i64, align 8
  %55 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i64* %54, i32 0, i32 0, i32* %j2)
  %56 = load i64, i64* %54, align 4
  %57 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc16 = bitcast i8* %57 to %string_descriptor*
  %58 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 0
  store i8* %55, i8** %58, align 8
  %59 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 1
  store i64 %56, i64* %59, align 4
  %60 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 1
  %63 = load i64, i64* %62, align 4
  %64 = trunc i64 %63 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %61, i32 %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 11, i32* %i1, align 4
  br label %loop.head17

loop.head17:                                      ; preds = %loop.body18, %ifcont15
  %65 = load i32, i32* %i1, align 4
  %66 = add i32 %65, -2
  %67 = icmp sge i32 %66, 1
  br i1 %67, label %loop.body18, label %loop.end19

loop.body18:                                      ; preds = %loop.head17
  %68 = load i32, i32* %i1, align 4
  %69 = add i32 %68, -2
  store i32 %69, i32* %i1, align 4
  %70 = load i32, i32* %j2, align 4
  %71 = load i32, i32* %i1, align 4
  %72 = add i32 %70, %71
  store i32 %72, i32* %j2, align 4
  br label %loop.head17

loop.end19:                                       ; preds = %loop.head17
  %73 = load i32, i32* %j2, align 4
  %74 = icmp ne i32 %73, 25
  br i1 %74, label %then20, label %else21

then20:                                           ; preds = %loop.end19
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %loop.end19
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %75 = alloca i64, align 8
  %76 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i64* %75, i32 0, i32 0, i32* %j2)
  %77 = load i64, i64* %75, align 4
  %78 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc23 = bitcast i8* %78 to %string_descriptor*
  %79 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 0
  store i8* %76, i8** %79, align 8
  %80 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 1
  store i64 %77, i64* %80, align 4
  %81 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 1
  %84 = load i64, i64* %83, align 4
  %85 = trunc i64 %84 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %82, i32 %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 -1, i32* %i1, align 4
  br label %loop.head24

loop.head24:                                      ; preds = %loop.body25, %ifcont22
  %86 = load i32, i32* %i1, align 4
  %87 = add i32 %86, 2
  %88 = icmp sle i32 %87, 10
  br i1 %88, label %loop.body25, label %loop.end26

loop.body25:                                      ; preds = %loop.head24
  %89 = load i32, i32* %i1, align 4
  %90 = add i32 %89, 2
  store i32 %90, i32* %i1, align 4
  %91 = load i32, i32* %j2, align 4
  %92 = load i32, i32* %i1, align 4
  %93 = add i32 %91, %92
  store i32 %93, i32* %j2, align 4
  br label %loop.head24

loop.end26:                                       ; preds = %loop.head24
  %94 = load i32, i32* %j2, align 4
  %95 = icmp ne i32 %94, 25
  br i1 %95, label %then27, label %else28

then27:                                           ; preds = %loop.end26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %loop.end26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %96 = alloca i64, align 8
  %97 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.4, i32 0, i32 0), i64* %96, i32 0, i32 0, i32* %j2)
  %98 = load i64, i64* %96, align 4
  %99 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc30 = bitcast i8* %99 to %string_descriptor*
  %100 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 0
  store i8* %97, i8** %100, align 8
  %101 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 1
  store i64 %98, i64* %101, align 4
  %102 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 1
  %105 = load i64, i64* %104, align 4
  %106 = trunc i64 %105 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* %103, i32 %106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @18, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 -2, i32* %i1, align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.body32, %ifcont29
  %107 = load i32, i32* %i1, align 4
  %108 = add i32 %107, 3
  %109 = icmp sle i32 %108, 10
  br i1 %109, label %loop.body32, label %loop.end33

loop.body32:                                      ; preds = %loop.head31
  %110 = load i32, i32* %i1, align 4
  %111 = add i32 %110, 3
  store i32 %111, i32* %i1, align 4
  %112 = load i32, i32* %j2, align 4
  %113 = load i32, i32* %i1, align 4
  %114 = add i32 %112, %113
  store i32 %114, i32* %j2, align 4
  br label %loop.head31

loop.end33:                                       ; preds = %loop.head31
  %115 = load i32, i32* %j2, align 4
  %116 = icmp ne i32 %115, 22
  br i1 %116, label %then34, label %else35

then34:                                           ; preds = %loop.end33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @20, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.end33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %117 = alloca i64, align 8
  %118 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.5, i32 0, i32 0), i64* %117, i32 0, i32 0, i32* %j2)
  %119 = load i64, i64* %117, align 4
  %120 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc37 = bitcast i8* %120 to %string_descriptor*
  %121 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 0
  store i8* %118, i8** %121, align 8
  %122 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 1
  store i64 %119, i64* %122, align 4
  %123 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 1
  %126 = load i64, i64* %125, align 4
  %127 = trunc i64 %126 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* %124, i32 %127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 13, i32* %i1, align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.body39, %ifcont36
  %128 = load i32, i32* %i1, align 4
  %129 = add i32 %128, -3
  %130 = icmp sge i32 %129, 1
  br i1 %130, label %loop.body39, label %loop.end40

loop.body39:                                      ; preds = %loop.head38
  %131 = load i32, i32* %i1, align 4
  %132 = add i32 %131, -3
  store i32 %132, i32* %i1, align 4
  %133 = load i32, i32* %j2, align 4
  %134 = load i32, i32* %i1, align 4
  %135 = add i32 %133, %134
  store i32 %135, i32* %j2, align 4
  br label %loop.head38

loop.end40:                                       ; preds = %loop.head38
  %136 = load i32, i32* %j2, align 4
  %137 = icmp ne i32 %136, 22
  br i1 %137, label %then41, label %else42

then41:                                           ; preds = %loop.end40
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont43

else42:                                           ; preds = %loop.end40
  br label %ifcont43

ifcont43:                                         ; preds = %else42, %then41
  %138 = alloca i64, align 8
  %139 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.6, i32 0, i32 0), i64* %138, i32 0, i32 0, i32* %j2)
  %140 = load i64, i64* %138, align 4
  %141 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc44 = bitcast i8* %141 to %string_descriptor*
  %142 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 0
  store i8* %139, i8** %142, align 8
  %143 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 1
  store i64 %140, i64* %143, align 4
  %144 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 1
  %147 = load i64, i64* %146, align 4
  %148 = trunc i64 %147 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* %145, i32 %148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @26, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.body46, %ifcont43
  %149 = load i32, i32* %i1, align 4
  %150 = add i32 %149, 1
  %151 = icmp sle i32 %150, 1
  br i1 %151, label %loop.body46, label %loop.end47

loop.body46:                                      ; preds = %loop.head45
  %152 = load i32, i32* %i1, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %i1, align 4
  %154 = load i32, i32* %j2, align 4
  %155 = load i32, i32* %i1, align 4
  %156 = add i32 %154, %155
  store i32 %156, i32* %j2, align 4
  br label %loop.head45

loop.end47:                                       ; preds = %loop.head45
  %157 = load i32, i32* %j2, align 4
  %158 = icmp ne i32 %157, 1
  br i1 %158, label %then48, label %else49

then48:                                           ; preds = %loop.end47
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont50

else49:                                           ; preds = %loop.end47
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %159 = alloca i64, align 8
  %160 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.7, i32 0, i32 0), i64* %159, i32 0, i32 0, i32* %j2)
  %161 = load i64, i64* %159, align 4
  %162 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc51 = bitcast i8* %162 to %string_descriptor*
  %163 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 0
  store i8* %160, i8** %163, align 8
  %164 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 1
  store i64 %161, i64* %164, align 4
  %165 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 1
  %168 = load i64, i64* %167, align 4
  %169 = trunc i64 %168 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* %166, i32 %169, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 2, i32* %i1, align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.body53, %ifcont50
  %170 = load i32, i32* %i1, align 4
  %171 = add i32 %170, -1
  %172 = icmp sge i32 %171, 1
  br i1 %172, label %loop.body53, label %loop.end54

loop.body53:                                      ; preds = %loop.head52
  %173 = load i32, i32* %i1, align 4
  %174 = add i32 %173, -1
  store i32 %174, i32* %i1, align 4
  %175 = load i32, i32* %j2, align 4
  %176 = load i32, i32* %i1, align 4
  %177 = add i32 %175, %176
  store i32 %177, i32* %j2, align 4
  br label %loop.head52

loop.end54:                                       ; preds = %loop.head52
  %178 = load i32, i32* %j2, align 4
  %179 = icmp ne i32 %178, 1
  br i1 %179, label %then55, label %else56

then55:                                           ; preds = %loop.end54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @32, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %loop.end54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %180 = alloca i64, align 8
  %181 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.8, i32 0, i32 0), i64* %180, i32 0, i32 0, i32* %j2)
  %182 = load i64, i64* %180, align 4
  %183 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc58 = bitcast i8* %183 to %string_descriptor*
  %184 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 0
  store i8* %181, i8** %184, align 8
  %185 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 1
  store i64 %182, i64* %185, align 4
  %186 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 1
  %189 = load i64, i64* %188, align 4
  %190 = trunc i64 %189 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i8* %187, i32 %190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head59

loop.head59:                                      ; preds = %loop.body60, %ifcont57
  %191 = load i32, i32* %i1, align 4
  %192 = add i32 %191, 1
  %193 = icmp sle i32 %192, 0
  br i1 %193, label %loop.body60, label %loop.end61

loop.body60:                                      ; preds = %loop.head59
  %194 = load i32, i32* %i1, align 4
  %195 = add i32 %194, 1
  store i32 %195, i32* %i1, align 4
  %196 = load i32, i32* %j2, align 4
  %197 = load i32, i32* %i1, align 4
  %198 = add i32 %196, %197
  store i32 %198, i32* %j2, align 4
  br label %loop.head59

loop.end61:                                       ; preds = %loop.head59
  %199 = load i32, i32* %j2, align 4
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %then62, label %else63

then62:                                           ; preds = %loop.end61
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @36, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont64

else63:                                           ; preds = %loop.end61
  br label %ifcont64

ifcont64:                                         ; preds = %else63, %then62
  %201 = alloca i64, align 8
  %202 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.9, i32 0, i32 0), i64* %201, i32 0, i32 0, i32* %j2)
  %203 = load i64, i64* %201, align 4
  %204 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc65 = bitcast i8* %204 to %string_descriptor*
  %205 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 0
  store i8* %202, i8** %205, align 8
  %206 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 1
  store i64 %203, i64* %206, align 4
  %207 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 1
  %210 = load i64, i64* %209, align 4
  %211 = trunc i64 %210 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @39, i32 0, i32 0), i8* %208, i32 %211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 1, i32* %i1, align 4
  br label %loop.head66

loop.head66:                                      ; preds = %loop.body67, %ifcont64
  %212 = load i32, i32* %i1, align 4
  %213 = add i32 %212, -1
  %214 = icmp sge i32 %213, 1
  br i1 %214, label %loop.body67, label %loop.end68

loop.body67:                                      ; preds = %loop.head66
  %215 = load i32, i32* %i1, align 4
  %216 = add i32 %215, -1
  store i32 %216, i32* %i1, align 4
  %217 = load i32, i32* %j2, align 4
  %218 = load i32, i32* %i1, align 4
  %219 = add i32 %217, %218
  store i32 %219, i32* %j2, align 4
  br label %loop.head66

loop.end68:                                       ; preds = %loop.head66
  %220 = load i32, i32* %j2, align 4
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %then69, label %else70

then69:                                           ; preds = %loop.end68
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %loop.end68
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %222 = alloca i64, align 8
  %223 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.10, i32 0, i32 0), i64* %222, i32 0, i32 0, i32* %j2)
  %224 = load i64, i64* %222, align 4
  %225 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc72 = bitcast i8* %225 to %string_descriptor*
  %226 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 0
  store i8* %223, i8** %226, align 8
  %227 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 1
  store i64 %224, i64* %227, align 4
  %228 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 1
  %231 = load i64, i64* %230, align 4
  %232 = trunc i64 %231 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i32 0, i32 0), i8* %229, i32 %232, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont71
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()
