; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@"ERROR STOP" = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.5 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@25 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.6 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.7 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@31 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@32 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@33 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.8 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@35 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@36 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@37 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@38 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.9 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@39 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@42 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.10 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@43 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 10
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %j2, align 4
  %8 = load i32, i32* %i1, align 4
  %9 = add i32 %7, %8
  store i32 %9, i32* %j2, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %10 = load i32, i32* %j2, align 4
  %11 = icmp ne i32 %10, 55
  br i1 %11, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %12 = alloca i64, align 8
  %13 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i64* %12, i32 0, i32 0, i32* %j2)
  %14 = load i64, i64* %12, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %15 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %14, i64* %16, align 4
  %17 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %20 = load i64, i64* %19, align 4
  %21 = trunc i64 %20 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %18, i32 %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 11, i32* %i1, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %ifcont
  %22 = load i32, i32* %i1, align 4
  %23 = add i32 %22, -1
  %24 = icmp sge i32 %23, 1
  br i1 %24, label %loop.body4, label %loop.end5

loop.body4:                                       ; preds = %loop.head3
  %25 = load i32, i32* %i1, align 4
  %26 = add i32 %25, -1
  store i32 %26, i32* %i1, align 4
  %27 = load i32, i32* %j2, align 4
  %28 = load i32, i32* %i1, align 4
  %29 = add i32 %27, %28
  store i32 %29, i32* %j2, align 4
  br label %loop.head3

loop.end5:                                        ; preds = %loop.head3
  %30 = load i32, i32* %j2, align 4
  %31 = icmp ne i32 %30, 55
  br i1 %31, label %then6, label %else7

then6:                                            ; preds = %loop.end5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %loop.end5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %32 = alloca i64, align 8
  %33 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i64* %32, i32 0, i32 0, i32* %j2)
  %34 = load i64, i64* %32, align 4
  %stringFormat_desc9 = alloca %string_descriptor, align 8
  %35 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 1
  store i64 %34, i64* %36, align 4
  %37 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 1
  %40 = load i64, i64* %39, align 4
  %41 = trunc i64 %40 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %38, i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 -1, i32* %i1, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.body11, %ifcont8
  %42 = load i32, i32* %i1, align 4
  %43 = add i32 %42, 2
  %44 = icmp sle i32 %43, 9
  br i1 %44, label %loop.body11, label %loop.end12

loop.body11:                                      ; preds = %loop.head10
  %45 = load i32, i32* %i1, align 4
  %46 = add i32 %45, 2
  store i32 %46, i32* %i1, align 4
  %47 = load i32, i32* %j2, align 4
  %48 = load i32, i32* %i1, align 4
  %49 = add i32 %47, %48
  store i32 %49, i32* %j2, align 4
  br label %loop.head10

loop.end12:                                       ; preds = %loop.head10
  %50 = load i32, i32* %j2, align 4
  %51 = icmp ne i32 %50, 25
  br i1 %51, label %then13, label %else14

then13:                                           ; preds = %loop.end12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %loop.end12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %52 = alloca i64, align 8
  %53 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i64* %52, i32 0, i32 0, i32* %j2)
  %54 = load i64, i64* %52, align 4
  %stringFormat_desc16 = alloca %string_descriptor, align 8
  %55 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 1
  store i64 %54, i64* %56, align 4
  %57 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc16, i32 0, i32 1
  %60 = load i64, i64* %59, align 4
  %61 = trunc i64 %60 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %58, i32 %61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 11, i32* %i1, align 4
  br label %loop.head17

loop.head17:                                      ; preds = %loop.body18, %ifcont15
  %62 = load i32, i32* %i1, align 4
  %63 = add i32 %62, -2
  %64 = icmp sge i32 %63, 1
  br i1 %64, label %loop.body18, label %loop.end19

loop.body18:                                      ; preds = %loop.head17
  %65 = load i32, i32* %i1, align 4
  %66 = add i32 %65, -2
  store i32 %66, i32* %i1, align 4
  %67 = load i32, i32* %j2, align 4
  %68 = load i32, i32* %i1, align 4
  %69 = add i32 %67, %68
  store i32 %69, i32* %j2, align 4
  br label %loop.head17

loop.end19:                                       ; preds = %loop.head17
  %70 = load i32, i32* %j2, align 4
  %71 = icmp ne i32 %70, 25
  br i1 %71, label %then20, label %else21

then20:                                           ; preds = %loop.end19
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont22

else21:                                           ; preds = %loop.end19
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %72 = alloca i64, align 8
  %73 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i64* %72, i32 0, i32 0, i32* %j2)
  %74 = load i64, i64* %72, align 4
  %stringFormat_desc23 = alloca %string_descriptor, align 8
  %75 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 0
  store i8* %73, i8** %75, align 8
  %76 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 1
  store i64 %74, i64* %76, align 4
  %77 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc23, i32 0, i32 1
  %80 = load i64, i64* %79, align 4
  %81 = trunc i64 %80 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %78, i32 %81, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 -1, i32* %i1, align 4
  br label %loop.head24

loop.head24:                                      ; preds = %loop.body25, %ifcont22
  %82 = load i32, i32* %i1, align 4
  %83 = add i32 %82, 2
  %84 = icmp sle i32 %83, 10
  br i1 %84, label %loop.body25, label %loop.end26

loop.body25:                                      ; preds = %loop.head24
  %85 = load i32, i32* %i1, align 4
  %86 = add i32 %85, 2
  store i32 %86, i32* %i1, align 4
  %87 = load i32, i32* %j2, align 4
  %88 = load i32, i32* %i1, align 4
  %89 = add i32 %87, %88
  store i32 %89, i32* %j2, align 4
  br label %loop.head24

loop.end26:                                       ; preds = %loop.head24
  %90 = load i32, i32* %j2, align 4
  %91 = icmp ne i32 %90, 25
  br i1 %91, label %then27, label %else28

then27:                                           ; preds = %loop.end26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %loop.end26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %92 = alloca i64, align 8
  %93 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.4, i32 0, i32 0), i64* %92, i32 0, i32 0, i32* %j2)
  %94 = load i64, i64* %92, align 4
  %stringFormat_desc30 = alloca %string_descriptor, align 8
  %95 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 0
  store i8* %93, i8** %95, align 8
  %96 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 1
  store i64 %94, i64* %96, align 4
  %97 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc30, i32 0, i32 1
  %100 = load i64, i64* %99, align 4
  %101 = trunc i64 %100 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* %98, i32 %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @18, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 -2, i32* %i1, align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.body32, %ifcont29
  %102 = load i32, i32* %i1, align 4
  %103 = add i32 %102, 3
  %104 = icmp sle i32 %103, 10
  br i1 %104, label %loop.body32, label %loop.end33

loop.body32:                                      ; preds = %loop.head31
  %105 = load i32, i32* %i1, align 4
  %106 = add i32 %105, 3
  store i32 %106, i32* %i1, align 4
  %107 = load i32, i32* %j2, align 4
  %108 = load i32, i32* %i1, align 4
  %109 = add i32 %107, %108
  store i32 %109, i32* %j2, align 4
  br label %loop.head31

loop.end33:                                       ; preds = %loop.head31
  %110 = load i32, i32* %j2, align 4
  %111 = icmp ne i32 %110, 22
  br i1 %111, label %then34, label %else35

then34:                                           ; preds = %loop.end33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @20, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.end33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %112 = alloca i64, align 8
  %113 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.5, i32 0, i32 0), i64* %112, i32 0, i32 0, i32* %j2)
  %114 = load i64, i64* %112, align 4
  %stringFormat_desc37 = alloca %string_descriptor, align 8
  %115 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 0
  store i8* %113, i8** %115, align 8
  %116 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 1
  store i64 %114, i64* %116, align 4
  %117 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc37, i32 0, i32 1
  %120 = load i64, i64* %119, align 4
  %121 = trunc i64 %120 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* %118, i32 %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 13, i32* %i1, align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.body39, %ifcont36
  %122 = load i32, i32* %i1, align 4
  %123 = add i32 %122, -3
  %124 = icmp sge i32 %123, 1
  br i1 %124, label %loop.body39, label %loop.end40

loop.body39:                                      ; preds = %loop.head38
  %125 = load i32, i32* %i1, align 4
  %126 = add i32 %125, -3
  store i32 %126, i32* %i1, align 4
  %127 = load i32, i32* %j2, align 4
  %128 = load i32, i32* %i1, align 4
  %129 = add i32 %127, %128
  store i32 %129, i32* %j2, align 4
  br label %loop.head38

loop.end40:                                       ; preds = %loop.head38
  %130 = load i32, i32* %j2, align 4
  %131 = icmp ne i32 %130, 22
  br i1 %131, label %then41, label %else42

then41:                                           ; preds = %loop.end40
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont43

else42:                                           ; preds = %loop.end40
  br label %ifcont43

ifcont43:                                         ; preds = %else42, %then41
  %132 = alloca i64, align 8
  %133 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.6, i32 0, i32 0), i64* %132, i32 0, i32 0, i32* %j2)
  %134 = load i64, i64* %132, align 4
  %stringFormat_desc44 = alloca %string_descriptor, align 8
  %135 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 0
  store i8* %133, i8** %135, align 8
  %136 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 1
  store i64 %134, i64* %136, align 4
  %137 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc44, i32 0, i32 1
  %140 = load i64, i64* %139, align 4
  %141 = trunc i64 %140 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* %138, i32 %141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @26, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.body46, %ifcont43
  %142 = load i32, i32* %i1, align 4
  %143 = add i32 %142, 1
  %144 = icmp sle i32 %143, 1
  br i1 %144, label %loop.body46, label %loop.end47

loop.body46:                                      ; preds = %loop.head45
  %145 = load i32, i32* %i1, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %i1, align 4
  %147 = load i32, i32* %j2, align 4
  %148 = load i32, i32* %i1, align 4
  %149 = add i32 %147, %148
  store i32 %149, i32* %j2, align 4
  br label %loop.head45

loop.end47:                                       ; preds = %loop.head45
  %150 = load i32, i32* %j2, align 4
  %151 = icmp ne i32 %150, 1
  br i1 %151, label %then48, label %else49

then48:                                           ; preds = %loop.end47
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont50

else49:                                           ; preds = %loop.end47
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %152 = alloca i64, align 8
  %153 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.7, i32 0, i32 0), i64* %152, i32 0, i32 0, i32* %j2)
  %154 = load i64, i64* %152, align 4
  %stringFormat_desc51 = alloca %string_descriptor, align 8
  %155 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 0
  store i8* %153, i8** %155, align 8
  %156 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 1
  store i64 %154, i64* %156, align 4
  %157 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc51, i32 0, i32 1
  %160 = load i64, i64* %159, align 4
  %161 = trunc i64 %160 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* %158, i32 %161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 2, i32* %i1, align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.body53, %ifcont50
  %162 = load i32, i32* %i1, align 4
  %163 = add i32 %162, -1
  %164 = icmp sge i32 %163, 1
  br i1 %164, label %loop.body53, label %loop.end54

loop.body53:                                      ; preds = %loop.head52
  %165 = load i32, i32* %i1, align 4
  %166 = add i32 %165, -1
  store i32 %166, i32* %i1, align 4
  %167 = load i32, i32* %j2, align 4
  %168 = load i32, i32* %i1, align 4
  %169 = add i32 %167, %168
  store i32 %169, i32* %j2, align 4
  br label %loop.head52

loop.end54:                                       ; preds = %loop.head52
  %170 = load i32, i32* %j2, align 4
  %171 = icmp ne i32 %170, 1
  br i1 %171, label %then55, label %else56

then55:                                           ; preds = %loop.end54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @32, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %loop.end54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %172 = alloca i64, align 8
  %173 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.8, i32 0, i32 0), i64* %172, i32 0, i32 0, i32* %j2)
  %174 = load i64, i64* %172, align 4
  %stringFormat_desc58 = alloca %string_descriptor, align 8
  %175 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 0
  store i8* %173, i8** %175, align 8
  %176 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 1
  store i64 %174, i64* %176, align 4
  %177 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc58, i32 0, i32 1
  %180 = load i64, i64* %179, align 4
  %181 = trunc i64 %180 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i8* %178, i32 %181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head59

loop.head59:                                      ; preds = %loop.body60, %ifcont57
  %182 = load i32, i32* %i1, align 4
  %183 = add i32 %182, 1
  %184 = icmp sle i32 %183, 0
  br i1 %184, label %loop.body60, label %loop.end61

loop.body60:                                      ; preds = %loop.head59
  %185 = load i32, i32* %i1, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %i1, align 4
  %187 = load i32, i32* %j2, align 4
  %188 = load i32, i32* %i1, align 4
  %189 = add i32 %187, %188
  store i32 %189, i32* %j2, align 4
  br label %loop.head59

loop.end61:                                       ; preds = %loop.head59
  %190 = load i32, i32* %j2, align 4
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %then62, label %else63

then62:                                           ; preds = %loop.end61
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @36, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont64

else63:                                           ; preds = %loop.end61
  br label %ifcont64

ifcont64:                                         ; preds = %else63, %then62
  %192 = alloca i64, align 8
  %193 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.9, i32 0, i32 0), i64* %192, i32 0, i32 0, i32* %j2)
  %194 = load i64, i64* %192, align 4
  %stringFormat_desc65 = alloca %string_descriptor, align 8
  %195 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 0
  store i8* %193, i8** %195, align 8
  %196 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 1
  store i64 %194, i64* %196, align 4
  %197 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc65, i32 0, i32 1
  %200 = load i64, i64* %199, align 4
  %201 = trunc i64 %200 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @39, i32 0, i32 0), i8* %198, i32 %201, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0), i32 1)
  store i32 0, i32* %j2, align 4
  store i32 1, i32* %i1, align 4
  br label %loop.head66

loop.head66:                                      ; preds = %loop.body67, %ifcont64
  %202 = load i32, i32* %i1, align 4
  %203 = add i32 %202, -1
  %204 = icmp sge i32 %203, 1
  br i1 %204, label %loop.body67, label %loop.end68

loop.body67:                                      ; preds = %loop.head66
  %205 = load i32, i32* %i1, align 4
  %206 = add i32 %205, -1
  store i32 %206, i32* %i1, align 4
  %207 = load i32, i32* %j2, align 4
  %208 = load i32, i32* %i1, align 4
  %209 = add i32 %207, %208
  store i32 %209, i32* %j2, align 4
  br label %loop.head66

loop.end68:                                       ; preds = %loop.head66
  %210 = load i32, i32* %j2, align 4
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %then69, label %else70

then69:                                           ; preds = %loop.end68
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @"ERROR STOP", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont71

else70:                                           ; preds = %loop.end68
  br label %ifcont71

ifcont71:                                         ; preds = %else70, %then69
  %212 = alloca i64, align 8
  %213 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.10, i32 0, i32 0), i64* %212, i32 0, i32 0, i32* %j2)
  %214 = load i64, i64* %212, align 4
  %stringFormat_desc72 = alloca %string_descriptor, align 8
  %215 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 0
  store i8* %213, i8** %215, align 8
  %216 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 1
  store i64 %214, i64* %216, align 4
  %217 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc72, i32 0, i32 1
  %220 = load i64, i64* %219, align 4
  %221 = trunc i64 %220 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @43, i32 0, i32 0), i8* %218, i32 %221, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont71
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()
