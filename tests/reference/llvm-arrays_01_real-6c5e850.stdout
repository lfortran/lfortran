; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@1 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@3 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@6 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@9 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.7 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.7, i32 0, i32 0), i64 10 }>
@string_const_data.9 = private constant [2 x i8] c"\0A\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@12 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@14 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@17 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@18 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@20 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@23 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.23 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@string_const_data.25 = private constant [2 x i8] c"\0A\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.25, i32 0, i32 0), i64 1 }>
@24 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@26 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@27 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@28 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@29 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@30 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@31 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@32 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@33 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.31 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.31, i32 0, i32 0), i64 10 }>
@string_const_data.33 = private constant [2 x i8] c"\0A\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.33, i32 0, i32 0), i64 1 }>
@34 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@36 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@37 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@38 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@39 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@41 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@42 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@43 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@44 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@45 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@47 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@48 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@49 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.39 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.39, i32 0, i32 0), i64 10 }>
@string_const_data.41 = private constant [2 x i8] c"\0A\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.41, i32 0, i32 0), i64 1 }>
@50 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@51 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@52 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@53 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@54 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@55 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@56 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.43 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.43, i32 0, i32 0), i64 10 }>
@string_const_data.45 = private constant [2 x i8] c"\0A\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.45, i32 0, i32 0), i64 1 }>
@57 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@58 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@59 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@60 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@61 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@62 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@63 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@64 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@65 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.47 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.48 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.47, i32 0, i32 0), i64 10 }>
@string_const_data.49 = private constant [2 x i8] c"\0A\00"
@string_const.50 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.49, i32 0, i32 0), i64 1 }>
@66 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@67 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@68 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@69 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@70 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.51 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.51, i32 0, i32 0), i64 10 }>
@string_const_data.53 = private constant [2 x i8] c"\0A\00"
@string_const.54 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.53, i32 0, i32 0), i64 1 }>
@71 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@72 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@73 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@74 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@75 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.55 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.56 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.55, i32 0, i32 0), i64 10 }>
@string_const_data.57 = private constant [2 x i8] c"\0A\00"
@string_const.58 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.57, i32 0, i32 0), i64 1 }>
@76 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@77 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@78 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@79 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@80 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.59 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.60 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.59, i32 0, i32 0), i64 10 }>
@string_const_data.61 = private constant [2 x i8] c"\0A\00"
@string_const.62 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.61, i32 0, i32 0), i64 1 }>
@81 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x double], align 8
  %b = alloca [4 x double], align 8
  %c = alloca [4 x double], align 8
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %ifcont, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 3
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %i1, align 4
  %8 = sub i32 %7, 1
  %9 = mul i32 1, %8
  %10 = add i32 0, %9
  %11 = icmp slt i32 %7, 1
  %12 = icmp sgt i32 %7, 3
  %13 = or i1 %11, %12
  br i1 %13, label %then, label %ifcont

then:                                             ; preds = %loop.body
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 %7, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont:                                           ; preds = %loop.body
  %14 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %10
  %15 = load i32, i32* %i1, align 4
  %16 = add i32 %15, 10
  %17 = sitofp i32 %16 to double
  store double %17, double* %14, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br i1 false, label %then3, label %ifcont4

then3:                                            ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %loop.end
  %18 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %19 = load double, double* %18, align 8
  %20 = fcmp une double %19, 1.100000e+01
  br i1 %20, label %then5, label %else

then5:                                            ; preds = %ifcont4
  %21 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %22 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %21, i8* %22)
  call void @exit(i32 1)
  br label %ifcont6

else:                                             ; preds = %ifcont4
  br label %ifcont6

ifcont6:                                          ; preds = %else, %then5
  br i1 false, label %then7, label %ifcont8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i32 2, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont8:                                          ; preds = %ifcont6
  %23 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 1
  %24 = load double, double* %23, align 8
  %25 = fcmp une double %24, 1.200000e+01
  br i1 %25, label %then9, label %else10

then9:                                            ; preds = %ifcont8
  %26 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %27 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %26, i8* %27)
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %ifcont8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  br i1 false, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 3, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %28 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 2
  %29 = load double, double* %28, align 8
  %30 = fcmp une double %29, 1.300000e+01
  br i1 %30, label %then14, label %else15

then14:                                           ; preds = %ifcont13
  %31 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  %32 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %31, i8* %32)
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %ifcont13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  store i32 10, i32* %i1, align 4
  br label %loop.head17

loop.head17:                                      ; preds = %ifcont20, %ifcont16
  %33 = load i32, i32* %i1, align 4
  %34 = add i32 %33, 1
  %35 = icmp sle i32 %34, 14
  br i1 %35, label %loop.body18, label %loop.end21

loop.body18:                                      ; preds = %loop.head17
  %36 = load i32, i32* %i1, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %i1, align 4
  %38 = load i32, i32* %i1, align 4
  %39 = sub i32 %38, 10
  %40 = sub i32 %39, 1
  %41 = mul i32 1, %40
  %42 = add i32 0, %41
  %43 = icmp slt i32 %39, 1
  %44 = icmp sgt i32 %39, 4
  %45 = or i1 %43, %44
  br i1 %45, label %then19, label %ifcont20

then19:                                           ; preds = %loop.body18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i32 %39, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont20:                                         ; preds = %loop.body18
  %46 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %42
  %47 = load i32, i32* %i1, align 4
  %48 = sitofp i32 %47 to double
  store double %48, double* %46, align 8
  br label %loop.head17

loop.end21:                                       ; preds = %loop.head17
  br i1 false, label %then22, label %ifcont23

then22:                                           ; preds = %loop.end21
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont23:                                         ; preds = %loop.end21
  %49 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %50 = load double, double* %49, align 8
  %51 = fcmp une double %50, 1.100000e+01
  br i1 %51, label %then24, label %else25

then24:                                           ; preds = %ifcont23
  %52 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %53 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %52, i8* %53)
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont23
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  br i1 false, label %then27, label %ifcont28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont28:                                         ; preds = %ifcont26
  %54 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %55 = load double, double* %54, align 8
  %56 = fcmp une double %55, 1.200000e+01
  br i1 %56, label %then29, label %else30

then29:                                           ; preds = %ifcont28
  %57 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %58 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i8* %57, i8* %58)
  call void @exit(i32 1)
  br label %ifcont31

else30:                                           ; preds = %ifcont28
  br label %ifcont31

ifcont31:                                         ; preds = %else30, %then29
  br i1 false, label %then32, label %ifcont33

then32:                                           ; preds = %ifcont31
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont33:                                         ; preds = %ifcont31
  %59 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %60 = load double, double* %59, align 8
  %61 = fcmp une double %60, 1.300000e+01
  br i1 %61, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  %62 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %63 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0), i8* %62, i8* %63)
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  br i1 false, label %then37, label %ifcont38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont38:                                         ; preds = %ifcont36
  %64 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %65 = load double, double* %64, align 8
  %66 = fcmp une double %65, 1.400000e+01
  br i1 %66, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  %67 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  %68 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @24, i32 0, i32 0), i8* %67, i8* %68)
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  store i32 0, i32* %i1, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %ifcont47, %ifcont41
  %69 = load i32, i32* %i1, align 4
  %70 = add i32 %69, 1
  %71 = icmp sle i32 %70, 3
  br i1 %71, label %loop.body43, label %loop.end48

loop.body43:                                      ; preds = %loop.head42
  %72 = load i32, i32* %i1, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %i1, align 4
  %74 = load i32, i32* %i1, align 4
  %75 = sub i32 %74, 1
  %76 = mul i32 1, %75
  %77 = add i32 0, %76
  %78 = icmp slt i32 %74, 1
  %79 = icmp sgt i32 %74, 4
  %80 = or i1 %78, %79
  br i1 %80, label %then44, label %ifcont45

then44:                                           ; preds = %loop.body43
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0), i32 %74, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont45:                                         ; preds = %loop.body43
  %81 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %77
  %82 = load i32, i32* %i1, align 4
  %83 = sub i32 %82, 1
  %84 = mul i32 1, %83
  %85 = add i32 0, %84
  %86 = icmp slt i32 %82, 1
  %87 = icmp sgt i32 %82, 3
  %88 = or i1 %86, %87
  br i1 %88, label %then46, label %ifcont47

then46:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @27, i32 0, i32 0), i32 %82, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont47:                                         ; preds = %ifcont45
  %89 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %85
  %90 = load double, double* %89, align 8
  %91 = fsub double %90, 1.000000e+01
  store double %91, double* %81, align 8
  br label %loop.head42

loop.end48:                                       ; preds = %loop.head42
  br i1 false, label %then49, label %ifcont50

then49:                                           ; preds = %loop.end48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont50:                                         ; preds = %loop.end48
  %92 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %93 = load double, double* %92, align 8
  %94 = fcmp une double %93, 1.000000e+00
  br i1 %94, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %95 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %96 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* %95, i8* %96)
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  br i1 false, label %then54, label %ifcont55

then54:                                           ; preds = %ifcont53
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @32, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont55:                                         ; preds = %ifcont53
  %97 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %98 = load double, double* %97, align 8
  %99 = fcmp une double %98, 2.000000e+00
  br i1 %99, label %then56, label %else57

then56:                                           ; preds = %ifcont55
  %100 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  %101 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @34, i32 0, i32 0), i8* %100, i8* %101)
  call void @exit(i32 1)
  br label %ifcont58

else57:                                           ; preds = %ifcont55
  br label %ifcont58

ifcont58:                                         ; preds = %else57, %then56
  br i1 false, label %then59, label %ifcont60

then59:                                           ; preds = %ifcont58
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont60:                                         ; preds = %ifcont58
  %102 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %103 = load double, double* %102, align 8
  %104 = fcmp une double %103, 3.000000e+00
  br i1 %104, label %then61, label %else62

then61:                                           ; preds = %ifcont60
  %105 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %106 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i32 0, i32 0), i8* %105, i8* %106)
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %ifcont60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  br i1 false, label %then64, label %ifcont65

then64:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont65:                                         ; preds = %ifcont63
  %107 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  br i1 false, label %then66, label %ifcont67

then66:                                           ; preds = %ifcont65
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont67:                                         ; preds = %ifcont65
  %108 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %109 = load double, double* %108, align 8
  br i1 false, label %then68, label %ifcont69

then68:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont69:                                         ; preds = %ifcont67
  %110 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %111 = load double, double* %110, align 8
  %112 = fadd double %109, %111
  br i1 false, label %then70, label %ifcont71

then70:                                           ; preds = %ifcont69
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @44, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont71:                                         ; preds = %ifcont69
  %113 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %114 = load double, double* %113, align 8
  %115 = fadd double %112, %114
  br i1 false, label %then72, label %ifcont73

then72:                                           ; preds = %ifcont71
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont73:                                         ; preds = %ifcont71
  %116 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %117 = load double, double* %116, align 8
  %118 = fadd double %115, %117
  store double %118, double* %107, align 8
  br i1 false, label %then74, label %ifcont75

then74:                                           ; preds = %ifcont73
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont75:                                         ; preds = %ifcont73
  %119 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %120 = load double, double* %119, align 8
  %121 = fcmp une double %120, 1.700000e+01
  br i1 %121, label %then76, label %else77

then76:                                           ; preds = %ifcont75
  %122 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  %123 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @50, i32 0, i32 0), i8* %122, i8* %123)
  call void @exit(i32 1)
  br label %ifcont78

else77:                                           ; preds = %ifcont75
  br label %ifcont78

ifcont78:                                         ; preds = %else77, %then76
  br i1 false, label %then79, label %ifcont80

then79:                                           ; preds = %ifcont78
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @51, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont80:                                         ; preds = %ifcont78
  %124 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  br i1 false, label %then81, label %ifcont82

then81:                                           ; preds = %ifcont80
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @54, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @53, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont82:                                         ; preds = %ifcont80
  %125 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %126 = load double, double* %125, align 8
  store double %126, double* %124, align 8
  br i1 false, label %then83, label %ifcont84

then83:                                           ; preds = %ifcont82
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @55, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont84:                                         ; preds = %ifcont82
  %127 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %128 = load double, double* %127, align 8
  %129 = fcmp une double %128, 1.100000e+01
  br i1 %129, label %then85, label %else86

then85:                                           ; preds = %ifcont84
  %130 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  %131 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i32 0, i32 0), i8* %130, i8* %131)
  call void @exit(i32 1)
  br label %ifcont87

else86:                                           ; preds = %ifcont84
  br label %ifcont87

ifcont87:                                         ; preds = %else86, %then85
  store i32 0, i32* %i1, align 4
  br label %loop.head88

loop.head88:                                      ; preds = %loop.end96, %ifcont87
  %132 = load i32, i32* %i1, align 4
  %133 = add i32 %132, 1
  %134 = icmp sle i32 %133, 2
  br i1 %134, label %loop.body89, label %loop.end97

loop.body89:                                      ; preds = %loop.head88
  %135 = load i32, i32* %i1, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %i1, align 4
  store i32 0, i32* %j2, align 4
  br label %loop.head90

loop.head90:                                      ; preds = %ifcont95, %loop.body89
  %137 = load i32, i32* %j2, align 4
  %138 = add i32 %137, 1
  %139 = icmp sle i32 %138, 2
  br i1 %139, label %loop.body91, label %loop.end96

loop.body91:                                      ; preds = %loop.head90
  %140 = load i32, i32* %j2, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %j2, align 4
  %142 = load i32, i32* %i1, align 4
  %143 = load i32, i32* %j2, align 4
  %144 = sub i32 %142, 1
  %145 = mul i32 1, %144
  %146 = add i32 0, %145
  %147 = icmp slt i32 %142, 1
  %148 = icmp sgt i32 %142, 2
  %149 = or i1 %147, %148
  br i1 %149, label %then92, label %ifcont93

then92:                                           ; preds = %loop.body91
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0), i32 %142, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont93:                                         ; preds = %loop.body91
  %150 = sub i32 %143, 1
  %151 = mul i32 2, %150
  %152 = add i32 %146, %151
  %153 = icmp slt i32 %143, 1
  %154 = icmp sgt i32 %143, 2
  %155 = or i1 %153, %154
  br i1 %155, label %then94, label %ifcont95

then94:                                           ; preds = %ifcont93
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @61, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @60, i32 0, i32 0), i32 %143, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont95:                                         ; preds = %ifcont93
  %156 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 %152
  %157 = load i32, i32* %i1, align 4
  %158 = load i32, i32* %j2, align 4
  %159 = add i32 %157, %158
  %160 = add i32 %159, 10
  %161 = sitofp i32 %160 to double
  store double %161, double* %156, align 8
  br label %loop.head90

loop.end96:                                       ; preds = %loop.head90
  br label %loop.head88

loop.end97:                                       ; preds = %loop.head88
  br i1 false, label %then98, label %ifcont99

then98:                                           ; preds = %loop.end97
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @62, i32 0, i32 0), i32 1, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont99:                                         ; preds = %loop.end97
  br i1 false, label %then100, label %ifcont101

then100:                                          ; preds = %ifcont99
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @65, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @64, i32 0, i32 0), i32 1, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont101:                                        ; preds = %ifcont99
  %162 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 0
  %163 = load double, double* %162, align 8
  %164 = fcmp une double %163, 1.200000e+01
  br i1 %164, label %then102, label %else103

then102:                                          ; preds = %ifcont101
  %165 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.48, i32 0, i32 0), align 8
  %166 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.50, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @66, i32 0, i32 0), i8* %165, i8* %166)
  call void @exit(i32 1)
  br label %ifcont104

else103:                                          ; preds = %ifcont101
  br label %ifcont104

ifcont104:                                        ; preds = %else103, %then102
  br i1 false, label %then105, label %ifcont106

then105:                                          ; preds = %ifcont104
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @68, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @67, i32 0, i32 0), i32 1, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont106:                                        ; preds = %ifcont104
  br i1 false, label %then107, label %ifcont108

then107:                                          ; preds = %ifcont106
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @69, i32 0, i32 0), i32 2, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont108:                                        ; preds = %ifcont106
  %167 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 2
  %168 = load double, double* %167, align 8
  %169 = fcmp une double %168, 1.300000e+01
  br i1 %169, label %then109, label %else110

then109:                                          ; preds = %ifcont108
  %170 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.52, i32 0, i32 0), align 8
  %171 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.54, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i32 0, i32 0), i8* %170, i8* %171)
  call void @exit(i32 1)
  br label %ifcont111

else110:                                          ; preds = %ifcont108
  br label %ifcont111

ifcont111:                                        ; preds = %else110, %then109
  br i1 false, label %then112, label %ifcont113

then112:                                          ; preds = %ifcont111
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @73, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @72, i32 0, i32 0), i32 2, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont113:                                        ; preds = %ifcont111
  br i1 false, label %then114, label %ifcont115

then114:                                          ; preds = %ifcont113
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0), i32 1, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont115:                                        ; preds = %ifcont113
  %172 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 1
  %173 = load double, double* %172, align 8
  %174 = fcmp une double %173, 1.300000e+01
  br i1 %174, label %then116, label %else117

then116:                                          ; preds = %ifcont115
  %175 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.56, i32 0, i32 0), align 8
  %176 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.58, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i32 0, i32 0), i8* %175, i8* %176)
  call void @exit(i32 1)
  br label %ifcont118

else117:                                          ; preds = %ifcont115
  br label %ifcont118

ifcont118:                                        ; preds = %else117, %then116
  br i1 false, label %then119, label %ifcont120

then119:                                          ; preds = %ifcont118
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @78, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @77, i32 0, i32 0), i32 2, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont120:                                        ; preds = %ifcont118
  br i1 false, label %then121, label %ifcont122

then121:                                          ; preds = %ifcont120
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @79, i32 0, i32 0), i32 2, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont122:                                        ; preds = %ifcont120
  %177 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 3
  %178 = load double, double* %177, align 8
  %179 = fcmp une double %178, 1.400000e+01
  br i1 %179, label %then123, label %else124

then123:                                          ; preds = %ifcont122
  %180 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.60, i32 0, i32 0), align 8
  %181 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.62, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @81, i32 0, i32 0), i8* %180, i8* %181)
  call void @exit(i32 1)
  br label %ifcont125

else124:                                          ; preds = %ifcont122
  br label %ifcont125

ifcont125:                                        ; preds = %else124, %then123
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont125
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
