; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@0 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.7 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.7, i32 0, i32 0), i64 10 }>
@string_const_data.9 = private constant [2 x i8] c"\0A\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.23 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@string_const_data.25 = private constant [2 x i8] c"\0A\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.25, i32 0, i32 0), i64 1 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.31 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.31, i32 0, i32 0), i64 10 }>
@string_const_data.33 = private constant [2 x i8] c"\0A\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.33, i32 0, i32 0), i64 1 }>
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.39 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.39, i32 0, i32 0), i64 10 }>
@string_const_data.41 = private constant [2 x i8] c"\0A\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.41, i32 0, i32 0), i64 1 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.43 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.43, i32 0, i32 0), i64 10 }>
@string_const_data.45 = private constant [2 x i8] c"\0A\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.45, i32 0, i32 0), i64 1 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.47 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.48 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.47, i32 0, i32 0), i64 10 }>
@string_const_data.49 = private constant [2 x i8] c"\0A\00"
@string_const.50 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.49, i32 0, i32 0), i64 1 }>
@12 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.51 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.51, i32 0, i32 0), i64 10 }>
@string_const_data.53 = private constant [2 x i8] c"\0A\00"
@string_const.54 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.53, i32 0, i32 0), i64 1 }>
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.55 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.56 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.55, i32 0, i32 0), i64 10 }>
@string_const_data.57 = private constant [2 x i8] c"\0A\00"
@string_const.58 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.57, i32 0, i32 0), i64 1 }>
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.59 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.60 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.59, i32 0, i32 0), i64 10 }>
@string_const_data.61 = private constant [2 x i8] c"\0A\00"
@string_const.62 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.61, i32 0, i32 0), i64 1 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x double], align 8
  %b = alloca [4 x double], align 8
  %c = alloca [4 x double], align 8
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 3
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %i1, align 4
  %8 = sub i32 %7, 1
  %9 = mul i32 1, %8
  %10 = add i32 0, %9
  %11 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %10
  %12 = load i32, i32* %i1, align 4
  %13 = add i32 %12, 10
  %14 = sitofp i32 %13 to double
  store double %14, double* %11, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %15 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %16 = load double, double* %15, align 8
  %17 = fcmp une double %16, 1.100000e+01
  br i1 %17, label %then, label %else

then:                                             ; preds = %loop.end
  %18 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %19 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8* %18, i8* %19)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %20 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 1
  %21 = load double, double* %20, align 8
  %22 = fcmp une double %21, 1.200000e+01
  br i1 %22, label %then3, label %else4

then3:                                            ; preds = %ifcont
  %23 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %24 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %23, i8* %24)
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %25 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 2
  %26 = load double, double* %25, align 8
  %27 = fcmp une double %26, 1.300000e+01
  br i1 %27, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  %28 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  %29 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %28, i8* %29)
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %ifcont5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  store i32 10, i32* %i1, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont8
  %30 = load i32, i32* %i1, align 4
  %31 = add i32 %30, 1
  %32 = icmp sle i32 %31, 14
  br i1 %32, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %33 = load i32, i32* %i1, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %i1, align 4
  %35 = load i32, i32* %i1, align 4
  %36 = sub i32 %35, 10
  %37 = sub i32 %36, 1
  %38 = mul i32 1, %37
  %39 = add i32 0, %38
  %40 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %39
  %41 = load i32, i32* %i1, align 4
  %42 = sitofp i32 %41 to double
  store double %42, double* %40, align 8
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %43 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %44 = load double, double* %43, align 8
  %45 = fcmp une double %44, 1.100000e+01
  br i1 %45, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  %46 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %47 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %46, i8* %47)
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %48 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %49 = load double, double* %48, align 8
  %50 = fcmp une double %49, 1.200000e+01
  br i1 %50, label %then15, label %else16

then15:                                           ; preds = %ifcont14
  %51 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %52 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %51, i8* %52)
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %ifcont14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  %53 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %54 = load double, double* %53, align 8
  %55 = fcmp une double %54, 1.300000e+01
  br i1 %55, label %then18, label %else19

then18:                                           ; preds = %ifcont17
  %56 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %57 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %56, i8* %57)
  call void @exit(i32 1)
  br label %ifcont20

else19:                                           ; preds = %ifcont17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  %58 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %59 = load double, double* %58, align 8
  %60 = fcmp une double %59, 1.400000e+01
  br i1 %60, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  %61 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  %62 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %61, i8* %62)
  call void @exit(i32 1)
  br label %ifcont23

else22:                                           ; preds = %ifcont20
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %then21
  store i32 0, i32* %i1, align 4
  br label %loop.head24

loop.head24:                                      ; preds = %loop.body25, %ifcont23
  %63 = load i32, i32* %i1, align 4
  %64 = add i32 %63, 1
  %65 = icmp sle i32 %64, 3
  br i1 %65, label %loop.body25, label %loop.end26

loop.body25:                                      ; preds = %loop.head24
  %66 = load i32, i32* %i1, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %i1, align 4
  %68 = load i32, i32* %i1, align 4
  %69 = sub i32 %68, 1
  %70 = mul i32 1, %69
  %71 = add i32 0, %70
  %72 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %71
  %73 = load i32, i32* %i1, align 4
  %74 = sub i32 %73, 1
  %75 = mul i32 1, %74
  %76 = add i32 0, %75
  %77 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %76
  %78 = load double, double* %77, align 8
  %79 = fsub double %78, 1.000000e+01
  store double %79, double* %72, align 8
  br label %loop.head24

loop.end26:                                       ; preds = %loop.head24
  %80 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %81 = load double, double* %80, align 8
  %82 = fcmp une double %81, 1.000000e+00
  br i1 %82, label %then27, label %else28

then27:                                           ; preds = %loop.end26
  %83 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %84 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %83, i8* %84)
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %loop.end26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %85 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %86 = load double, double* %85, align 8
  %87 = fcmp une double %86, 2.000000e+00
  br i1 %87, label %then30, label %else31

then30:                                           ; preds = %ifcont29
  %88 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  %89 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %88, i8* %89)
  call void @exit(i32 1)
  br label %ifcont32

else31:                                           ; preds = %ifcont29
  br label %ifcont32

ifcont32:                                         ; preds = %else31, %then30
  %90 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %91 = load double, double* %90, align 8
  %92 = fcmp une double %91, 3.000000e+00
  br i1 %92, label %then33, label %else34

then33:                                           ; preds = %ifcont32
  %93 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %94 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %93, i8* %94)
  call void @exit(i32 1)
  br label %ifcont35

else34:                                           ; preds = %ifcont32
  br label %ifcont35

ifcont35:                                         ; preds = %else34, %then33
  %95 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %96 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %97 = load double, double* %96, align 8
  %98 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %99 = load double, double* %98, align 8
  %100 = fadd double %97, %99
  %101 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %102 = load double, double* %101, align 8
  %103 = fadd double %100, %102
  %104 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %105 = load double, double* %104, align 8
  %106 = fadd double %103, %105
  store double %106, double* %95, align 8
  %107 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %108 = load double, double* %107, align 8
  %109 = fcmp une double %108, 1.700000e+01
  br i1 %109, label %then36, label %else37

then36:                                           ; preds = %ifcont35
  %110 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  %111 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %110, i8* %111)
  call void @exit(i32 1)
  br label %ifcont38

else37:                                           ; preds = %ifcont35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  %112 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %113 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %114 = load double, double* %113, align 8
  store double %114, double* %112, align 8
  %115 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %116 = load double, double* %115, align 8
  %117 = fcmp une double %116, 1.100000e+01
  br i1 %117, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  %118 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  %119 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %118, i8* %119)
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  store i32 0, i32* %i1, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.end46, %ifcont41
  %120 = load i32, i32* %i1, align 4
  %121 = add i32 %120, 1
  %122 = icmp sle i32 %121, 2
  br i1 %122, label %loop.body43, label %loop.end47

loop.body43:                                      ; preds = %loop.head42
  %123 = load i32, i32* %i1, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %i1, align 4
  store i32 0, i32* %j2, align 4
  br label %loop.head44

loop.head44:                                      ; preds = %loop.body45, %loop.body43
  %125 = load i32, i32* %j2, align 4
  %126 = add i32 %125, 1
  %127 = icmp sle i32 %126, 2
  br i1 %127, label %loop.body45, label %loop.end46

loop.body45:                                      ; preds = %loop.head44
  %128 = load i32, i32* %j2, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %j2, align 4
  %130 = load i32, i32* %i1, align 4
  %131 = load i32, i32* %j2, align 4
  %132 = sub i32 %130, 1
  %133 = mul i32 1, %132
  %134 = add i32 0, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 2, %135
  %137 = add i32 %134, %136
  %138 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 %137
  %139 = load i32, i32* %i1, align 4
  %140 = load i32, i32* %j2, align 4
  %141 = add i32 %139, %140
  %142 = add i32 %141, 10
  %143 = sitofp i32 %142 to double
  store double %143, double* %138, align 8
  br label %loop.head44

loop.end46:                                       ; preds = %loop.head44
  br label %loop.head42

loop.end47:                                       ; preds = %loop.head42
  %144 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 0
  %145 = load double, double* %144, align 8
  %146 = fcmp une double %145, 1.200000e+01
  br i1 %146, label %then48, label %else49

then48:                                           ; preds = %loop.end47
  %147 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.48, i32 0, i32 0), align 8
  %148 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.50, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @12, i32 0, i32 0), i8* %147, i8* %148)
  call void @exit(i32 1)
  br label %ifcont50

else49:                                           ; preds = %loop.end47
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %149 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 2
  %150 = load double, double* %149, align 8
  %151 = fcmp une double %150, 1.300000e+01
  br i1 %151, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %152 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.52, i32 0, i32 0), align 8
  %153 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.54, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %152, i8* %153)
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  %154 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 1
  %155 = load double, double* %154, align 8
  %156 = fcmp une double %155, 1.300000e+01
  br i1 %156, label %then54, label %else55

then54:                                           ; preds = %ifcont53
  %157 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.56, i32 0, i32 0), align 8
  %158 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.58, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %157, i8* %158)
  call void @exit(i32 1)
  br label %ifcont56

else55:                                           ; preds = %ifcont53
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  %159 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 3
  %160 = load double, double* %159, align 8
  %161 = fcmp une double %160, 1.400000e+01
  br i1 %161, label %then57, label %else58

then57:                                           ; preds = %ifcont56
  %162 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.60, i32 0, i32 0), align 8
  %163 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.62, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %162, i8* %163)
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %ifcont56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont59
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
