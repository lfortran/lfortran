; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@21 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@31 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@32 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@33 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@36 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@38 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@39 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@42 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@45 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@47 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x double], align 8
  %b = alloca [4 x double], align 8
  %c = alloca [4 x double], align 8
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 1, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = icmp sle i32 %2, 3
  br i1 %3, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %4 = load i32, i32* %i1, align 4
  %5 = sub i32 %4, 1
  %6 = mul i32 1, %5
  %7 = add i32 0, %6
  %8 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %7
  %9 = load i32, i32* %i1, align 4
  %10 = add i32 %9, 10
  %11 = sitofp i32 %10 to double
  store double %11, double* %8, align 8
  %12 = load i32, i32* %i1, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %i1, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %15 = load double, double* %14, align 8
  %16 = fcmp une double %15, 1.100000e+01
  br i1 %16, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %17 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 1
  %18 = load double, double* %17, align 8
  %19 = fcmp une double %18, 1.200000e+01
  br i1 %19, label %then3, label %else4

then3:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %20 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 2
  %21 = load double, double* %20, align 8
  %22 = fcmp une double %21, 1.300000e+01
  br i1 %22, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %ifcont5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  store i32 11, i32* %i1, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont8
  %23 = load i32, i32* %i1, align 4
  %24 = icmp sle i32 %23, 14
  br i1 %24, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %25 = load i32, i32* %i1, align 4
  %26 = sub i32 %25, 10
  %27 = sub i32 %26, 1
  %28 = mul i32 1, %27
  %29 = add i32 0, %28
  %30 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %29
  %31 = load i32, i32* %i1, align 4
  %32 = sitofp i32 %31 to double
  store double %32, double* %30, align 8
  %33 = load i32, i32* %i1, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %i1, align 4
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %35 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %36 = load double, double* %35, align 8
  %37 = fcmp une double %36, 1.100000e+01
  br i1 %37, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %38 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %39 = load double, double* %38, align 8
  %40 = fcmp une double %39, 1.200000e+01
  br i1 %40, label %then15, label %else16

then15:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %ifcont14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  %41 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %42 = load double, double* %41, align 8
  %43 = fcmp une double %42, 1.300000e+01
  br i1 %43, label %then18, label %else19

then18:                                           ; preds = %ifcont17
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont20

else19:                                           ; preds = %ifcont17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  %44 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %45 = load double, double* %44, align 8
  %46 = fcmp une double %45, 1.400000e+01
  br i1 %46, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont23

else22:                                           ; preds = %ifcont20
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %then21
  store i32 1, i32* %i1, align 4
  br label %loop.head24

loop.head24:                                      ; preds = %loop.body25, %ifcont23
  %47 = load i32, i32* %i1, align 4
  %48 = icmp sle i32 %47, 3
  br i1 %48, label %loop.body25, label %loop.end26

loop.body25:                                      ; preds = %loop.head24
  %49 = load i32, i32* %i1, align 4
  %50 = sub i32 %49, 1
  %51 = mul i32 1, %50
  %52 = add i32 0, %51
  %53 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %52
  %54 = load i32, i32* %i1, align 4
  %55 = sub i32 %54, 1
  %56 = mul i32 1, %55
  %57 = add i32 0, %56
  %58 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %57
  %59 = load double, double* %58, align 8
  %60 = fsub double %59, 1.000000e+01
  store double %60, double* %53, align 8
  %61 = load i32, i32* %i1, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %i1, align 4
  br label %loop.head24

loop.end26:                                       ; preds = %loop.head24
  %63 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %64 = load double, double* %63, align 8
  %65 = fcmp une double %64, 1.000000e+00
  br i1 %65, label %then27, label %else28

then27:                                           ; preds = %loop.end26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %loop.end26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %66 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %67 = load double, double* %66, align 8
  %68 = fcmp une double %67, 2.000000e+00
  br i1 %68, label %then30, label %else31

then30:                                           ; preds = %ifcont29
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont32

else31:                                           ; preds = %ifcont29
  br label %ifcont32

ifcont32:                                         ; preds = %else31, %then30
  %69 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %70 = load double, double* %69, align 8
  %71 = fcmp une double %70, 3.000000e+00
  br i1 %71, label %then33, label %else34

then33:                                           ; preds = %ifcont32
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont35

else34:                                           ; preds = %ifcont32
  br label %ifcont35

ifcont35:                                         ; preds = %else34, %then33
  %72 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %73 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %74 = load double, double* %73, align 8
  %75 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %76 = load double, double* %75, align 8
  %77 = fadd double %74, %76
  %78 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %79 = load double, double* %78, align 8
  %80 = fadd double %77, %79
  %81 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %82 = load double, double* %81, align 8
  %83 = fadd double %80, %82
  store double %83, double* %72, align 8
  %84 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %85 = load double, double* %84, align 8
  %86 = fcmp une double %85, 1.700000e+01
  br i1 %86, label %then36, label %else37

then36:                                           ; preds = %ifcont35
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont38

else37:                                           ; preds = %ifcont35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  %87 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %88 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %89 = load double, double* %88, align 8
  store double %89, double* %87, align 8
  %90 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %91 = load double, double* %90, align 8
  %92 = fcmp une double %91, 1.100000e+01
  br i1 %92, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  store i32 1, i32* %i1, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.end46, %ifcont41
  %93 = load i32, i32* %i1, align 4
  %94 = icmp sle i32 %93, 2
  br i1 %94, label %loop.body43, label %loop.end47

loop.body43:                                      ; preds = %loop.head42
  store i32 1, i32* %j2, align 4
  br label %loop.head44

loop.head44:                                      ; preds = %loop.body45, %loop.body43
  %95 = load i32, i32* %j2, align 4
  %96 = icmp sle i32 %95, 2
  br i1 %96, label %loop.body45, label %loop.end46

loop.body45:                                      ; preds = %loop.head44
  %97 = load i32, i32* %i1, align 4
  %98 = load i32, i32* %j2, align 4
  %99 = sub i32 %97, 1
  %100 = mul i32 1, %99
  %101 = add i32 0, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 2, %102
  %104 = add i32 %101, %103
  %105 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 %104
  %106 = load i32, i32* %i1, align 4
  %107 = load i32, i32* %j2, align 4
  %108 = add i32 %106, %107
  %109 = add i32 %108, 10
  %110 = sitofp i32 %109 to double
  store double %110, double* %105, align 8
  %111 = load i32, i32* %j2, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %j2, align 4
  br label %loop.head44

loop.end46:                                       ; preds = %loop.head44
  %113 = load i32, i32* %i1, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %i1, align 4
  br label %loop.head42

loop.end47:                                       ; preds = %loop.head42
  %115 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 0
  %116 = load double, double* %115, align 8
  %117 = fcmp une double %116, 1.200000e+01
  br i1 %117, label %then48, label %else49

then48:                                           ; preds = %loop.end47
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont50

else49:                                           ; preds = %loop.end47
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %118 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 2
  %119 = load double, double* %118, align 8
  %120 = fcmp une double %119, 1.300000e+01
  br i1 %120, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  %121 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 1
  %122 = load double, double* %121, align 8
  %123 = fcmp une double %122, 1.300000e+01
  br i1 %123, label %then54, label %else55

then54:                                           ; preds = %ifcont53
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont56

else55:                                           ; preds = %ifcont53
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  %124 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 3
  %125 = load double, double* %124, align 8
  %126 = fcmp une double %125, 1.400000e+01
  br i1 %126, label %then57, label %else58

then57:                                           ; preds = %ifcont56
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %ifcont56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont59
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
