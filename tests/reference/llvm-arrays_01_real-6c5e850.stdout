; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@18 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@21 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@31 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@32 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@33 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@36 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@38 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@39 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@42 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@45 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@47 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x double], align 8
  %b = alloca [4 x double], align 8
  %c = alloca [4 x double], align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i, align 4
  %3 = icmp sle i32 %2, 3
  br i1 %3, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %4 = load i32, i32* %i, align 4
  %5 = sub i32 %4, 1
  %6 = mul i32 1, %5
  %7 = add i32 0, %6
  %8 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %7
  %9 = load i32, i32* %i, align 4
  %10 = add i32 %9, 10
  %11 = sitofp i32 %10 to double
  store double %11, double* %8, align 8
  %12 = load i32, i32* %i, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %i, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %14 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %15 = load double, double* %14, align 8
  %16 = fcmp one double %15, 1.100000e+01
  br i1 %16, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %17 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 1
  %18 = load double, double* %17, align 8
  %19 = fcmp one double %18, 1.200000e+01
  br i1 %19, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %20 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 2
  %21 = load double, double* %20, align 8
  %22 = fcmp one double %21, 1.300000e+01
  br i1 %22, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 11, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %23 = load i32, i32* %i, align 4
  %24 = icmp sle i32 %23, 14
  br i1 %24, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %25 = load i32, i32* %i, align 4
  %26 = sub i32 %25, 10
  %27 = sub i32 %26, 1
  %28 = mul i32 1, %27
  %29 = add i32 0, %28
  %30 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %29
  %31 = load i32, i32* %i, align 4
  %32 = sitofp i32 %31 to double
  store double %32, double* %30, align 8
  %33 = load i32, i32* %i, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %i, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %35 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %36 = load double, double* %35, align 8
  %37 = fcmp one double %36, 1.100000e+01
  br i1 %37, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %38 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %39 = load double, double* %38, align 8
  %40 = fcmp one double %39, 1.200000e+01
  br i1 %40, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %41 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %42 = load double, double* %41, align 8
  %43 = fcmp one double %42, 1.300000e+01
  br i1 %43, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %44 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %45 = load double, double* %44, align 8
  %46 = fcmp one double %45, 1.400000e+01
  br i1 %46, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 1, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %47 = load i32, i32* %i, align 4
  %48 = icmp sle i32 %47, 3
  br i1 %48, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %49 = load i32, i32* %i, align 4
  %50 = sub i32 %49, 1
  %51 = mul i32 1, %50
  %52 = add i32 0, %51
  %53 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 %52
  %54 = load i32, i32* %i, align 4
  %55 = sub i32 %54, 1
  %56 = mul i32 1, %55
  %57 = add i32 0, %56
  %58 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 %57
  %59 = load double, double* %58, align 8
  %60 = fsub double %59, 1.000000e+01
  store double %60, double* %53, align 8
  %61 = load i32, i32* %i, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %i, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %63 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %64 = load double, double* %63, align 8
  %65 = fcmp one double %64, 1.000000e+00
  br i1 %65, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %66 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %67 = load double, double* %66, align 8
  %68 = fcmp one double %67, 2.000000e+00
  br i1 %68, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %69 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %70 = load double, double* %69, align 8
  %71 = fcmp one double %70, 3.000000e+00
  br i1 %71, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %72 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %73 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 0
  %74 = load double, double* %73, align 8
  %75 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 1
  %76 = load double, double* %75, align 8
  %77 = fadd double %74, %76
  %78 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 2
  %79 = load double, double* %78, align 8
  %80 = fadd double %77, %79
  %81 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %82 = load double, double* %81, align 8
  %83 = fadd double %80, %82
  store double %83, double* %72, align 8
  %84 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %85 = load double, double* %84, align 8
  %86 = fcmp one double %85, 1.700000e+01
  br i1 %86, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %87 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %88 = getelementptr [3 x double], [3 x double]* %a, i32 0, i32 0
  %89 = load double, double* %88, align 8
  store double %89, double* %87, align 8
  %90 = getelementptr [4 x double], [4 x double]* %b, i32 0, i32 3
  %91 = load double, double* %90, align 8
  %92 = fcmp one double %91, 1.100000e+01
  br i1 %92, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 1, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %93 = load i32, i32* %i, align 4
  %94 = icmp sle i32 %93, 2
  br i1 %94, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  store i32 1, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %95 = load i32, i32* %j, align 4
  %96 = icmp sle i32 %95, 2
  br i1 %96, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %97 = load i32, i32* %i, align 4
  %98 = load i32, i32* %j, align 4
  %99 = sub i32 %97, 1
  %100 = mul i32 1, %99
  %101 = add i32 0, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 2, %102
  %104 = add i32 %101, %103
  %105 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 %104
  %106 = load i32, i32* %i, align 4
  %107 = load i32, i32* %j, align 4
  %108 = add i32 %106, %107
  %109 = add i32 %108, 10
  %110 = sitofp i32 %109 to double
  store double %110, double* %105, align 8
  %111 = load i32, i32* %j, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %j, align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  %113 = load i32, i32* %i, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %i, align 4
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %115 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 0
  %116 = load double, double* %115, align 8
  %117 = fcmp one double %116, 1.200000e+01
  br i1 %117, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %118 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 2
  %119 = load double, double* %118, align 8
  %120 = fcmp one double %119, 1.300000e+01
  br i1 %120, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %121 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 1
  %122 = load double, double* %121, align 8
  %123 = fcmp one double %122, 1.300000e+01
  br i1 %123, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %124 = getelementptr [4 x double], [4 x double]* %c, i32 0, i32 3
  %125 = load double, double* %124, align 8
  %126 = fcmp one double %125, 1.400000e+01
  br i1 %126, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
