; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { double*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32
  store i32 1, i32* %2
  %3 = load i32, i32* %2
  %4 = alloca %dimension_descriptor, i32 %3
  %5 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %5
  store %dimension_descriptor* %4, %dimension_descriptor** %1
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %8
  store i32 1, i32* %9
  store i32 3, i32* %10
  %11 = alloca i32
  store i32 3, i32* %11
  %12 = getelementptr %array, %array* %a, i32 0, i32 0
  %13 = load i32, i32* %11
  %14 = alloca double, i32 %13
  store double* %14, double** %12
  %b = alloca %array
  %15 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %15
  %16 = getelementptr %array, %array* %b, i32 0, i32 2
  %17 = alloca i32
  store i32 1, i32* %17
  %18 = load i32, i32* %17
  %19 = alloca %dimension_descriptor, i32 %18
  %20 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %20
  store %dimension_descriptor* %19, %dimension_descriptor** %16
  %21 = load %dimension_descriptor*, %dimension_descriptor** %16
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 2
  store i32 1, i32* %23
  store i32 1, i32* %24
  store i32 4, i32* %25
  %26 = alloca i32
  store i32 4, i32* %26
  %27 = getelementptr %array, %array* %b, i32 0, i32 0
  %28 = load i32, i32* %26
  %29 = alloca double, i32 %28
  store double* %29, double** %27
  %c = alloca %array
  %30 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %30
  %31 = getelementptr %array, %array* %c, i32 0, i32 2
  %32 = alloca i32
  store i32 2, i32* %32
  %33 = load i32, i32* %32
  %34 = alloca %dimension_descriptor, i32 %33
  %35 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 2, i32* %35
  store %dimension_descriptor* %34, %dimension_descriptor** %31
  %36 = load %dimension_descriptor*, %dimension_descriptor** %31
  %37 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %36, i32 0
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 0
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 1
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 2
  store i32 1, i32* %38
  store i32 1, i32* %39
  store i32 2, i32* %40
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %36, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  store i32 1, i32* %42
  store i32 1, i32* %43
  store i32 2, i32* %44
  %45 = alloca i32
  store i32 4, i32* %45
  %46 = getelementptr %array, %array* %c, i32 0, i32 0
  %47 = load i32, i32* %45
  %48 = alloca double, i32 %47
  store double* %48, double** %46
  %i = alloca i32
  %j = alloca i32
  store i32 0, i32* %i
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %49 = load i32, i32* %i
  %50 = add i32 %49, 1
  %51 = icmp sle i32 %50, 3
  br i1 %51, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %52 = load i32, i32* %i
  %53 = add i32 %52, 1
  store i32 %53, i32* %i
  %54 = load i32, i32* %i
  %55 = getelementptr %array, %array* %a, i32 0, i32 2
  %56 = load %dimension_descriptor*, %dimension_descriptor** %55
  %57 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %56, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 1
  %59 = load i32, i32* %58
  %60 = sub i32 %54, %59
  %61 = mul i32 1, %60
  %62 = add i32 0, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %57, i32 0, i32 2
  %64 = load i32, i32* %63
  %65 = mul i32 1, %64
  %66 = getelementptr %array, %array* %a, i32 0, i32 0
  %67 = load double*, double** %66
  %68 = getelementptr inbounds double, double* %67, i32 %62
  %69 = load i32, i32* %i
  %70 = add i32 %69, 10
  %71 = sitofp i32 %70 to double
  store double %71, double* %68
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %72 = getelementptr %array, %array* %a, i32 0, i32 2
  %73 = load %dimension_descriptor*, %dimension_descriptor** %72
  %74 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %73, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75
  %77 = sub i32 1, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 2
  %81 = load i32, i32* %80
  %82 = mul i32 1, %81
  %83 = getelementptr %array, %array* %a, i32 0, i32 0
  %84 = load double*, double** %83
  %85 = getelementptr inbounds double, double* %84, i32 %79
  %86 = load double, double* %85
  %87 = fcmp une double %86, 1.100000e+01
  br i1 %87, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %88 = getelementptr %array, %array* %a, i32 0, i32 2
  %89 = load %dimension_descriptor*, %dimension_descriptor** %88
  %90 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %89, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 1
  %92 = load i32, i32* %91
  %93 = sub i32 2, %92
  %94 = mul i32 1, %93
  %95 = add i32 0, %94
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %90, i32 0, i32 2
  %97 = load i32, i32* %96
  %98 = mul i32 1, %97
  %99 = getelementptr %array, %array* %a, i32 0, i32 0
  %100 = load double*, double** %99
  %101 = getelementptr inbounds double, double* %100, i32 %95
  %102 = load double, double* %101
  %103 = fcmp une double %102, 1.200000e+01
  br i1 %103, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %104 = getelementptr %array, %array* %a, i32 0, i32 2
  %105 = load %dimension_descriptor*, %dimension_descriptor** %104
  %106 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %105, i32 0
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 1
  %108 = load i32, i32* %107
  %109 = sub i32 3, %108
  %110 = mul i32 1, %109
  %111 = add i32 0, %110
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %106, i32 0, i32 2
  %113 = load i32, i32* %112
  %114 = mul i32 1, %113
  %115 = getelementptr %array, %array* %a, i32 0, i32 0
  %116 = load double*, double** %115
  %117 = getelementptr inbounds double, double* %116, i32 %111
  %118 = load double, double* %117
  %119 = fcmp une double %118, 1.300000e+01
  br i1 %119, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %120 = load i32, i32* %i
  %121 = add i32 %120, 1
  %122 = icmp sle i32 %121, 14
  br i1 %122, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %123 = load i32, i32* %i
  %124 = add i32 %123, 1
  store i32 %124, i32* %i
  %125 = load i32, i32* %i
  %126 = sub i32 %125, 10
  %127 = getelementptr %array, %array* %b, i32 0, i32 2
  %128 = load %dimension_descriptor*, %dimension_descriptor** %127
  %129 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %128, i32 0
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 1
  %131 = load i32, i32* %130
  %132 = sub i32 %126, %131
  %133 = mul i32 1, %132
  %134 = add i32 0, %133
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 2
  %136 = load i32, i32* %135
  %137 = mul i32 1, %136
  %138 = getelementptr %array, %array* %b, i32 0, i32 0
  %139 = load double*, double** %138
  %140 = getelementptr inbounds double, double* %139, i32 %134
  %141 = load i32, i32* %i
  %142 = sitofp i32 %141 to double
  store double %142, double* %140
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %143 = getelementptr %array, %array* %b, i32 0, i32 2
  %144 = load %dimension_descriptor*, %dimension_descriptor** %143
  %145 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %144, i32 0
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 1
  %147 = load i32, i32* %146
  %148 = sub i32 1, %147
  %149 = mul i32 1, %148
  %150 = add i32 0, %149
  %151 = getelementptr %dimension_descriptor, %dimension_descriptor* %145, i32 0, i32 2
  %152 = load i32, i32* %151
  %153 = mul i32 1, %152
  %154 = getelementptr %array, %array* %b, i32 0, i32 0
  %155 = load double*, double** %154
  %156 = getelementptr inbounds double, double* %155, i32 %150
  %157 = load double, double* %156
  %158 = fcmp une double %157, 1.100000e+01
  br i1 %158, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %159 = getelementptr %array, %array* %b, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %163 = load i32, i32* %162
  %164 = sub i32 2, %163
  %165 = mul i32 1, %164
  %166 = add i32 0, %165
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 2
  %168 = load i32, i32* %167
  %169 = mul i32 1, %168
  %170 = getelementptr %array, %array* %b, i32 0, i32 0
  %171 = load double*, double** %170
  %172 = getelementptr inbounds double, double* %171, i32 %166
  %173 = load double, double* %172
  %174 = fcmp une double %173, 1.200000e+01
  br i1 %174, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %175 = getelementptr %array, %array* %b, i32 0, i32 2
  %176 = load %dimension_descriptor*, %dimension_descriptor** %175
  %177 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %176, i32 0
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 1
  %179 = load i32, i32* %178
  %180 = sub i32 3, %179
  %181 = mul i32 1, %180
  %182 = add i32 0, %181
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 2
  %184 = load i32, i32* %183
  %185 = mul i32 1, %184
  %186 = getelementptr %array, %array* %b, i32 0, i32 0
  %187 = load double*, double** %186
  %188 = getelementptr inbounds double, double* %187, i32 %182
  %189 = load double, double* %188
  %190 = fcmp une double %189, 1.300000e+01
  br i1 %190, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %191 = getelementptr %array, %array* %b, i32 0, i32 2
  %192 = load %dimension_descriptor*, %dimension_descriptor** %191
  %193 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %192, i32 0
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %193, i32 0, i32 1
  %195 = load i32, i32* %194
  %196 = sub i32 4, %195
  %197 = mul i32 1, %196
  %198 = add i32 0, %197
  %199 = getelementptr %dimension_descriptor, %dimension_descriptor* %193, i32 0, i32 2
  %200 = load i32, i32* %199
  %201 = mul i32 1, %200
  %202 = getelementptr %array, %array* %b, i32 0, i32 0
  %203 = load double*, double** %202
  %204 = getelementptr inbounds double, double* %203, i32 %198
  %205 = load double, double* %204
  %206 = fcmp une double %205, 1.400000e+01
  br i1 %206, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %207 = load i32, i32* %i
  %208 = add i32 %207, 1
  %209 = icmp sle i32 %208, 3
  br i1 %209, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %210 = load i32, i32* %i
  %211 = add i32 %210, 1
  store i32 %211, i32* %i
  %212 = load i32, i32* %i
  %213 = getelementptr %array, %array* %b, i32 0, i32 2
  %214 = load %dimension_descriptor*, %dimension_descriptor** %213
  %215 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %214, i32 0
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 1
  %217 = load i32, i32* %216
  %218 = sub i32 %212, %217
  %219 = mul i32 1, %218
  %220 = add i32 0, %219
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 2
  %222 = load i32, i32* %221
  %223 = mul i32 1, %222
  %224 = getelementptr %array, %array* %b, i32 0, i32 0
  %225 = load double*, double** %224
  %226 = getelementptr inbounds double, double* %225, i32 %220
  %227 = load i32, i32* %i
  %228 = getelementptr %array, %array* %a, i32 0, i32 2
  %229 = load %dimension_descriptor*, %dimension_descriptor** %228
  %230 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %229, i32 0
  %231 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 1
  %232 = load i32, i32* %231
  %233 = sub i32 %227, %232
  %234 = mul i32 1, %233
  %235 = add i32 0, %234
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %230, i32 0, i32 2
  %237 = load i32, i32* %236
  %238 = mul i32 1, %237
  %239 = getelementptr %array, %array* %a, i32 0, i32 0
  %240 = load double*, double** %239
  %241 = getelementptr inbounds double, double* %240, i32 %235
  %242 = load double, double* %241
  %243 = fsub double %242, 1.000000e+01
  store double %243, double* %226
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %244 = getelementptr %array, %array* %b, i32 0, i32 2
  %245 = load %dimension_descriptor*, %dimension_descriptor** %244
  %246 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %245, i32 0
  %247 = getelementptr %dimension_descriptor, %dimension_descriptor* %246, i32 0, i32 1
  %248 = load i32, i32* %247
  %249 = sub i32 1, %248
  %250 = mul i32 1, %249
  %251 = add i32 0, %250
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %246, i32 0, i32 2
  %253 = load i32, i32* %252
  %254 = mul i32 1, %253
  %255 = getelementptr %array, %array* %b, i32 0, i32 0
  %256 = load double*, double** %255
  %257 = getelementptr inbounds double, double* %256, i32 %251
  %258 = load double, double* %257
  %259 = fcmp une double %258, 1.000000e+00
  br i1 %259, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %260 = getelementptr %array, %array* %b, i32 0, i32 2
  %261 = load %dimension_descriptor*, %dimension_descriptor** %260
  %262 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %261, i32 0
  %263 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 1
  %264 = load i32, i32* %263
  %265 = sub i32 2, %264
  %266 = mul i32 1, %265
  %267 = add i32 0, %266
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %262, i32 0, i32 2
  %269 = load i32, i32* %268
  %270 = mul i32 1, %269
  %271 = getelementptr %array, %array* %b, i32 0, i32 0
  %272 = load double*, double** %271
  %273 = getelementptr inbounds double, double* %272, i32 %267
  %274 = load double, double* %273
  %275 = fcmp une double %274, 2.000000e+00
  br i1 %275, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %276 = getelementptr %array, %array* %b, i32 0, i32 2
  %277 = load %dimension_descriptor*, %dimension_descriptor** %276
  %278 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %277, i32 0
  %279 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 1
  %280 = load i32, i32* %279
  %281 = sub i32 3, %280
  %282 = mul i32 1, %281
  %283 = add i32 0, %282
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 2
  %285 = load i32, i32* %284
  %286 = mul i32 1, %285
  %287 = getelementptr %array, %array* %b, i32 0, i32 0
  %288 = load double*, double** %287
  %289 = getelementptr inbounds double, double* %288, i32 %283
  %290 = load double, double* %289
  %291 = fcmp une double %290, 3.000000e+00
  br i1 %291, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %292 = getelementptr %array, %array* %b, i32 0, i32 2
  %293 = load %dimension_descriptor*, %dimension_descriptor** %292
  %294 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %293, i32 0
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 1
  %296 = load i32, i32* %295
  %297 = sub i32 4, %296
  %298 = mul i32 1, %297
  %299 = add i32 0, %298
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %294, i32 0, i32 2
  %301 = load i32, i32* %300
  %302 = mul i32 1, %301
  %303 = getelementptr %array, %array* %b, i32 0, i32 0
  %304 = load double*, double** %303
  %305 = getelementptr inbounds double, double* %304, i32 %299
  %306 = getelementptr %array, %array* %b, i32 0, i32 2
  %307 = load %dimension_descriptor*, %dimension_descriptor** %306
  %308 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %307, i32 0
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 1
  %310 = load i32, i32* %309
  %311 = sub i32 1, %310
  %312 = mul i32 1, %311
  %313 = add i32 0, %312
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 2
  %315 = load i32, i32* %314
  %316 = mul i32 1, %315
  %317 = getelementptr %array, %array* %b, i32 0, i32 0
  %318 = load double*, double** %317
  %319 = getelementptr inbounds double, double* %318, i32 %313
  %320 = load double, double* %319
  %321 = getelementptr %array, %array* %b, i32 0, i32 2
  %322 = load %dimension_descriptor*, %dimension_descriptor** %321
  %323 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %322, i32 0
  %324 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 1
  %325 = load i32, i32* %324
  %326 = sub i32 2, %325
  %327 = mul i32 1, %326
  %328 = add i32 0, %327
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %323, i32 0, i32 2
  %330 = load i32, i32* %329
  %331 = mul i32 1, %330
  %332 = getelementptr %array, %array* %b, i32 0, i32 0
  %333 = load double*, double** %332
  %334 = getelementptr inbounds double, double* %333, i32 %328
  %335 = load double, double* %334
  %336 = fadd double %320, %335
  %337 = getelementptr %array, %array* %b, i32 0, i32 2
  %338 = load %dimension_descriptor*, %dimension_descriptor** %337
  %339 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %338, i32 0
  %340 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 1
  %341 = load i32, i32* %340
  %342 = sub i32 3, %341
  %343 = mul i32 1, %342
  %344 = add i32 0, %343
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 2
  %346 = load i32, i32* %345
  %347 = mul i32 1, %346
  %348 = getelementptr %array, %array* %b, i32 0, i32 0
  %349 = load double*, double** %348
  %350 = getelementptr inbounds double, double* %349, i32 %344
  %351 = load double, double* %350
  %352 = fadd double %336, %351
  %353 = getelementptr %array, %array* %a, i32 0, i32 2
  %354 = load %dimension_descriptor*, %dimension_descriptor** %353
  %355 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %354, i32 0
  %356 = getelementptr %dimension_descriptor, %dimension_descriptor* %355, i32 0, i32 1
  %357 = load i32, i32* %356
  %358 = sub i32 1, %357
  %359 = mul i32 1, %358
  %360 = add i32 0, %359
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %355, i32 0, i32 2
  %362 = load i32, i32* %361
  %363 = mul i32 1, %362
  %364 = getelementptr %array, %array* %a, i32 0, i32 0
  %365 = load double*, double** %364
  %366 = getelementptr inbounds double, double* %365, i32 %360
  %367 = load double, double* %366
  %368 = fadd double %352, %367
  store double %368, double* %305
  %369 = getelementptr %array, %array* %b, i32 0, i32 2
  %370 = load %dimension_descriptor*, %dimension_descriptor** %369
  %371 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %370, i32 0
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 1
  %373 = load i32, i32* %372
  %374 = sub i32 4, %373
  %375 = mul i32 1, %374
  %376 = add i32 0, %375
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 2
  %378 = load i32, i32* %377
  %379 = mul i32 1, %378
  %380 = getelementptr %array, %array* %b, i32 0, i32 0
  %381 = load double*, double** %380
  %382 = getelementptr inbounds double, double* %381, i32 %376
  %383 = load double, double* %382
  %384 = fcmp une double %383, 1.700000e+01
  br i1 %384, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %385 = getelementptr %array, %array* %b, i32 0, i32 2
  %386 = load %dimension_descriptor*, %dimension_descriptor** %385
  %387 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %386, i32 0
  %388 = getelementptr %dimension_descriptor, %dimension_descriptor* %387, i32 0, i32 1
  %389 = load i32, i32* %388
  %390 = sub i32 4, %389
  %391 = mul i32 1, %390
  %392 = add i32 0, %391
  %393 = getelementptr %dimension_descriptor, %dimension_descriptor* %387, i32 0, i32 2
  %394 = load i32, i32* %393
  %395 = mul i32 1, %394
  %396 = getelementptr %array, %array* %b, i32 0, i32 0
  %397 = load double*, double** %396
  %398 = getelementptr inbounds double, double* %397, i32 %392
  %399 = getelementptr %array, %array* %a, i32 0, i32 2
  %400 = load %dimension_descriptor*, %dimension_descriptor** %399
  %401 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %400, i32 0
  %402 = getelementptr %dimension_descriptor, %dimension_descriptor* %401, i32 0, i32 1
  %403 = load i32, i32* %402
  %404 = sub i32 1, %403
  %405 = mul i32 1, %404
  %406 = add i32 0, %405
  %407 = getelementptr %dimension_descriptor, %dimension_descriptor* %401, i32 0, i32 2
  %408 = load i32, i32* %407
  %409 = mul i32 1, %408
  %410 = getelementptr %array, %array* %a, i32 0, i32 0
  %411 = load double*, double** %410
  %412 = getelementptr inbounds double, double* %411, i32 %406
  %413 = load double, double* %412
  store double %413, double* %398
  %414 = getelementptr %array, %array* %b, i32 0, i32 2
  %415 = load %dimension_descriptor*, %dimension_descriptor** %414
  %416 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %415, i32 0
  %417 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 1
  %418 = load i32, i32* %417
  %419 = sub i32 4, %418
  %420 = mul i32 1, %419
  %421 = add i32 0, %420
  %422 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 2
  %423 = load i32, i32* %422
  %424 = mul i32 1, %423
  %425 = getelementptr %array, %array* %b, i32 0, i32 0
  %426 = load double*, double** %425
  %427 = getelementptr inbounds double, double* %426, i32 %421
  %428 = load double, double* %427
  %429 = fcmp une double %428, 1.100000e+01
  br i1 %429, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %430 = load i32, i32* %i
  %431 = add i32 %430, 1
  %432 = icmp sle i32 %431, 2
  br i1 %432, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %433 = load i32, i32* %i
  %434 = add i32 %433, 1
  store i32 %434, i32* %i
  store i32 0, i32* %j
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %435 = load i32, i32* %j
  %436 = add i32 %435, 1
  %437 = icmp sle i32 %436, 2
  br i1 %437, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %438 = load i32, i32* %j
  %439 = add i32 %438, 1
  store i32 %439, i32* %j
  %440 = load i32, i32* %i
  %441 = load i32, i32* %j
  %442 = getelementptr %array, %array* %c, i32 0, i32 2
  %443 = load %dimension_descriptor*, %dimension_descriptor** %442
  %444 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %443, i32 0
  %445 = getelementptr %dimension_descriptor, %dimension_descriptor* %444, i32 0, i32 1
  %446 = load i32, i32* %445
  %447 = sub i32 %440, %446
  %448 = mul i32 1, %447
  %449 = add i32 0, %448
  %450 = getelementptr %dimension_descriptor, %dimension_descriptor* %444, i32 0, i32 2
  %451 = load i32, i32* %450
  %452 = mul i32 1, %451
  %453 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %443, i32 1
  %454 = getelementptr %dimension_descriptor, %dimension_descriptor* %453, i32 0, i32 1
  %455 = load i32, i32* %454
  %456 = sub i32 %441, %455
  %457 = mul i32 %452, %456
  %458 = add i32 %449, %457
  %459 = getelementptr %dimension_descriptor, %dimension_descriptor* %453, i32 0, i32 2
  %460 = load i32, i32* %459
  %461 = mul i32 %452, %460
  %462 = getelementptr %array, %array* %c, i32 0, i32 0
  %463 = load double*, double** %462
  %464 = getelementptr inbounds double, double* %463, i32 %458
  %465 = load i32, i32* %i
  %466 = load i32, i32* %j
  %467 = add i32 %465, %466
  %468 = add i32 %467, 10
  %469 = sitofp i32 %468 to double
  store double %469, double* %464
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %470 = getelementptr %array, %array* %c, i32 0, i32 2
  %471 = load %dimension_descriptor*, %dimension_descriptor** %470
  %472 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %471, i32 0
  %473 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 1
  %474 = load i32, i32* %473
  %475 = sub i32 1, %474
  %476 = mul i32 1, %475
  %477 = add i32 0, %476
  %478 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 2
  %479 = load i32, i32* %478
  %480 = mul i32 1, %479
  %481 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %471, i32 1
  %482 = getelementptr %dimension_descriptor, %dimension_descriptor* %481, i32 0, i32 1
  %483 = load i32, i32* %482
  %484 = sub i32 1, %483
  %485 = mul i32 %480, %484
  %486 = add i32 %477, %485
  %487 = getelementptr %dimension_descriptor, %dimension_descriptor* %481, i32 0, i32 2
  %488 = load i32, i32* %487
  %489 = mul i32 %480, %488
  %490 = getelementptr %array, %array* %c, i32 0, i32 0
  %491 = load double*, double** %490
  %492 = getelementptr inbounds double, double* %491, i32 %486
  %493 = load double, double* %492
  %494 = fcmp une double %493, 1.200000e+01
  br i1 %494, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %495 = getelementptr %array, %array* %c, i32 0, i32 2
  %496 = load %dimension_descriptor*, %dimension_descriptor** %495
  %497 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %496, i32 0
  %498 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 1
  %499 = load i32, i32* %498
  %500 = sub i32 1, %499
  %501 = mul i32 1, %500
  %502 = add i32 0, %501
  %503 = getelementptr %dimension_descriptor, %dimension_descriptor* %497, i32 0, i32 2
  %504 = load i32, i32* %503
  %505 = mul i32 1, %504
  %506 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %496, i32 1
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 1
  %508 = load i32, i32* %507
  %509 = sub i32 2, %508
  %510 = mul i32 %505, %509
  %511 = add i32 %502, %510
  %512 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 2
  %513 = load i32, i32* %512
  %514 = mul i32 %505, %513
  %515 = getelementptr %array, %array* %c, i32 0, i32 0
  %516 = load double*, double** %515
  %517 = getelementptr inbounds double, double* %516, i32 %511
  %518 = load double, double* %517
  %519 = fcmp une double %518, 1.300000e+01
  br i1 %519, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %520 = getelementptr %array, %array* %c, i32 0, i32 2
  %521 = load %dimension_descriptor*, %dimension_descriptor** %520
  %522 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %521, i32 0
  %523 = getelementptr %dimension_descriptor, %dimension_descriptor* %522, i32 0, i32 1
  %524 = load i32, i32* %523
  %525 = sub i32 2, %524
  %526 = mul i32 1, %525
  %527 = add i32 0, %526
  %528 = getelementptr %dimension_descriptor, %dimension_descriptor* %522, i32 0, i32 2
  %529 = load i32, i32* %528
  %530 = mul i32 1, %529
  %531 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %521, i32 1
  %532 = getelementptr %dimension_descriptor, %dimension_descriptor* %531, i32 0, i32 1
  %533 = load i32, i32* %532
  %534 = sub i32 1, %533
  %535 = mul i32 %530, %534
  %536 = add i32 %527, %535
  %537 = getelementptr %dimension_descriptor, %dimension_descriptor* %531, i32 0, i32 2
  %538 = load i32, i32* %537
  %539 = mul i32 %530, %538
  %540 = getelementptr %array, %array* %c, i32 0, i32 0
  %541 = load double*, double** %540
  %542 = getelementptr inbounds double, double* %541, i32 %536
  %543 = load double, double* %542
  %544 = fcmp une double %543, 1.300000e+01
  br i1 %544, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %545 = getelementptr %array, %array* %c, i32 0, i32 2
  %546 = load %dimension_descriptor*, %dimension_descriptor** %545
  %547 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %546, i32 0
  %548 = getelementptr %dimension_descriptor, %dimension_descriptor* %547, i32 0, i32 1
  %549 = load i32, i32* %548
  %550 = sub i32 2, %549
  %551 = mul i32 1, %550
  %552 = add i32 0, %551
  %553 = getelementptr %dimension_descriptor, %dimension_descriptor* %547, i32 0, i32 2
  %554 = load i32, i32* %553
  %555 = mul i32 1, %554
  %556 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %546, i32 1
  %557 = getelementptr %dimension_descriptor, %dimension_descriptor* %556, i32 0, i32 1
  %558 = load i32, i32* %557
  %559 = sub i32 2, %558
  %560 = mul i32 %555, %559
  %561 = add i32 %552, %560
  %562 = getelementptr %dimension_descriptor, %dimension_descriptor* %556, i32 0, i32 2
  %563 = load i32, i32* %562
  %564 = mul i32 %555, %563
  %565 = getelementptr %array, %array* %c, i32 0, i32 0
  %566 = load double*, double** %565
  %567 = getelementptr inbounds double, double* %566, i32 %561
  %568 = load double, double* %567
  %569 = fcmp une double %568, 1.400000e+01
  br i1 %569, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
