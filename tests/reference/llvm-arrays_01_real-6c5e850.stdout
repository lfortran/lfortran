; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { double*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array, %array* %a, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 3, i32* %12, align 4
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = getelementptr %array, %array* %a, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = alloca double, i32 %15, align 8
  store double* %16, double** %14, align 8
  %b = alloca %array, align 8
  %17 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr %array, %array* %b, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  %22 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %22, align 4
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %23 = load %dimension_descriptor*, %dimension_descriptor** %18, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 4, i32* %27, align 4
  %28 = alloca i32, align 4
  store i32 4, i32* %28, align 4
  %29 = getelementptr %array, %array* %b, i32 0, i32 0
  %30 = load i32, i32* %28, align 4
  %31 = alloca double, i32 %30, align 8
  store double* %31, double** %29, align 8
  %c = alloca %array, align 8
  %32 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %32, align 4
  %33 = getelementptr %array, %array* %c, i32 0, i32 2
  %34 = alloca i32, align 4
  store i32 2, i32* %34, align 4
  %35 = load i32, i32* %34, align 4
  %36 = alloca %dimension_descriptor, i32 %35, align 8
  %37 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 2, i32* %37, align 4
  store %dimension_descriptor* %36, %dimension_descriptor** %33, align 8
  %38 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  store i32 1, i32* %40, align 4
  store i32 1, i32* %41, align 4
  store i32 2, i32* %42, align 4
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  store i32 2, i32* %44, align 4
  store i32 1, i32* %45, align 4
  store i32 2, i32* %46, align 4
  %47 = alloca i32, align 4
  store i32 4, i32* %47, align 4
  %48 = getelementptr %array, %array* %c, i32 0, i32 0
  %49 = load i32, i32* %47, align 4
  %50 = alloca double, i32 %49, align 8
  store double* %50, double** %48, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %51 = load i32, i32* %i, align 4
  %52 = add i32 %51, 1
  %53 = icmp sle i32 %52, 3
  br i1 %53, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %i, align 4
  %56 = load i32, i32* %i, align 4
  %57 = getelementptr %array, %array* %a, i32 0, i32 2
  %58 = load %dimension_descriptor*, %dimension_descriptor** %57, align 8
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %58, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %56, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 %64, %62
  %66 = add i32 0, %65
  %67 = getelementptr %array, %array* %a, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %66, %68
  %70 = getelementptr %array, %array* %a, i32 0, i32 0
  %71 = load double*, double** %70, align 8
  %72 = getelementptr inbounds double, double* %71, i32 %69
  %73 = load i32, i32* %i, align 4
  %74 = add i32 %73, 10
  %75 = sitofp i32 %74 to double
  store double %75, double* %72, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %76 = getelementptr %array, %array* %a, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 1, %80
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %83, %81
  %85 = add i32 0, %84
  %86 = getelementptr %array, %array* %a, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %85, %87
  %89 = getelementptr %array, %array* %a, i32 0, i32 0
  %90 = load double*, double** %89, align 8
  %91 = getelementptr inbounds double, double* %90, i32 %88
  %92 = load double, double* %91, align 8
  %93 = fcmp une double %92, 1.100000e+01
  br i1 %93, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %94 = getelementptr %array, %array* %a, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = sub i32 2, %98
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = mul i32 %101, %99
  %103 = add i32 0, %102
  %104 = getelementptr %array, %array* %a, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %103, %105
  %107 = getelementptr %array, %array* %a, i32 0, i32 0
  %108 = load double*, double** %107, align 8
  %109 = getelementptr inbounds double, double* %108, i32 %106
  %110 = load double, double* %109, align 8
  %111 = fcmp une double %110, 1.200000e+01
  br i1 %111, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %112 = getelementptr %array, %array* %a, i32 0, i32 2
  %113 = load %dimension_descriptor*, %dimension_descriptor** %112, align 8
  %114 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = sub i32 3, %116
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = mul i32 %119, %117
  %121 = add i32 0, %120
  %122 = getelementptr %array, %array* %a, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %121, %123
  %125 = getelementptr %array, %array* %a, i32 0, i32 0
  %126 = load double*, double** %125, align 8
  %127 = getelementptr inbounds double, double* %126, i32 %124
  %128 = load double, double* %127, align 8
  %129 = fcmp une double %128, 1.300000e+01
  br i1 %129, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %130 = load i32, i32* %i, align 4
  %131 = add i32 %130, 1
  %132 = icmp sle i32 %131, 14
  br i1 %132, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %133 = load i32, i32* %i, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %i, align 4
  %135 = load i32, i32* %i, align 4
  %136 = sub i32 %135, 10
  %137 = getelementptr %array, %array* %b, i32 0, i32 2
  %138 = load %dimension_descriptor*, %dimension_descriptor** %137, align 8
  %139 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %138, i32 0
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = sub i32 %136, %141
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %139, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = mul i32 %144, %142
  %146 = add i32 0, %145
  %147 = getelementptr %array, %array* %b, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %146, %148
  %150 = getelementptr %array, %array* %b, i32 0, i32 0
  %151 = load double*, double** %150, align 8
  %152 = getelementptr inbounds double, double* %151, i32 %149
  %153 = load i32, i32* %i, align 4
  %154 = sitofp i32 %153 to double
  store double %154, double* %152, align 8
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %155 = getelementptr %array, %array* %b, i32 0, i32 2
  %156 = load %dimension_descriptor*, %dimension_descriptor** %155, align 8
  %157 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %156, i32 0
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sub i32 1, %159
  %161 = getelementptr %dimension_descriptor, %dimension_descriptor* %157, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = mul i32 %162, %160
  %164 = add i32 0, %163
  %165 = getelementptr %array, %array* %b, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %164, %166
  %168 = getelementptr %array, %array* %b, i32 0, i32 0
  %169 = load double*, double** %168, align 8
  %170 = getelementptr inbounds double, double* %169, i32 %167
  %171 = load double, double* %170, align 8
  %172 = fcmp une double %171, 1.100000e+01
  br i1 %172, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %173 = getelementptr %array, %array* %b, i32 0, i32 2
  %174 = load %dimension_descriptor*, %dimension_descriptor** %173, align 8
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %174, i32 0
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = sub i32 2, %177
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = mul i32 %180, %178
  %182 = add i32 0, %181
  %183 = getelementptr %array, %array* %b, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = add i32 %182, %184
  %186 = getelementptr %array, %array* %b, i32 0, i32 0
  %187 = load double*, double** %186, align 8
  %188 = getelementptr inbounds double, double* %187, i32 %185
  %189 = load double, double* %188, align 8
  %190 = fcmp une double %189, 1.200000e+01
  br i1 %190, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %191 = getelementptr %array, %array* %b, i32 0, i32 2
  %192 = load %dimension_descriptor*, %dimension_descriptor** %191, align 8
  %193 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %192, i32 0
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %193, i32 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = sub i32 3, %195
  %197 = getelementptr %dimension_descriptor, %dimension_descriptor* %193, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = mul i32 %198, %196
  %200 = add i32 0, %199
  %201 = getelementptr %array, %array* %b, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = add i32 %200, %202
  %204 = getelementptr %array, %array* %b, i32 0, i32 0
  %205 = load double*, double** %204, align 8
  %206 = getelementptr inbounds double, double* %205, i32 %203
  %207 = load double, double* %206, align 8
  %208 = fcmp une double %207, 1.300000e+01
  br i1 %208, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %209 = getelementptr %array, %array* %b, i32 0, i32 2
  %210 = load %dimension_descriptor*, %dimension_descriptor** %209, align 8
  %211 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %210, i32 0
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = sub i32 4, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %211, i32 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %216, %214
  %218 = add i32 0, %217
  %219 = getelementptr %array, %array* %b, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = add i32 %218, %220
  %222 = getelementptr %array, %array* %b, i32 0, i32 0
  %223 = load double*, double** %222, align 8
  %224 = getelementptr inbounds double, double* %223, i32 %221
  %225 = load double, double* %224, align 8
  %226 = fcmp une double %225, 1.400000e+01
  br i1 %226, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %227 = load i32, i32* %i, align 4
  %228 = add i32 %227, 1
  %229 = icmp sle i32 %228, 3
  br i1 %229, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %230 = load i32, i32* %i, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %i, align 4
  %232 = load i32, i32* %i, align 4
  %233 = getelementptr %array, %array* %b, i32 0, i32 2
  %234 = load %dimension_descriptor*, %dimension_descriptor** %233, align 8
  %235 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %234, i32 0
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = sub i32 %232, %237
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %235, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = mul i32 %240, %238
  %242 = add i32 0, %241
  %243 = getelementptr %array, %array* %b, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = add i32 %242, %244
  %246 = getelementptr %array, %array* %b, i32 0, i32 0
  %247 = load double*, double** %246, align 8
  %248 = getelementptr inbounds double, double* %247, i32 %245
  %249 = load i32, i32* %i, align 4
  %250 = getelementptr %array, %array* %a, i32 0, i32 2
  %251 = load %dimension_descriptor*, %dimension_descriptor** %250, align 8
  %252 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %251, i32 0
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = sub i32 %249, %254
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = mul i32 %257, %255
  %259 = add i32 0, %258
  %260 = getelementptr %array, %array* %a, i32 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = add i32 %259, %261
  %263 = getelementptr %array, %array* %a, i32 0, i32 0
  %264 = load double*, double** %263, align 8
  %265 = getelementptr inbounds double, double* %264, i32 %262
  %266 = load double, double* %265, align 8
  %267 = fsub double %266, 1.000000e+01
  store double %267, double* %248, align 8
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %268 = getelementptr %array, %array* %b, i32 0, i32 2
  %269 = load %dimension_descriptor*, %dimension_descriptor** %268, align 8
  %270 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %269, i32 0
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = sub i32 1, %272
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %270, i32 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = mul i32 %275, %273
  %277 = add i32 0, %276
  %278 = getelementptr %array, %array* %b, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = add i32 %277, %279
  %281 = getelementptr %array, %array* %b, i32 0, i32 0
  %282 = load double*, double** %281, align 8
  %283 = getelementptr inbounds double, double* %282, i32 %280
  %284 = load double, double* %283, align 8
  %285 = fcmp une double %284, 1.000000e+00
  br i1 %285, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %286 = getelementptr %array, %array* %b, i32 0, i32 2
  %287 = load %dimension_descriptor*, %dimension_descriptor** %286, align 8
  %288 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %287, i32 0
  %289 = getelementptr %dimension_descriptor, %dimension_descriptor* %288, i32 0, i32 1
  %290 = load i32, i32* %289, align 4
  %291 = sub i32 2, %290
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %288, i32 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = mul i32 %293, %291
  %295 = add i32 0, %294
  %296 = getelementptr %array, %array* %b, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = add i32 %295, %297
  %299 = getelementptr %array, %array* %b, i32 0, i32 0
  %300 = load double*, double** %299, align 8
  %301 = getelementptr inbounds double, double* %300, i32 %298
  %302 = load double, double* %301, align 8
  %303 = fcmp une double %302, 2.000000e+00
  br i1 %303, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %304 = getelementptr %array, %array* %b, i32 0, i32 2
  %305 = load %dimension_descriptor*, %dimension_descriptor** %304, align 8
  %306 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %305, i32 0
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sub i32 3, %308
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = mul i32 %311, %309
  %313 = add i32 0, %312
  %314 = getelementptr %array, %array* %b, i32 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = add i32 %313, %315
  %317 = getelementptr %array, %array* %b, i32 0, i32 0
  %318 = load double*, double** %317, align 8
  %319 = getelementptr inbounds double, double* %318, i32 %316
  %320 = load double, double* %319, align 8
  %321 = fcmp une double %320, 3.000000e+00
  br i1 %321, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %322 = getelementptr %array, %array* %b, i32 0, i32 2
  %323 = load %dimension_descriptor*, %dimension_descriptor** %322, align 8
  %324 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %323, i32 0
  %325 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = sub i32 4, %326
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %324, i32 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = mul i32 %329, %327
  %331 = add i32 0, %330
  %332 = getelementptr %array, %array* %b, i32 0, i32 1
  %333 = load i32, i32* %332, align 4
  %334 = add i32 %331, %333
  %335 = getelementptr %array, %array* %b, i32 0, i32 0
  %336 = load double*, double** %335, align 8
  %337 = getelementptr inbounds double, double* %336, i32 %334
  %338 = getelementptr %array, %array* %b, i32 0, i32 2
  %339 = load %dimension_descriptor*, %dimension_descriptor** %338, align 8
  %340 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %339, i32 0
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = sub i32 1, %342
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = mul i32 %345, %343
  %347 = add i32 0, %346
  %348 = getelementptr %array, %array* %b, i32 0, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = add i32 %347, %349
  %351 = getelementptr %array, %array* %b, i32 0, i32 0
  %352 = load double*, double** %351, align 8
  %353 = getelementptr inbounds double, double* %352, i32 %350
  %354 = load double, double* %353, align 8
  %355 = getelementptr %array, %array* %b, i32 0, i32 2
  %356 = load %dimension_descriptor*, %dimension_descriptor** %355, align 8
  %357 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %356, i32 0
  %358 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 1
  %359 = load i32, i32* %358, align 4
  %360 = sub i32 2, %359
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = mul i32 %362, %360
  %364 = add i32 0, %363
  %365 = getelementptr %array, %array* %b, i32 0, i32 1
  %366 = load i32, i32* %365, align 4
  %367 = add i32 %364, %366
  %368 = getelementptr %array, %array* %b, i32 0, i32 0
  %369 = load double*, double** %368, align 8
  %370 = getelementptr inbounds double, double* %369, i32 %367
  %371 = load double, double* %370, align 8
  %372 = fadd double %354, %371
  %373 = getelementptr %array, %array* %b, i32 0, i32 2
  %374 = load %dimension_descriptor*, %dimension_descriptor** %373, align 8
  %375 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %374, i32 0
  %376 = getelementptr %dimension_descriptor, %dimension_descriptor* %375, i32 0, i32 1
  %377 = load i32, i32* %376, align 4
  %378 = sub i32 3, %377
  %379 = getelementptr %dimension_descriptor, %dimension_descriptor* %375, i32 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = mul i32 %380, %378
  %382 = add i32 0, %381
  %383 = getelementptr %array, %array* %b, i32 0, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = add i32 %382, %384
  %386 = getelementptr %array, %array* %b, i32 0, i32 0
  %387 = load double*, double** %386, align 8
  %388 = getelementptr inbounds double, double* %387, i32 %385
  %389 = load double, double* %388, align 8
  %390 = fadd double %372, %389
  %391 = getelementptr %array, %array* %a, i32 0, i32 2
  %392 = load %dimension_descriptor*, %dimension_descriptor** %391, align 8
  %393 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %392, i32 0
  %394 = getelementptr %dimension_descriptor, %dimension_descriptor* %393, i32 0, i32 1
  %395 = load i32, i32* %394, align 4
  %396 = sub i32 1, %395
  %397 = getelementptr %dimension_descriptor, %dimension_descriptor* %393, i32 0, i32 0
  %398 = load i32, i32* %397, align 4
  %399 = mul i32 %398, %396
  %400 = add i32 0, %399
  %401 = getelementptr %array, %array* %a, i32 0, i32 1
  %402 = load i32, i32* %401, align 4
  %403 = add i32 %400, %402
  %404 = getelementptr %array, %array* %a, i32 0, i32 0
  %405 = load double*, double** %404, align 8
  %406 = getelementptr inbounds double, double* %405, i32 %403
  %407 = load double, double* %406, align 8
  %408 = fadd double %390, %407
  store double %408, double* %337, align 8
  %409 = getelementptr %array, %array* %b, i32 0, i32 2
  %410 = load %dimension_descriptor*, %dimension_descriptor** %409, align 8
  %411 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %410, i32 0
  %412 = getelementptr %dimension_descriptor, %dimension_descriptor* %411, i32 0, i32 1
  %413 = load i32, i32* %412, align 4
  %414 = sub i32 4, %413
  %415 = getelementptr %dimension_descriptor, %dimension_descriptor* %411, i32 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = mul i32 %416, %414
  %418 = add i32 0, %417
  %419 = getelementptr %array, %array* %b, i32 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = add i32 %418, %420
  %422 = getelementptr %array, %array* %b, i32 0, i32 0
  %423 = load double*, double** %422, align 8
  %424 = getelementptr inbounds double, double* %423, i32 %421
  %425 = load double, double* %424, align 8
  %426 = fcmp une double %425, 1.700000e+01
  br i1 %426, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %427 = getelementptr %array, %array* %b, i32 0, i32 2
  %428 = load %dimension_descriptor*, %dimension_descriptor** %427, align 8
  %429 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %428, i32 0
  %430 = getelementptr %dimension_descriptor, %dimension_descriptor* %429, i32 0, i32 1
  %431 = load i32, i32* %430, align 4
  %432 = sub i32 4, %431
  %433 = getelementptr %dimension_descriptor, %dimension_descriptor* %429, i32 0, i32 0
  %434 = load i32, i32* %433, align 4
  %435 = mul i32 %434, %432
  %436 = add i32 0, %435
  %437 = getelementptr %array, %array* %b, i32 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = add i32 %436, %438
  %440 = getelementptr %array, %array* %b, i32 0, i32 0
  %441 = load double*, double** %440, align 8
  %442 = getelementptr inbounds double, double* %441, i32 %439
  %443 = getelementptr %array, %array* %a, i32 0, i32 2
  %444 = load %dimension_descriptor*, %dimension_descriptor** %443, align 8
  %445 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %444, i32 0
  %446 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = sub i32 1, %447
  %449 = getelementptr %dimension_descriptor, %dimension_descriptor* %445, i32 0, i32 0
  %450 = load i32, i32* %449, align 4
  %451 = mul i32 %450, %448
  %452 = add i32 0, %451
  %453 = getelementptr %array, %array* %a, i32 0, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = add i32 %452, %454
  %456 = getelementptr %array, %array* %a, i32 0, i32 0
  %457 = load double*, double** %456, align 8
  %458 = getelementptr inbounds double, double* %457, i32 %455
  %459 = load double, double* %458, align 8
  store double %459, double* %442, align 8
  %460 = getelementptr %array, %array* %b, i32 0, i32 2
  %461 = load %dimension_descriptor*, %dimension_descriptor** %460, align 8
  %462 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %461, i32 0
  %463 = getelementptr %dimension_descriptor, %dimension_descriptor* %462, i32 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = sub i32 4, %464
  %466 = getelementptr %dimension_descriptor, %dimension_descriptor* %462, i32 0, i32 0
  %467 = load i32, i32* %466, align 4
  %468 = mul i32 %467, %465
  %469 = add i32 0, %468
  %470 = getelementptr %array, %array* %b, i32 0, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = add i32 %469, %471
  %473 = getelementptr %array, %array* %b, i32 0, i32 0
  %474 = load double*, double** %473, align 8
  %475 = getelementptr inbounds double, double* %474, i32 %472
  %476 = load double, double* %475, align 8
  %477 = fcmp une double %476, 1.100000e+01
  br i1 %477, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %478 = load i32, i32* %i, align 4
  %479 = add i32 %478, 1
  %480 = icmp sle i32 %479, 2
  br i1 %480, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %481 = load i32, i32* %i, align 4
  %482 = add i32 %481, 1
  store i32 %482, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %483 = load i32, i32* %j, align 4
  %484 = add i32 %483, 1
  %485 = icmp sle i32 %484, 2
  br i1 %485, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %486 = load i32, i32* %j, align 4
  %487 = add i32 %486, 1
  store i32 %487, i32* %j, align 4
  %488 = load i32, i32* %i, align 4
  %489 = load i32, i32* %j, align 4
  %490 = getelementptr %array, %array* %c, i32 0, i32 2
  %491 = load %dimension_descriptor*, %dimension_descriptor** %490, align 8
  %492 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %491, i32 0
  %493 = getelementptr %dimension_descriptor, %dimension_descriptor* %492, i32 0, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = sub i32 %488, %494
  %496 = getelementptr %dimension_descriptor, %dimension_descriptor* %492, i32 0, i32 0
  %497 = load i32, i32* %496, align 4
  %498 = mul i32 %497, %495
  %499 = add i32 0, %498
  %500 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %491, i32 1
  %501 = getelementptr %dimension_descriptor, %dimension_descriptor* %500, i32 0, i32 1
  %502 = load i32, i32* %501, align 4
  %503 = sub i32 %489, %502
  %504 = getelementptr %dimension_descriptor, %dimension_descriptor* %500, i32 0, i32 0
  %505 = load i32, i32* %504, align 4
  %506 = mul i32 %505, %503
  %507 = add i32 %499, %506
  %508 = getelementptr %array, %array* %c, i32 0, i32 1
  %509 = load i32, i32* %508, align 4
  %510 = add i32 %507, %509
  %511 = getelementptr %array, %array* %c, i32 0, i32 0
  %512 = load double*, double** %511, align 8
  %513 = getelementptr inbounds double, double* %512, i32 %510
  %514 = load i32, i32* %i, align 4
  %515 = load i32, i32* %j, align 4
  %516 = add i32 %514, %515
  %517 = add i32 %516, 10
  %518 = sitofp i32 %517 to double
  store double %518, double* %513, align 8
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %519 = getelementptr %array, %array* %c, i32 0, i32 2
  %520 = load %dimension_descriptor*, %dimension_descriptor** %519, align 8
  %521 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %520, i32 0
  %522 = getelementptr %dimension_descriptor, %dimension_descriptor* %521, i32 0, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = sub i32 1, %523
  %525 = getelementptr %dimension_descriptor, %dimension_descriptor* %521, i32 0, i32 0
  %526 = load i32, i32* %525, align 4
  %527 = mul i32 %526, %524
  %528 = add i32 0, %527
  %529 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %520, i32 1
  %530 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 1
  %531 = load i32, i32* %530, align 4
  %532 = sub i32 1, %531
  %533 = getelementptr %dimension_descriptor, %dimension_descriptor* %529, i32 0, i32 0
  %534 = load i32, i32* %533, align 4
  %535 = mul i32 %534, %532
  %536 = add i32 %528, %535
  %537 = getelementptr %array, %array* %c, i32 0, i32 1
  %538 = load i32, i32* %537, align 4
  %539 = add i32 %536, %538
  %540 = getelementptr %array, %array* %c, i32 0, i32 0
  %541 = load double*, double** %540, align 8
  %542 = getelementptr inbounds double, double* %541, i32 %539
  %543 = load double, double* %542, align 8
  %544 = fcmp une double %543, 1.200000e+01
  br i1 %544, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %545 = getelementptr %array, %array* %c, i32 0, i32 2
  %546 = load %dimension_descriptor*, %dimension_descriptor** %545, align 8
  %547 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %546, i32 0
  %548 = getelementptr %dimension_descriptor, %dimension_descriptor* %547, i32 0, i32 1
  %549 = load i32, i32* %548, align 4
  %550 = sub i32 1, %549
  %551 = getelementptr %dimension_descriptor, %dimension_descriptor* %547, i32 0, i32 0
  %552 = load i32, i32* %551, align 4
  %553 = mul i32 %552, %550
  %554 = add i32 0, %553
  %555 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %546, i32 1
  %556 = getelementptr %dimension_descriptor, %dimension_descriptor* %555, i32 0, i32 1
  %557 = load i32, i32* %556, align 4
  %558 = sub i32 2, %557
  %559 = getelementptr %dimension_descriptor, %dimension_descriptor* %555, i32 0, i32 0
  %560 = load i32, i32* %559, align 4
  %561 = mul i32 %560, %558
  %562 = add i32 %554, %561
  %563 = getelementptr %array, %array* %c, i32 0, i32 1
  %564 = load i32, i32* %563, align 4
  %565 = add i32 %562, %564
  %566 = getelementptr %array, %array* %c, i32 0, i32 0
  %567 = load double*, double** %566, align 8
  %568 = getelementptr inbounds double, double* %567, i32 %565
  %569 = load double, double* %568, align 8
  %570 = fcmp une double %569, 1.300000e+01
  br i1 %570, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %571 = getelementptr %array, %array* %c, i32 0, i32 2
  %572 = load %dimension_descriptor*, %dimension_descriptor** %571, align 8
  %573 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %572, i32 0
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = sub i32 2, %575
  %577 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 0
  %578 = load i32, i32* %577, align 4
  %579 = mul i32 %578, %576
  %580 = add i32 0, %579
  %581 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %572, i32 1
  %582 = getelementptr %dimension_descriptor, %dimension_descriptor* %581, i32 0, i32 1
  %583 = load i32, i32* %582, align 4
  %584 = sub i32 1, %583
  %585 = getelementptr %dimension_descriptor, %dimension_descriptor* %581, i32 0, i32 0
  %586 = load i32, i32* %585, align 4
  %587 = mul i32 %586, %584
  %588 = add i32 %580, %587
  %589 = getelementptr %array, %array* %c, i32 0, i32 1
  %590 = load i32, i32* %589, align 4
  %591 = add i32 %588, %590
  %592 = getelementptr %array, %array* %c, i32 0, i32 0
  %593 = load double*, double** %592, align 8
  %594 = getelementptr inbounds double, double* %593, i32 %591
  %595 = load double, double* %594, align 8
  %596 = fcmp une double %595, 1.300000e+01
  br i1 %596, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %597 = getelementptr %array, %array* %c, i32 0, i32 2
  %598 = load %dimension_descriptor*, %dimension_descriptor** %597, align 8
  %599 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %598, i32 0
  %600 = getelementptr %dimension_descriptor, %dimension_descriptor* %599, i32 0, i32 1
  %601 = load i32, i32* %600, align 4
  %602 = sub i32 2, %601
  %603 = getelementptr %dimension_descriptor, %dimension_descriptor* %599, i32 0, i32 0
  %604 = load i32, i32* %603, align 4
  %605 = mul i32 %604, %602
  %606 = add i32 0, %605
  %607 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %598, i32 1
  %608 = getelementptr %dimension_descriptor, %dimension_descriptor* %607, i32 0, i32 1
  %609 = load i32, i32* %608, align 4
  %610 = sub i32 2, %609
  %611 = getelementptr %dimension_descriptor, %dimension_descriptor* %607, i32 0, i32 0
  %612 = load i32, i32* %611, align 4
  %613 = mul i32 %612, %610
  %614 = add i32 %606, %613
  %615 = getelementptr %array, %array* %c, i32 0, i32 1
  %616 = load i32, i32* %615, align 4
  %617 = add i32 %614, %616
  %618 = getelementptr %array, %array* %c, i32 0, i32 0
  %619 = load double*, double** %618, align 8
  %620 = getelementptr inbounds double, double* %619, i32 %617
  %621 = load double, double* %620, align 8
  %622 = fcmp une double %621, 1.400000e+01
  br i1 %622, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
