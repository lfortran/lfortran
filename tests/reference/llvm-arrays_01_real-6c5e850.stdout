; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { double*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array, %array* %a, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 3, i32* %12, align 4
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = getelementptr %array, %array* %a, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = alloca double, i32 %15, align 8
  store double* %16, double** %14, align 8
  %b = alloca %array, align 8
  %17 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr %array, %array* %b, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  %22 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %22, align 4
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %23 = load %dimension_descriptor*, %dimension_descriptor** %18, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 4, i32* %27, align 4
  %28 = alloca i32, align 4
  store i32 4, i32* %28, align 4
  %29 = getelementptr %array, %array* %b, i32 0, i32 0
  %30 = load i32, i32* %28, align 4
  %31 = alloca double, i32 %30, align 8
  store double* %31, double** %29, align 8
  %c = alloca %array, align 8
  %32 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %32, align 4
  %33 = getelementptr %array, %array* %c, i32 0, i32 2
  %34 = alloca i32, align 4
  store i32 2, i32* %34, align 4
  %35 = load i32, i32* %34, align 4
  %36 = alloca %dimension_descriptor, i32 %35, align 8
  %37 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 2, i32* %37, align 4
  store %dimension_descriptor* %36, %dimension_descriptor** %33, align 8
  %38 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  store i32 1, i32* %40, align 4
  store i32 1, i32* %41, align 4
  store i32 2, i32* %42, align 4
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  store i32 1, i32* %44, align 4
  store i32 1, i32* %45, align 4
  store i32 2, i32* %46, align 4
  %47 = alloca i32, align 4
  store i32 4, i32* %47, align 4
  %48 = getelementptr %array, %array* %c, i32 0, i32 0
  %49 = load i32, i32* %47, align 4
  %50 = alloca double, i32 %49, align 8
  store double* %50, double** %48, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %51 = load i32, i32* %i, align 4
  %52 = add i32 %51, 1
  %53 = icmp sle i32 %52, 3
  br i1 %53, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %i, align 4
  %56 = load i32, i32* %i, align 4
  %57 = getelementptr %array, %array* %a, i32 0, i32 2
  %58 = load %dimension_descriptor*, %dimension_descriptor** %57, align 8
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %58, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %56, %61
  %63 = mul i32 1, %62
  %64 = add i32 0, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 1, %66
  %68 = getelementptr %array, %array* %a, i32 0, i32 0
  %69 = load double*, double** %68, align 8
  %70 = getelementptr inbounds double, double* %69, i32 %64
  %71 = load i32, i32* %i, align 4
  %72 = add i32 %71, 10
  %73 = sitofp i32 %72 to double
  store double %73, double* %70, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %74 = getelementptr %array, %array* %a, i32 0, i32 2
  %75 = load %dimension_descriptor*, %dimension_descriptor** %74, align 8
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %75, i32 0
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 1, %78
  %80 = mul i32 1, %79
  %81 = add i32 0, %80
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 1, %83
  %85 = getelementptr %array, %array* %a, i32 0, i32 0
  %86 = load double*, double** %85, align 8
  %87 = getelementptr inbounds double, double* %86, i32 %81
  %88 = load double, double* %87, align 8
  %89 = fcmp une double %88, 1.100000e+01
  br i1 %89, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %90 = getelementptr %array, %array* %a, i32 0, i32 2
  %91 = load %dimension_descriptor*, %dimension_descriptor** %90, align 8
  %92 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %91, i32 0
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 2, %94
  %96 = mul i32 1, %95
  %97 = add i32 0, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 1, %99
  %101 = getelementptr %array, %array* %a, i32 0, i32 0
  %102 = load double*, double** %101, align 8
  %103 = getelementptr inbounds double, double* %102, i32 %97
  %104 = load double, double* %103, align 8
  %105 = fcmp une double %104, 1.200000e+01
  br i1 %105, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %106 = getelementptr %array, %array* %a, i32 0, i32 2
  %107 = load %dimension_descriptor*, %dimension_descriptor** %106, align 8
  %108 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %107, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = sub i32 3, %110
  %112 = mul i32 1, %111
  %113 = add i32 0, %112
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = mul i32 1, %115
  %117 = getelementptr %array, %array* %a, i32 0, i32 0
  %118 = load double*, double** %117, align 8
  %119 = getelementptr inbounds double, double* %118, i32 %113
  %120 = load double, double* %119, align 8
  %121 = fcmp une double %120, 1.300000e+01
  br i1 %121, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %122 = load i32, i32* %i, align 4
  %123 = add i32 %122, 1
  %124 = icmp sle i32 %123, 14
  br i1 %124, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %125 = load i32, i32* %i, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %i, align 4
  %127 = load i32, i32* %i, align 4
  %128 = sub i32 %127, 10
  %129 = getelementptr %array, %array* %b, i32 0, i32 2
  %130 = load %dimension_descriptor*, %dimension_descriptor** %129, align 8
  %131 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %130, i32 0
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %128, %133
  %135 = mul i32 1, %134
  %136 = add i32 0, %135
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = mul i32 1, %138
  %140 = getelementptr %array, %array* %b, i32 0, i32 0
  %141 = load double*, double** %140, align 8
  %142 = getelementptr inbounds double, double* %141, i32 %136
  %143 = load i32, i32* %i, align 4
  %144 = sitofp i32 %143 to double
  store double %144, double* %142, align 8
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %145 = getelementptr %array, %array* %b, i32 0, i32 2
  %146 = load %dimension_descriptor*, %dimension_descriptor** %145, align 8
  %147 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %146, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 1, %149
  %151 = mul i32 1, %150
  %152 = add i32 0, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 1, %154
  %156 = getelementptr %array, %array* %b, i32 0, i32 0
  %157 = load double*, double** %156, align 8
  %158 = getelementptr inbounds double, double* %157, i32 %152
  %159 = load double, double* %158, align 8
  %160 = fcmp une double %159, 1.100000e+01
  br i1 %160, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %161 = getelementptr %array, %array* %b, i32 0, i32 2
  %162 = load %dimension_descriptor*, %dimension_descriptor** %161, align 8
  %163 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %162, i32 0
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = sub i32 2, %165
  %167 = mul i32 1, %166
  %168 = add i32 0, %167
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = mul i32 1, %170
  %172 = getelementptr %array, %array* %b, i32 0, i32 0
  %173 = load double*, double** %172, align 8
  %174 = getelementptr inbounds double, double* %173, i32 %168
  %175 = load double, double* %174, align 8
  %176 = fcmp une double %175, 1.200000e+01
  br i1 %176, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %177 = getelementptr %array, %array* %b, i32 0, i32 2
  %178 = load %dimension_descriptor*, %dimension_descriptor** %177, align 8
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %178, i32 0
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = sub i32 3, %181
  %183 = mul i32 1, %182
  %184 = add i32 0, %183
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = mul i32 1, %186
  %188 = getelementptr %array, %array* %b, i32 0, i32 0
  %189 = load double*, double** %188, align 8
  %190 = getelementptr inbounds double, double* %189, i32 %184
  %191 = load double, double* %190, align 8
  %192 = fcmp une double %191, 1.300000e+01
  br i1 %192, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %193 = getelementptr %array, %array* %b, i32 0, i32 2
  %194 = load %dimension_descriptor*, %dimension_descriptor** %193, align 8
  %195 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %194, i32 0
  %196 = getelementptr %dimension_descriptor, %dimension_descriptor* %195, i32 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = sub i32 4, %197
  %199 = mul i32 1, %198
  %200 = add i32 0, %199
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %195, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = mul i32 1, %202
  %204 = getelementptr %array, %array* %b, i32 0, i32 0
  %205 = load double*, double** %204, align 8
  %206 = getelementptr inbounds double, double* %205, i32 %200
  %207 = load double, double* %206, align 8
  %208 = fcmp une double %207, 1.400000e+01
  br i1 %208, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %209 = load i32, i32* %i, align 4
  %210 = add i32 %209, 1
  %211 = icmp sle i32 %210, 3
  br i1 %211, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %212 = load i32, i32* %i, align 4
  %213 = add i32 %212, 1
  store i32 %213, i32* %i, align 4
  %214 = load i32, i32* %i, align 4
  %215 = getelementptr %array, %array* %b, i32 0, i32 2
  %216 = load %dimension_descriptor*, %dimension_descriptor** %215, align 8
  %217 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %216, i32 0
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %214, %219
  %221 = mul i32 1, %220
  %222 = add i32 0, %221
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 2
  %224 = load i32, i32* %223, align 4
  %225 = mul i32 1, %224
  %226 = getelementptr %array, %array* %b, i32 0, i32 0
  %227 = load double*, double** %226, align 8
  %228 = getelementptr inbounds double, double* %227, i32 %222
  %229 = load i32, i32* %i, align 4
  %230 = getelementptr %array, %array* %a, i32 0, i32 2
  %231 = load %dimension_descriptor*, %dimension_descriptor** %230, align 8
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 0
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = sub i32 %229, %234
  %236 = mul i32 1, %235
  %237 = add i32 0, %236
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = mul i32 1, %239
  %241 = getelementptr %array, %array* %a, i32 0, i32 0
  %242 = load double*, double** %241, align 8
  %243 = getelementptr inbounds double, double* %242, i32 %237
  %244 = load double, double* %243, align 8
  %245 = fsub double %244, 1.000000e+01
  store double %245, double* %228, align 8
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %246 = getelementptr %array, %array* %b, i32 0, i32 2
  %247 = load %dimension_descriptor*, %dimension_descriptor** %246, align 8
  %248 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %247, i32 0
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = sub i32 1, %250
  %252 = mul i32 1, %251
  %253 = add i32 0, %252
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 2
  %255 = load i32, i32* %254, align 4
  %256 = mul i32 1, %255
  %257 = getelementptr %array, %array* %b, i32 0, i32 0
  %258 = load double*, double** %257, align 8
  %259 = getelementptr inbounds double, double* %258, i32 %253
  %260 = load double, double* %259, align 8
  %261 = fcmp une double %260, 1.000000e+00
  br i1 %261, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %262 = getelementptr %array, %array* %b, i32 0, i32 2
  %263 = load %dimension_descriptor*, %dimension_descriptor** %262, align 8
  %264 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %263, i32 0
  %265 = getelementptr %dimension_descriptor, %dimension_descriptor* %264, i32 0, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = sub i32 2, %266
  %268 = mul i32 1, %267
  %269 = add i32 0, %268
  %270 = getelementptr %dimension_descriptor, %dimension_descriptor* %264, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = mul i32 1, %271
  %273 = getelementptr %array, %array* %b, i32 0, i32 0
  %274 = load double*, double** %273, align 8
  %275 = getelementptr inbounds double, double* %274, i32 %269
  %276 = load double, double* %275, align 8
  %277 = fcmp une double %276, 2.000000e+00
  br i1 %277, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %278 = getelementptr %array, %array* %b, i32 0, i32 2
  %279 = load %dimension_descriptor*, %dimension_descriptor** %278, align 8
  %280 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %279, i32 0
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 3, %282
  %284 = mul i32 1, %283
  %285 = add i32 0, %284
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = mul i32 1, %287
  %289 = getelementptr %array, %array* %b, i32 0, i32 0
  %290 = load double*, double** %289, align 8
  %291 = getelementptr inbounds double, double* %290, i32 %285
  %292 = load double, double* %291, align 8
  %293 = fcmp une double %292, 3.000000e+00
  br i1 %293, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %294 = getelementptr %array, %array* %b, i32 0, i32 2
  %295 = load %dimension_descriptor*, %dimension_descriptor** %294, align 8
  %296 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %295, i32 0
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %296, i32 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = sub i32 4, %298
  %300 = mul i32 1, %299
  %301 = add i32 0, %300
  %302 = getelementptr %dimension_descriptor, %dimension_descriptor* %296, i32 0, i32 2
  %303 = load i32, i32* %302, align 4
  %304 = mul i32 1, %303
  %305 = getelementptr %array, %array* %b, i32 0, i32 0
  %306 = load double*, double** %305, align 8
  %307 = getelementptr inbounds double, double* %306, i32 %301
  %308 = getelementptr %array, %array* %b, i32 0, i32 2
  %309 = load %dimension_descriptor*, %dimension_descriptor** %308, align 8
  %310 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %309, i32 0
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 1
  %312 = load i32, i32* %311, align 4
  %313 = sub i32 1, %312
  %314 = mul i32 1, %313
  %315 = add i32 0, %314
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %310, i32 0, i32 2
  %317 = load i32, i32* %316, align 4
  %318 = mul i32 1, %317
  %319 = getelementptr %array, %array* %b, i32 0, i32 0
  %320 = load double*, double** %319, align 8
  %321 = getelementptr inbounds double, double* %320, i32 %315
  %322 = load double, double* %321, align 8
  %323 = getelementptr %array, %array* %b, i32 0, i32 2
  %324 = load %dimension_descriptor*, %dimension_descriptor** %323, align 8
  %325 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %324, i32 0
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = sub i32 2, %327
  %329 = mul i32 1, %328
  %330 = add i32 0, %329
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 2
  %332 = load i32, i32* %331, align 4
  %333 = mul i32 1, %332
  %334 = getelementptr %array, %array* %b, i32 0, i32 0
  %335 = load double*, double** %334, align 8
  %336 = getelementptr inbounds double, double* %335, i32 %330
  %337 = load double, double* %336, align 8
  %338 = fadd double %322, %337
  %339 = getelementptr %array, %array* %b, i32 0, i32 2
  %340 = load %dimension_descriptor*, %dimension_descriptor** %339, align 8
  %341 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %340, i32 0
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = sub i32 3, %343
  %345 = mul i32 1, %344
  %346 = add i32 0, %345
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 2
  %348 = load i32, i32* %347, align 4
  %349 = mul i32 1, %348
  %350 = getelementptr %array, %array* %b, i32 0, i32 0
  %351 = load double*, double** %350, align 8
  %352 = getelementptr inbounds double, double* %351, i32 %346
  %353 = load double, double* %352, align 8
  %354 = fadd double %338, %353
  %355 = getelementptr %array, %array* %a, i32 0, i32 2
  %356 = load %dimension_descriptor*, %dimension_descriptor** %355, align 8
  %357 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %356, i32 0
  %358 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 1
  %359 = load i32, i32* %358, align 4
  %360 = sub i32 1, %359
  %361 = mul i32 1, %360
  %362 = add i32 0, %361
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 2
  %364 = load i32, i32* %363, align 4
  %365 = mul i32 1, %364
  %366 = getelementptr %array, %array* %a, i32 0, i32 0
  %367 = load double*, double** %366, align 8
  %368 = getelementptr inbounds double, double* %367, i32 %362
  %369 = load double, double* %368, align 8
  %370 = fadd double %354, %369
  store double %370, double* %307, align 8
  %371 = getelementptr %array, %array* %b, i32 0, i32 2
  %372 = load %dimension_descriptor*, %dimension_descriptor** %371, align 8
  %373 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %372, i32 0
  %374 = getelementptr %dimension_descriptor, %dimension_descriptor* %373, i32 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = sub i32 4, %375
  %377 = mul i32 1, %376
  %378 = add i32 0, %377
  %379 = getelementptr %dimension_descriptor, %dimension_descriptor* %373, i32 0, i32 2
  %380 = load i32, i32* %379, align 4
  %381 = mul i32 1, %380
  %382 = getelementptr %array, %array* %b, i32 0, i32 0
  %383 = load double*, double** %382, align 8
  %384 = getelementptr inbounds double, double* %383, i32 %378
  %385 = load double, double* %384, align 8
  %386 = fcmp une double %385, 1.700000e+01
  br i1 %386, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %387 = getelementptr %array, %array* %b, i32 0, i32 2
  %388 = load %dimension_descriptor*, %dimension_descriptor** %387, align 8
  %389 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %388, i32 0
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = sub i32 4, %391
  %393 = mul i32 1, %392
  %394 = add i32 0, %393
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 2
  %396 = load i32, i32* %395, align 4
  %397 = mul i32 1, %396
  %398 = getelementptr %array, %array* %b, i32 0, i32 0
  %399 = load double*, double** %398, align 8
  %400 = getelementptr inbounds double, double* %399, i32 %394
  %401 = getelementptr %array, %array* %a, i32 0, i32 2
  %402 = load %dimension_descriptor*, %dimension_descriptor** %401, align 8
  %403 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %402, i32 0
  %404 = getelementptr %dimension_descriptor, %dimension_descriptor* %403, i32 0, i32 1
  %405 = load i32, i32* %404, align 4
  %406 = sub i32 1, %405
  %407 = mul i32 1, %406
  %408 = add i32 0, %407
  %409 = getelementptr %dimension_descriptor, %dimension_descriptor* %403, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = mul i32 1, %410
  %412 = getelementptr %array, %array* %a, i32 0, i32 0
  %413 = load double*, double** %412, align 8
  %414 = getelementptr inbounds double, double* %413, i32 %408
  %415 = load double, double* %414, align 8
  store double %415, double* %400, align 8
  %416 = getelementptr %array, %array* %b, i32 0, i32 2
  %417 = load %dimension_descriptor*, %dimension_descriptor** %416, align 8
  %418 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %417, i32 0
  %419 = getelementptr %dimension_descriptor, %dimension_descriptor* %418, i32 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = sub i32 4, %420
  %422 = mul i32 1, %421
  %423 = add i32 0, %422
  %424 = getelementptr %dimension_descriptor, %dimension_descriptor* %418, i32 0, i32 2
  %425 = load i32, i32* %424, align 4
  %426 = mul i32 1, %425
  %427 = getelementptr %array, %array* %b, i32 0, i32 0
  %428 = load double*, double** %427, align 8
  %429 = getelementptr inbounds double, double* %428, i32 %423
  %430 = load double, double* %429, align 8
  %431 = fcmp une double %430, 1.100000e+01
  br i1 %431, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %432 = load i32, i32* %i, align 4
  %433 = add i32 %432, 1
  %434 = icmp sle i32 %433, 2
  br i1 %434, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %435 = load i32, i32* %i, align 4
  %436 = add i32 %435, 1
  store i32 %436, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %437 = load i32, i32* %j, align 4
  %438 = add i32 %437, 1
  %439 = icmp sle i32 %438, 2
  br i1 %439, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %440 = load i32, i32* %j, align 4
  %441 = add i32 %440, 1
  store i32 %441, i32* %j, align 4
  %442 = load i32, i32* %i, align 4
  %443 = load i32, i32* %j, align 4
  %444 = getelementptr %array, %array* %c, i32 0, i32 2
  %445 = load %dimension_descriptor*, %dimension_descriptor** %444, align 8
  %446 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %445, i32 0
  %447 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 1
  %448 = load i32, i32* %447, align 4
  %449 = sub i32 %442, %448
  %450 = mul i32 1, %449
  %451 = add i32 0, %450
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 2
  %453 = load i32, i32* %452, align 4
  %454 = mul i32 1, %453
  %455 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %445, i32 1
  %456 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = sub i32 %443, %457
  %459 = mul i32 %454, %458
  %460 = add i32 %451, %459
  %461 = getelementptr %dimension_descriptor, %dimension_descriptor* %455, i32 0, i32 2
  %462 = load i32, i32* %461, align 4
  %463 = mul i32 %454, %462
  %464 = getelementptr %array, %array* %c, i32 0, i32 0
  %465 = load double*, double** %464, align 8
  %466 = getelementptr inbounds double, double* %465, i32 %460
  %467 = load i32, i32* %i, align 4
  %468 = load i32, i32* %j, align 4
  %469 = add i32 %467, %468
  %470 = add i32 %469, 10
  %471 = sitofp i32 %470 to double
  store double %471, double* %466, align 8
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %472 = getelementptr %array, %array* %c, i32 0, i32 2
  %473 = load %dimension_descriptor*, %dimension_descriptor** %472, align 8
  %474 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %473, i32 0
  %475 = getelementptr %dimension_descriptor, %dimension_descriptor* %474, i32 0, i32 1
  %476 = load i32, i32* %475, align 4
  %477 = sub i32 1, %476
  %478 = mul i32 1, %477
  %479 = add i32 0, %478
  %480 = getelementptr %dimension_descriptor, %dimension_descriptor* %474, i32 0, i32 2
  %481 = load i32, i32* %480, align 4
  %482 = mul i32 1, %481
  %483 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %473, i32 1
  %484 = getelementptr %dimension_descriptor, %dimension_descriptor* %483, i32 0, i32 1
  %485 = load i32, i32* %484, align 4
  %486 = sub i32 1, %485
  %487 = mul i32 %482, %486
  %488 = add i32 %479, %487
  %489 = getelementptr %dimension_descriptor, %dimension_descriptor* %483, i32 0, i32 2
  %490 = load i32, i32* %489, align 4
  %491 = mul i32 %482, %490
  %492 = getelementptr %array, %array* %c, i32 0, i32 0
  %493 = load double*, double** %492, align 8
  %494 = getelementptr inbounds double, double* %493, i32 %488
  %495 = load double, double* %494, align 8
  %496 = fcmp une double %495, 1.200000e+01
  br i1 %496, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %497 = getelementptr %array, %array* %c, i32 0, i32 2
  %498 = load %dimension_descriptor*, %dimension_descriptor** %497, align 8
  %499 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %498, i32 0
  %500 = getelementptr %dimension_descriptor, %dimension_descriptor* %499, i32 0, i32 1
  %501 = load i32, i32* %500, align 4
  %502 = sub i32 1, %501
  %503 = mul i32 1, %502
  %504 = add i32 0, %503
  %505 = getelementptr %dimension_descriptor, %dimension_descriptor* %499, i32 0, i32 2
  %506 = load i32, i32* %505, align 4
  %507 = mul i32 1, %506
  %508 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %498, i32 1
  %509 = getelementptr %dimension_descriptor, %dimension_descriptor* %508, i32 0, i32 1
  %510 = load i32, i32* %509, align 4
  %511 = sub i32 2, %510
  %512 = mul i32 %507, %511
  %513 = add i32 %504, %512
  %514 = getelementptr %dimension_descriptor, %dimension_descriptor* %508, i32 0, i32 2
  %515 = load i32, i32* %514, align 4
  %516 = mul i32 %507, %515
  %517 = getelementptr %array, %array* %c, i32 0, i32 0
  %518 = load double*, double** %517, align 8
  %519 = getelementptr inbounds double, double* %518, i32 %513
  %520 = load double, double* %519, align 8
  %521 = fcmp une double %520, 1.300000e+01
  br i1 %521, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %522 = getelementptr %array, %array* %c, i32 0, i32 2
  %523 = load %dimension_descriptor*, %dimension_descriptor** %522, align 8
  %524 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %523, i32 0
  %525 = getelementptr %dimension_descriptor, %dimension_descriptor* %524, i32 0, i32 1
  %526 = load i32, i32* %525, align 4
  %527 = sub i32 2, %526
  %528 = mul i32 1, %527
  %529 = add i32 0, %528
  %530 = getelementptr %dimension_descriptor, %dimension_descriptor* %524, i32 0, i32 2
  %531 = load i32, i32* %530, align 4
  %532 = mul i32 1, %531
  %533 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %523, i32 1
  %534 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 1
  %535 = load i32, i32* %534, align 4
  %536 = sub i32 1, %535
  %537 = mul i32 %532, %536
  %538 = add i32 %529, %537
  %539 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 2
  %540 = load i32, i32* %539, align 4
  %541 = mul i32 %532, %540
  %542 = getelementptr %array, %array* %c, i32 0, i32 0
  %543 = load double*, double** %542, align 8
  %544 = getelementptr inbounds double, double* %543, i32 %538
  %545 = load double, double* %544, align 8
  %546 = fcmp une double %545, 1.300000e+01
  br i1 %546, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %547 = getelementptr %array, %array* %c, i32 0, i32 2
  %548 = load %dimension_descriptor*, %dimension_descriptor** %547, align 8
  %549 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %548, i32 0
  %550 = getelementptr %dimension_descriptor, %dimension_descriptor* %549, i32 0, i32 1
  %551 = load i32, i32* %550, align 4
  %552 = sub i32 2, %551
  %553 = mul i32 1, %552
  %554 = add i32 0, %553
  %555 = getelementptr %dimension_descriptor, %dimension_descriptor* %549, i32 0, i32 2
  %556 = load i32, i32* %555, align 4
  %557 = mul i32 1, %556
  %558 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %548, i32 1
  %559 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = sub i32 2, %560
  %562 = mul i32 %557, %561
  %563 = add i32 %554, %562
  %564 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 2
  %565 = load i32, i32* %564, align 4
  %566 = mul i32 %557, %565
  %567 = getelementptr %array, %array* %c, i32 0, i32 0
  %568 = load double*, double** %567, align 8
  %569 = getelementptr inbounds double, double* %568, i32 %563
  %570 = load double, double* %569, align 8
  %571 = fcmp une double %570, 1.400000e+01
  br i1 %571, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
