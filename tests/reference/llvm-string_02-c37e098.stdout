; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@string_const_data = private constant [5 x i8] c"Mr. \00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data, i32 0, i32 0), i64 4 }>
@string_const_data.1 = private constant [7 x i8] c"Rowan \00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([7 x i8], [7 x i8]* @string_const_data.1, i32 0, i32 0), i64 6 }>
@string_const_data.3 = private constant [9 x i8] c"Atkinson\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([9 x i8], [9 x i8]* @string_const_data.3, i32 0, i32 0), i64 8 }>
@string_const_data.5 = private constant [26 x i8] c"A big hello from Mr. Bean\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([26 x i8], [26 x i8]* @string_const_data.5, i32 0, i32 0), i64 25 }>
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [38 x i8] c"S-DESC-8,S-DESC-6,S-DESC-15,S-DESC-15\00", align 1
@string_const_data.7 = private constant [9 x i8] c"Here is \00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([9 x i8], [9 x i8]* @string_const_data.7, i32 0, i32 0), i64 8 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %2 = call i8* @_lfortran_malloc(i64 16)
  %firstname = bitcast i8* %2 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %firstname, align 1
  %3 = getelementptr %string_descriptor, %string_descriptor* %firstname, i32 0, i32 1
  store i64 15, i64* %3, align 4
  %4 = getelementptr %string_descriptor, %string_descriptor* %firstname, i32 0, i32 0
  %5 = call i8* @_lfortran_malloc(i64 16)
  call void @_lfortran_string_init(i64 16, i8* %5)
  store i8* %5, i8** %4, align 8
  %6 = call i8* @_lfortran_malloc(i64 16)
  %greetings = bitcast i8* %6 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %greetings, align 1
  %7 = getelementptr %string_descriptor, %string_descriptor* %greetings, i32 0, i32 1
  store i64 25, i64* %7, align 4
  %8 = getelementptr %string_descriptor, %string_descriptor* %greetings, i32 0, i32 0
  %9 = call i8* @_lfortran_malloc(i64 26)
  call void @_lfortran_string_init(i64 26, i8* %9)
  store i8* %9, i8** %8, align 8
  %10 = call i8* @_lfortran_malloc(i64 16)
  %surname = bitcast i8* %10 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %surname, align 1
  %11 = getelementptr %string_descriptor, %string_descriptor* %surname, i32 0, i32 1
  store i64 15, i64* %11, align 4
  %12 = getelementptr %string_descriptor, %string_descriptor* %surname, i32 0, i32 0
  %13 = call i8* @_lfortran_malloc(i64 16)
  call void @_lfortran_string_init(i64 16, i8* %13)
  store i8* %13, i8** %12, align 8
  %14 = call i8* @_lfortran_malloc(i64 16)
  %title = bitcast i8* %14 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %title, align 1
  %15 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 1
  store i64 6, i64* %15, align 4
  %16 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 0
  %17 = call i8* @_lfortran_malloc(i64 7)
  call void @_lfortran_string_init(i64 7, i8* %17)
  store i8* %17, i8** %16, align 8
  %18 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 0
  %19 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 1
  %20 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %18, i64* %19, i8 0, i8 0, i8* %20, i64 4)
  %21 = getelementptr %string_descriptor, %string_descriptor* %firstname, i32 0, i32 0
  %22 = getelementptr %string_descriptor, %string_descriptor* %firstname, i32 0, i32 1
  %23 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %21, i64* %22, i8 0, i8 0, i8* %23, i64 6)
  %24 = getelementptr %string_descriptor, %string_descriptor* %surname, i32 0, i32 0
  %25 = getelementptr %string_descriptor, %string_descriptor* %surname, i32 0, i32 1
  %26 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %24, i64* %25, i8 0, i8 0, i8* %26, i64 8)
  %27 = getelementptr %string_descriptor, %string_descriptor* %greetings, i32 0, i32 0
  %28 = getelementptr %string_descriptor, %string_descriptor* %greetings, i32 0, i32 1
  %29 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %27, i64* %28, i8 0, i8 0, i8* %29, i64 25)
  %30 = load %string_descriptor, %string_descriptor* %title, align 1
  %31 = alloca %string_descriptor, align 8
  store %string_descriptor %30, %string_descriptor* %31, align 1
  %32 = load %string_descriptor, %string_descriptor* %firstname, align 1
  %33 = alloca %string_descriptor, align 8
  store %string_descriptor %32, %string_descriptor* %33, align 1
  %34 = load %string_descriptor, %string_descriptor* %surname, align 1
  %35 = alloca %string_descriptor, align 8
  store %string_descriptor %34, %string_descriptor* %35, align 1
  %36 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, %string_descriptor* @string_const.8, %string_descriptor* %31, %string_descriptor* %33, %string_descriptor* %35)
  %37 = call i64 @_lfortran_str_len(i8* %36)
  %38 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %38 to %string_descriptor*
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %36, i8** %39, align 8
  %40 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %37, i64* %40, align 4
  %41 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0))
  %43 = getelementptr %string_descriptor, %string_descriptor* %greetings, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_string_init(i64, i8*)

declare void @_lfortran_strcpy(i8**, i64*, i8, i8, i8*, i64)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare void @_lfortran_printf(i8*, ...)

declare void @_lpython_free_argv()
