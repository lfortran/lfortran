; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [5 x i8] c"Mr. \00", align 1
@1 = private unnamed_addr constant [7 x i8] c"Rowan \00", align 1
@2 = private unnamed_addr constant [9 x i8] c"Atkinson\00", align 1
@3 = private unnamed_addr constant [26 x i8] c"A big hello from Mr. Bean\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [9 x i8] c"Here is \00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %firstname = alloca i8*, align 8
  %2 = call i8* @_lfortran_malloc(i32 16)
  call void @_lfortran_string_init(i32 16, i8* %2)
  store i8* %2, i8** %firstname, align 8
  %3 = load i8*, i8** %firstname, align 8
  %greetings = alloca i8*, align 8
  %4 = call i8* @_lfortran_malloc(i32 26)
  call void @_lfortran_string_init(i32 26, i8* %4)
  store i8* %4, i8** %greetings, align 8
  %5 = load i8*, i8** %greetings, align 8
  %surname = alloca i8*, align 8
  %6 = call i8* @_lfortran_malloc(i32 16)
  call void @_lfortran_string_init(i32 16, i8* %6)
  store i8* %6, i8** %surname, align 8
  %7 = load i8*, i8** %surname, align 8
  %title = alloca i8*, align 8
  %8 = call i8* @_lfortran_malloc(i32 7)
  call void @_lfortran_string_init(i32 7, i8* %8)
  store i8* %8, i8** %title, align 8
  %9 = load i8*, i8** %title, align 8
  call void @_lfortran_strcpy(i8** %title, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8 0)
  call void @_lfortran_strcpy(i8** %firstname, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i32 0, i32 0), i8 0)
  call void @_lfortran_strcpy(i8** %surname, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8 0)
  call void @_lfortran_strcpy(i8** %greetings, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @3, i32 0, i32 0), i8 0)
  %10 = load i8*, i8** %title, align 8
  %11 = load i8*, i8** %firstname, align 8
  %12 = load i8*, i8** %surname, align 8
  %13 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 8, i8* null, i32 7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @6, i32 0, i32 0), i32 7, i8* %10, i32 7, i8* %11, i32 7, i8* %12)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  %14 = load i8*, i8** %greetings, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lfortran_malloc(i32)

declare void @_lfortran_string_init(i32, i8*)

declare void @_lfortran_strcpy(i8**, i8*, i8)

declare i8* @_lcompilers_string_format_fortran(i32, i8*, ...)

declare void @_lfortran_printf(i8*, ...)
