; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>
%complex_4 = type <{ float, float }>

@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@0 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.7 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.7, i32 0, i32 0), i64 10 }>
@string_const_data.9 = private constant [2 x i8] c"\0A\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.23 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@string_const_data.25 = private constant [2 x i8] c"\0A\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.25, i32 0, i32 0), i64 1 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.31 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.31, i32 0, i32 0), i64 10 }>
@string_const_data.33 = private constant [2 x i8] c"\0A\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.33, i32 0, i32 0), i64 1 }>
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.39 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.39, i32 0, i32 0), i64 10 }>
@string_const_data.41 = private constant [2 x i8] c"\0A\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.41, i32 0, i32 0), i64 1 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.43 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.43, i32 0, i32 0), i64 10 }>
@string_const_data.45 = private constant [2 x i8] c"\0A\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.45, i32 0, i32 0), i64 1 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.47 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.48 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.47, i32 0, i32 0), i64 10 }>
@string_const_data.49 = private constant [2 x i8] c"\0A\00"
@string_const.50 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.49, i32 0, i32 0), i64 1 }>
@12 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.51 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.51, i32 0, i32 0), i64 10 }>
@string_const_data.53 = private constant [2 x i8] c"\0A\00"
@string_const.54 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.53, i32 0, i32 0), i64 1 }>
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.55 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.56 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.55, i32 0, i32 0), i64 10 }>
@string_const_data.57 = private constant [2 x i8] c"\0A\00"
@string_const.58 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.57, i32 0, i32 0), i64 1 }>
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.59 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.60 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.59, i32 0, i32 0), i64 10 }>
@string_const_data.61 = private constant [2 x i8] c"\0A\00"
@string_const.62 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.61, i32 0, i32 0), i64 1 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x %complex_4], align 8
  %b = alloca [4 x %complex_4], align 8
  %c = alloca [4 x %complex_4], align 8
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 3
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %i1, align 4
  %8 = sub i32 %7, 1
  %9 = mul i32 1, %8
  %10 = add i32 0, %9
  %11 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 %10
  %12 = load i32, i32* %i1, align 4
  %13 = add i32 %12, 10
  %14 = sitofp i32 %13 to float
  %15 = alloca %complex_4, align 8
  %16 = getelementptr %complex_4, %complex_4* %15, i32 0, i32 0
  %17 = getelementptr %complex_4, %complex_4* %15, i32 0, i32 1
  store float %14, float* %16, align 4
  store float 0.000000e+00, float* %17, align 4
  %18 = load %complex_4, %complex_4* %15, align 1
  store %complex_4 %18, %complex_4* %11, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %19 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 0
  %20 = load %complex_4, %complex_4* %19, align 1
  %21 = alloca %complex_4, align 8
  %22 = getelementptr %complex_4, %complex_4* %21, i32 0, i32 0
  %23 = getelementptr %complex_4, %complex_4* %21, i32 0, i32 1
  store float 1.100000e+01, float* %22, align 4
  store float 0.000000e+00, float* %23, align 4
  %24 = load %complex_4, %complex_4* %21, align 1
  %25 = alloca %complex_4, align 8
  store %complex_4 %20, %complex_4* %25, align 1
  %26 = getelementptr %complex_4, %complex_4* %25, i32 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = alloca %complex_4, align 8
  store %complex_4 %24, %complex_4* %28, align 1
  %29 = getelementptr %complex_4, %complex_4* %28, i32 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = alloca %complex_4, align 8
  store %complex_4 %20, %complex_4* %31, align 1
  %32 = getelementptr %complex_4, %complex_4* %31, i32 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = alloca %complex_4, align 8
  store %complex_4 %24, %complex_4* %34, align 1
  %35 = getelementptr %complex_4, %complex_4* %34, i32 0, i32 1
  %36 = load float, float* %35, align 4
  %37 = fcmp one float %27, %30
  %38 = fcmp one float %33, %36
  %39 = or i1 %37, %38
  br i1 %39, label %then, label %else

then:                                             ; preds = %loop.end
  %40 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %41 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i8* %40, i8* %41)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %42 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 1
  %43 = load %complex_4, %complex_4* %42, align 1
  %44 = alloca %complex_4, align 8
  %45 = getelementptr %complex_4, %complex_4* %44, i32 0, i32 0
  %46 = getelementptr %complex_4, %complex_4* %44, i32 0, i32 1
  store float 1.200000e+01, float* %45, align 4
  store float 0.000000e+00, float* %46, align 4
  %47 = load %complex_4, %complex_4* %44, align 1
  %48 = alloca %complex_4, align 8
  store %complex_4 %43, %complex_4* %48, align 1
  %49 = getelementptr %complex_4, %complex_4* %48, i32 0, i32 0
  %50 = load float, float* %49, align 4
  %51 = alloca %complex_4, align 8
  store %complex_4 %47, %complex_4* %51, align 1
  %52 = getelementptr %complex_4, %complex_4* %51, i32 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = alloca %complex_4, align 8
  store %complex_4 %43, %complex_4* %54, align 1
  %55 = getelementptr %complex_4, %complex_4* %54, i32 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = alloca %complex_4, align 8
  store %complex_4 %47, %complex_4* %57, align 1
  %58 = getelementptr %complex_4, %complex_4* %57, i32 0, i32 1
  %59 = load float, float* %58, align 4
  %60 = fcmp one float %50, %53
  %61 = fcmp one float %56, %59
  %62 = or i1 %60, %61
  br i1 %62, label %then3, label %else4

then3:                                            ; preds = %ifcont
  %63 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %64 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %63, i8* %64)
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %ifcont
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %65 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 2
  %66 = load %complex_4, %complex_4* %65, align 1
  %67 = alloca %complex_4, align 8
  %68 = getelementptr %complex_4, %complex_4* %67, i32 0, i32 0
  %69 = getelementptr %complex_4, %complex_4* %67, i32 0, i32 1
  store float 1.300000e+01, float* %68, align 4
  store float 0.000000e+00, float* %69, align 4
  %70 = load %complex_4, %complex_4* %67, align 1
  %71 = alloca %complex_4, align 8
  store %complex_4 %66, %complex_4* %71, align 1
  %72 = getelementptr %complex_4, %complex_4* %71, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = alloca %complex_4, align 8
  store %complex_4 %70, %complex_4* %74, align 1
  %75 = getelementptr %complex_4, %complex_4* %74, i32 0, i32 0
  %76 = load float, float* %75, align 4
  %77 = alloca %complex_4, align 8
  store %complex_4 %66, %complex_4* %77, align 1
  %78 = getelementptr %complex_4, %complex_4* %77, i32 0, i32 1
  %79 = load float, float* %78, align 4
  %80 = alloca %complex_4, align 8
  store %complex_4 %70, %complex_4* %80, align 1
  %81 = getelementptr %complex_4, %complex_4* %80, i32 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = fcmp one float %73, %76
  %84 = fcmp one float %79, %82
  %85 = or i1 %83, %84
  br i1 %85, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  %86 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  %87 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* %86, i8* %87)
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %ifcont5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  store i32 10, i32* %i1, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.body10, %ifcont8
  %88 = load i32, i32* %i1, align 4
  %89 = add i32 %88, 1
  %90 = icmp sle i32 %89, 14
  br i1 %90, label %loop.body10, label %loop.end11

loop.body10:                                      ; preds = %loop.head9
  %91 = load i32, i32* %i1, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %i1, align 4
  %93 = load i32, i32* %i1, align 4
  %94 = sub i32 %93, 10
  %95 = sub i32 %94, 1
  %96 = mul i32 1, %95
  %97 = add i32 0, %96
  %98 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 %97
  %99 = load i32, i32* %i1, align 4
  %100 = sitofp i32 %99 to float
  %101 = alloca %complex_4, align 8
  %102 = getelementptr %complex_4, %complex_4* %101, i32 0, i32 0
  %103 = getelementptr %complex_4, %complex_4* %101, i32 0, i32 1
  store float %100, float* %102, align 4
  store float 0.000000e+00, float* %103, align 4
  %104 = load %complex_4, %complex_4* %101, align 1
  store %complex_4 %104, %complex_4* %98, align 1
  br label %loop.head9

loop.end11:                                       ; preds = %loop.head9
  %105 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 0
  %106 = load %complex_4, %complex_4* %105, align 1
  %107 = alloca %complex_4, align 8
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 0
  %109 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 1
  store float 1.100000e+01, float* %108, align 4
  store float 0.000000e+00, float* %109, align 4
  %110 = load %complex_4, %complex_4* %107, align 1
  %111 = alloca %complex_4, align 8
  store %complex_4 %106, %complex_4* %111, align 1
  %112 = getelementptr %complex_4, %complex_4* %111, i32 0, i32 0
  %113 = load float, float* %112, align 4
  %114 = alloca %complex_4, align 8
  store %complex_4 %110, %complex_4* %114, align 1
  %115 = getelementptr %complex_4, %complex_4* %114, i32 0, i32 0
  %116 = load float, float* %115, align 4
  %117 = alloca %complex_4, align 8
  store %complex_4 %106, %complex_4* %117, align 1
  %118 = getelementptr %complex_4, %complex_4* %117, i32 0, i32 1
  %119 = load float, float* %118, align 4
  %120 = alloca %complex_4, align 8
  store %complex_4 %110, %complex_4* %120, align 1
  %121 = getelementptr %complex_4, %complex_4* %120, i32 0, i32 1
  %122 = load float, float* %121, align 4
  %123 = fcmp one float %113, %116
  %124 = fcmp one float %119, %122
  %125 = or i1 %123, %124
  br i1 %125, label %then12, label %else13

then12:                                           ; preds = %loop.end11
  %126 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %127 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %126, i8* %127)
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %loop.end11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  %128 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 1
  %129 = load %complex_4, %complex_4* %128, align 1
  %130 = alloca %complex_4, align 8
  %131 = getelementptr %complex_4, %complex_4* %130, i32 0, i32 0
  %132 = getelementptr %complex_4, %complex_4* %130, i32 0, i32 1
  store float 1.200000e+01, float* %131, align 4
  store float 0.000000e+00, float* %132, align 4
  %133 = load %complex_4, %complex_4* %130, align 1
  %134 = alloca %complex_4, align 8
  store %complex_4 %129, %complex_4* %134, align 1
  %135 = getelementptr %complex_4, %complex_4* %134, i32 0, i32 0
  %136 = load float, float* %135, align 4
  %137 = alloca %complex_4, align 8
  store %complex_4 %133, %complex_4* %137, align 1
  %138 = getelementptr %complex_4, %complex_4* %137, i32 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = alloca %complex_4, align 8
  store %complex_4 %129, %complex_4* %140, align 1
  %141 = getelementptr %complex_4, %complex_4* %140, i32 0, i32 1
  %142 = load float, float* %141, align 4
  %143 = alloca %complex_4, align 8
  store %complex_4 %133, %complex_4* %143, align 1
  %144 = getelementptr %complex_4, %complex_4* %143, i32 0, i32 1
  %145 = load float, float* %144, align 4
  %146 = fcmp one float %136, %139
  %147 = fcmp one float %142, %145
  %148 = or i1 %146, %147
  br i1 %148, label %then15, label %else16

then15:                                           ; preds = %ifcont14
  %149 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %150 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %149, i8* %150)
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %ifcont14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  %151 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 2
  %152 = load %complex_4, %complex_4* %151, align 1
  %153 = alloca %complex_4, align 8
  %154 = getelementptr %complex_4, %complex_4* %153, i32 0, i32 0
  %155 = getelementptr %complex_4, %complex_4* %153, i32 0, i32 1
  store float 1.300000e+01, float* %154, align 4
  store float 0.000000e+00, float* %155, align 4
  %156 = load %complex_4, %complex_4* %153, align 1
  %157 = alloca %complex_4, align 8
  store %complex_4 %152, %complex_4* %157, align 1
  %158 = getelementptr %complex_4, %complex_4* %157, i32 0, i32 0
  %159 = load float, float* %158, align 4
  %160 = alloca %complex_4, align 8
  store %complex_4 %156, %complex_4* %160, align 1
  %161 = getelementptr %complex_4, %complex_4* %160, i32 0, i32 0
  %162 = load float, float* %161, align 4
  %163 = alloca %complex_4, align 8
  store %complex_4 %152, %complex_4* %163, align 1
  %164 = getelementptr %complex_4, %complex_4* %163, i32 0, i32 1
  %165 = load float, float* %164, align 4
  %166 = alloca %complex_4, align 8
  store %complex_4 %156, %complex_4* %166, align 1
  %167 = getelementptr %complex_4, %complex_4* %166, i32 0, i32 1
  %168 = load float, float* %167, align 4
  %169 = fcmp one float %159, %162
  %170 = fcmp one float %165, %168
  %171 = or i1 %169, %170
  br i1 %171, label %then18, label %else19

then18:                                           ; preds = %ifcont17
  %172 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %173 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %172, i8* %173)
  call void @exit(i32 1)
  br label %ifcont20

else19:                                           ; preds = %ifcont17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  %174 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %175 = load %complex_4, %complex_4* %174, align 1
  %176 = alloca %complex_4, align 8
  %177 = getelementptr %complex_4, %complex_4* %176, i32 0, i32 0
  %178 = getelementptr %complex_4, %complex_4* %176, i32 0, i32 1
  store float 1.400000e+01, float* %177, align 4
  store float 0.000000e+00, float* %178, align 4
  %179 = load %complex_4, %complex_4* %176, align 1
  %180 = alloca %complex_4, align 8
  store %complex_4 %175, %complex_4* %180, align 1
  %181 = getelementptr %complex_4, %complex_4* %180, i32 0, i32 0
  %182 = load float, float* %181, align 4
  %183 = alloca %complex_4, align 8
  store %complex_4 %179, %complex_4* %183, align 1
  %184 = getelementptr %complex_4, %complex_4* %183, i32 0, i32 0
  %185 = load float, float* %184, align 4
  %186 = alloca %complex_4, align 8
  store %complex_4 %175, %complex_4* %186, align 1
  %187 = getelementptr %complex_4, %complex_4* %186, i32 0, i32 1
  %188 = load float, float* %187, align 4
  %189 = alloca %complex_4, align 8
  store %complex_4 %179, %complex_4* %189, align 1
  %190 = getelementptr %complex_4, %complex_4* %189, i32 0, i32 1
  %191 = load float, float* %190, align 4
  %192 = fcmp one float %182, %185
  %193 = fcmp one float %188, %191
  %194 = or i1 %192, %193
  br i1 %194, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  %195 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  %196 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %195, i8* %196)
  call void @exit(i32 1)
  br label %ifcont23

else22:                                           ; preds = %ifcont20
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %then21
  store i32 0, i32* %i1, align 4
  br label %loop.head24

loop.head24:                                      ; preds = %loop.body25, %ifcont23
  %197 = load i32, i32* %i1, align 4
  %198 = add i32 %197, 1
  %199 = icmp sle i32 %198, 3
  br i1 %199, label %loop.body25, label %loop.end26

loop.body25:                                      ; preds = %loop.head24
  %200 = load i32, i32* %i1, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %i1, align 4
  %202 = load i32, i32* %i1, align 4
  %203 = sub i32 %202, 1
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 %205
  %207 = load i32, i32* %i1, align 4
  %208 = sub i32 %207, 1
  %209 = mul i32 1, %208
  %210 = add i32 0, %209
  %211 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 %210
  %212 = load %complex_4, %complex_4* %211, align 1
  %213 = alloca %complex_4, align 8
  %214 = getelementptr %complex_4, %complex_4* %213, i32 0, i32 0
  %215 = getelementptr %complex_4, %complex_4* %213, i32 0, i32 1
  store float 1.000000e+01, float* %214, align 4
  store float 0.000000e+00, float* %215, align 4
  %216 = load %complex_4, %complex_4* %213, align 1
  %217 = alloca %complex_4, align 8
  store %complex_4 %212, %complex_4* %217, align 1
  %218 = alloca %complex_4, align 8
  store %complex_4 %216, %complex_4* %218, align 1
  %219 = alloca %complex_4, align 8
  call void @_lfortran_complex_sub_32(%complex_4* %217, %complex_4* %218, %complex_4* %219)
  %220 = load %complex_4, %complex_4* %219, align 1
  store %complex_4 %220, %complex_4* %206, align 1
  br label %loop.head24

loop.end26:                                       ; preds = %loop.head24
  %221 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 0
  %222 = load %complex_4, %complex_4* %221, align 1
  %223 = alloca %complex_4, align 8
  %224 = getelementptr %complex_4, %complex_4* %223, i32 0, i32 0
  %225 = getelementptr %complex_4, %complex_4* %223, i32 0, i32 1
  store float 1.000000e+00, float* %224, align 4
  store float 0.000000e+00, float* %225, align 4
  %226 = load %complex_4, %complex_4* %223, align 1
  %227 = alloca %complex_4, align 8
  store %complex_4 %222, %complex_4* %227, align 1
  %228 = getelementptr %complex_4, %complex_4* %227, i32 0, i32 0
  %229 = load float, float* %228, align 4
  %230 = alloca %complex_4, align 8
  store %complex_4 %226, %complex_4* %230, align 1
  %231 = getelementptr %complex_4, %complex_4* %230, i32 0, i32 0
  %232 = load float, float* %231, align 4
  %233 = alloca %complex_4, align 8
  store %complex_4 %222, %complex_4* %233, align 1
  %234 = getelementptr %complex_4, %complex_4* %233, i32 0, i32 1
  %235 = load float, float* %234, align 4
  %236 = alloca %complex_4, align 8
  store %complex_4 %226, %complex_4* %236, align 1
  %237 = getelementptr %complex_4, %complex_4* %236, i32 0, i32 1
  %238 = load float, float* %237, align 4
  %239 = fcmp one float %229, %232
  %240 = fcmp one float %235, %238
  %241 = or i1 %239, %240
  br i1 %241, label %then27, label %else28

then27:                                           ; preds = %loop.end26
  %242 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %243 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %242, i8* %243)
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %loop.end26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %244 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 1
  %245 = load %complex_4, %complex_4* %244, align 1
  %246 = alloca %complex_4, align 8
  %247 = getelementptr %complex_4, %complex_4* %246, i32 0, i32 0
  %248 = getelementptr %complex_4, %complex_4* %246, i32 0, i32 1
  store float 2.000000e+00, float* %247, align 4
  store float 0.000000e+00, float* %248, align 4
  %249 = load %complex_4, %complex_4* %246, align 1
  %250 = alloca %complex_4, align 8
  store %complex_4 %245, %complex_4* %250, align 1
  %251 = getelementptr %complex_4, %complex_4* %250, i32 0, i32 0
  %252 = load float, float* %251, align 4
  %253 = alloca %complex_4, align 8
  store %complex_4 %249, %complex_4* %253, align 1
  %254 = getelementptr %complex_4, %complex_4* %253, i32 0, i32 0
  %255 = load float, float* %254, align 4
  %256 = alloca %complex_4, align 8
  store %complex_4 %245, %complex_4* %256, align 1
  %257 = getelementptr %complex_4, %complex_4* %256, i32 0, i32 1
  %258 = load float, float* %257, align 4
  %259 = alloca %complex_4, align 8
  store %complex_4 %249, %complex_4* %259, align 1
  %260 = getelementptr %complex_4, %complex_4* %259, i32 0, i32 1
  %261 = load float, float* %260, align 4
  %262 = fcmp one float %252, %255
  %263 = fcmp one float %258, %261
  %264 = or i1 %262, %263
  br i1 %264, label %then30, label %else31

then30:                                           ; preds = %ifcont29
  %265 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  %266 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %265, i8* %266)
  call void @exit(i32 1)
  br label %ifcont32

else31:                                           ; preds = %ifcont29
  br label %ifcont32

ifcont32:                                         ; preds = %else31, %then30
  %267 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 2
  %268 = load %complex_4, %complex_4* %267, align 1
  %269 = alloca %complex_4, align 8
  %270 = getelementptr %complex_4, %complex_4* %269, i32 0, i32 0
  %271 = getelementptr %complex_4, %complex_4* %269, i32 0, i32 1
  store float 3.000000e+00, float* %270, align 4
  store float 0.000000e+00, float* %271, align 4
  %272 = load %complex_4, %complex_4* %269, align 1
  %273 = alloca %complex_4, align 8
  store %complex_4 %268, %complex_4* %273, align 1
  %274 = getelementptr %complex_4, %complex_4* %273, i32 0, i32 0
  %275 = load float, float* %274, align 4
  %276 = alloca %complex_4, align 8
  store %complex_4 %272, %complex_4* %276, align 1
  %277 = getelementptr %complex_4, %complex_4* %276, i32 0, i32 0
  %278 = load float, float* %277, align 4
  %279 = alloca %complex_4, align 8
  store %complex_4 %268, %complex_4* %279, align 1
  %280 = getelementptr %complex_4, %complex_4* %279, i32 0, i32 1
  %281 = load float, float* %280, align 4
  %282 = alloca %complex_4, align 8
  store %complex_4 %272, %complex_4* %282, align 1
  %283 = getelementptr %complex_4, %complex_4* %282, i32 0, i32 1
  %284 = load float, float* %283, align 4
  %285 = fcmp one float %275, %278
  %286 = fcmp one float %281, %284
  %287 = or i1 %285, %286
  br i1 %287, label %then33, label %else34

then33:                                           ; preds = %ifcont32
  %288 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %289 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %288, i8* %289)
  call void @exit(i32 1)
  br label %ifcont35

else34:                                           ; preds = %ifcont32
  br label %ifcont35

ifcont35:                                         ; preds = %else34, %then33
  %290 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %291 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 0
  %292 = load %complex_4, %complex_4* %291, align 1
  %293 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 1
  %294 = load %complex_4, %complex_4* %293, align 1
  %295 = alloca %complex_4, align 8
  store %complex_4 %292, %complex_4* %295, align 1
  %296 = alloca %complex_4, align 8
  store %complex_4 %294, %complex_4* %296, align 1
  %297 = alloca %complex_4, align 8
  call void @_lfortran_complex_add_32(%complex_4* %295, %complex_4* %296, %complex_4* %297)
  %298 = load %complex_4, %complex_4* %297, align 1
  %299 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 2
  %300 = load %complex_4, %complex_4* %299, align 1
  %301 = alloca %complex_4, align 8
  store %complex_4 %298, %complex_4* %301, align 1
  %302 = alloca %complex_4, align 8
  store %complex_4 %300, %complex_4* %302, align 1
  %303 = alloca %complex_4, align 8
  call void @_lfortran_complex_add_32(%complex_4* %301, %complex_4* %302, %complex_4* %303)
  %304 = load %complex_4, %complex_4* %303, align 1
  %305 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 0
  %306 = load %complex_4, %complex_4* %305, align 1
  %307 = alloca %complex_4, align 8
  store %complex_4 %304, %complex_4* %307, align 1
  %308 = alloca %complex_4, align 8
  store %complex_4 %306, %complex_4* %308, align 1
  %309 = alloca %complex_4, align 8
  call void @_lfortran_complex_add_32(%complex_4* %307, %complex_4* %308, %complex_4* %309)
  %310 = load %complex_4, %complex_4* %309, align 1
  store %complex_4 %310, %complex_4* %290, align 1
  %311 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %312 = load %complex_4, %complex_4* %311, align 1
  %313 = alloca %complex_4, align 8
  %314 = getelementptr %complex_4, %complex_4* %313, i32 0, i32 0
  %315 = getelementptr %complex_4, %complex_4* %313, i32 0, i32 1
  store float 1.700000e+01, float* %314, align 4
  store float 0.000000e+00, float* %315, align 4
  %316 = load %complex_4, %complex_4* %313, align 1
  %317 = alloca %complex_4, align 8
  store %complex_4 %312, %complex_4* %317, align 1
  %318 = getelementptr %complex_4, %complex_4* %317, i32 0, i32 0
  %319 = load float, float* %318, align 4
  %320 = alloca %complex_4, align 8
  store %complex_4 %316, %complex_4* %320, align 1
  %321 = getelementptr %complex_4, %complex_4* %320, i32 0, i32 0
  %322 = load float, float* %321, align 4
  %323 = alloca %complex_4, align 8
  store %complex_4 %312, %complex_4* %323, align 1
  %324 = getelementptr %complex_4, %complex_4* %323, i32 0, i32 1
  %325 = load float, float* %324, align 4
  %326 = alloca %complex_4, align 8
  store %complex_4 %316, %complex_4* %326, align 1
  %327 = getelementptr %complex_4, %complex_4* %326, i32 0, i32 1
  %328 = load float, float* %327, align 4
  %329 = fcmp one float %319, %322
  %330 = fcmp one float %325, %328
  %331 = or i1 %329, %330
  br i1 %331, label %then36, label %else37

then36:                                           ; preds = %ifcont35
  %332 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  %333 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %332, i8* %333)
  call void @exit(i32 1)
  br label %ifcont38

else37:                                           ; preds = %ifcont35
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  %334 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %335 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 0
  %336 = load %complex_4, %complex_4* %335, align 1
  store %complex_4 %336, %complex_4* %334, align 1
  %337 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %338 = load %complex_4, %complex_4* %337, align 1
  %339 = alloca %complex_4, align 8
  %340 = getelementptr %complex_4, %complex_4* %339, i32 0, i32 0
  %341 = getelementptr %complex_4, %complex_4* %339, i32 0, i32 1
  store float 1.100000e+01, float* %340, align 4
  store float 0.000000e+00, float* %341, align 4
  %342 = load %complex_4, %complex_4* %339, align 1
  %343 = alloca %complex_4, align 8
  store %complex_4 %338, %complex_4* %343, align 1
  %344 = getelementptr %complex_4, %complex_4* %343, i32 0, i32 0
  %345 = load float, float* %344, align 4
  %346 = alloca %complex_4, align 8
  store %complex_4 %342, %complex_4* %346, align 1
  %347 = getelementptr %complex_4, %complex_4* %346, i32 0, i32 0
  %348 = load float, float* %347, align 4
  %349 = alloca %complex_4, align 8
  store %complex_4 %338, %complex_4* %349, align 1
  %350 = getelementptr %complex_4, %complex_4* %349, i32 0, i32 1
  %351 = load float, float* %350, align 4
  %352 = alloca %complex_4, align 8
  store %complex_4 %342, %complex_4* %352, align 1
  %353 = getelementptr %complex_4, %complex_4* %352, i32 0, i32 1
  %354 = load float, float* %353, align 4
  %355 = fcmp one float %345, %348
  %356 = fcmp one float %351, %354
  %357 = or i1 %355, %356
  br i1 %357, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  %358 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  %359 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %358, i8* %359)
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  store i32 0, i32* %i1, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.end46, %ifcont41
  %360 = load i32, i32* %i1, align 4
  %361 = add i32 %360, 1
  %362 = icmp sle i32 %361, 2
  br i1 %362, label %loop.body43, label %loop.end47

loop.body43:                                      ; preds = %loop.head42
  %363 = load i32, i32* %i1, align 4
  %364 = add i32 %363, 1
  store i32 %364, i32* %i1, align 4
  store i32 0, i32* %j2, align 4
  br label %loop.head44

loop.head44:                                      ; preds = %loop.body45, %loop.body43
  %365 = load i32, i32* %j2, align 4
  %366 = add i32 %365, 1
  %367 = icmp sle i32 %366, 2
  br i1 %367, label %loop.body45, label %loop.end46

loop.body45:                                      ; preds = %loop.head44
  %368 = load i32, i32* %j2, align 4
  %369 = add i32 %368, 1
  store i32 %369, i32* %j2, align 4
  %370 = load i32, i32* %i1, align 4
  %371 = load i32, i32* %j2, align 4
  %372 = sub i32 %370, 1
  %373 = mul i32 1, %372
  %374 = add i32 0, %373
  %375 = sub i32 %371, 1
  %376 = mul i32 2, %375
  %377 = add i32 %374, %376
  %378 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 %377
  %379 = load i32, i32* %i1, align 4
  %380 = load i32, i32* %j2, align 4
  %381 = add i32 %379, %380
  %382 = add i32 %381, 10
  %383 = sitofp i32 %382 to float
  %384 = alloca %complex_4, align 8
  %385 = getelementptr %complex_4, %complex_4* %384, i32 0, i32 0
  %386 = getelementptr %complex_4, %complex_4* %384, i32 0, i32 1
  store float %383, float* %385, align 4
  store float 0.000000e+00, float* %386, align 4
  %387 = load %complex_4, %complex_4* %384, align 1
  store %complex_4 %387, %complex_4* %378, align 1
  br label %loop.head44

loop.end46:                                       ; preds = %loop.head44
  br label %loop.head42

loop.end47:                                       ; preds = %loop.head42
  %388 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 0
  %389 = load %complex_4, %complex_4* %388, align 1
  %390 = alloca %complex_4, align 8
  %391 = getelementptr %complex_4, %complex_4* %390, i32 0, i32 0
  %392 = getelementptr %complex_4, %complex_4* %390, i32 0, i32 1
  store float 1.200000e+01, float* %391, align 4
  store float 0.000000e+00, float* %392, align 4
  %393 = load %complex_4, %complex_4* %390, align 1
  %394 = alloca %complex_4, align 8
  store %complex_4 %389, %complex_4* %394, align 1
  %395 = getelementptr %complex_4, %complex_4* %394, i32 0, i32 0
  %396 = load float, float* %395, align 4
  %397 = alloca %complex_4, align 8
  store %complex_4 %393, %complex_4* %397, align 1
  %398 = getelementptr %complex_4, %complex_4* %397, i32 0, i32 0
  %399 = load float, float* %398, align 4
  %400 = alloca %complex_4, align 8
  store %complex_4 %389, %complex_4* %400, align 1
  %401 = getelementptr %complex_4, %complex_4* %400, i32 0, i32 1
  %402 = load float, float* %401, align 4
  %403 = alloca %complex_4, align 8
  store %complex_4 %393, %complex_4* %403, align 1
  %404 = getelementptr %complex_4, %complex_4* %403, i32 0, i32 1
  %405 = load float, float* %404, align 4
  %406 = fcmp one float %396, %399
  %407 = fcmp one float %402, %405
  %408 = or i1 %406, %407
  br i1 %408, label %then48, label %else49

then48:                                           ; preds = %loop.end47
  %409 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.48, i32 0, i32 0), align 8
  %410 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.50, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @12, i32 0, i32 0), i8* %409, i8* %410)
  call void @exit(i32 1)
  br label %ifcont50

else49:                                           ; preds = %loop.end47
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  %411 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 2
  %412 = load %complex_4, %complex_4* %411, align 1
  %413 = alloca %complex_4, align 8
  %414 = getelementptr %complex_4, %complex_4* %413, i32 0, i32 0
  %415 = getelementptr %complex_4, %complex_4* %413, i32 0, i32 1
  store float 1.300000e+01, float* %414, align 4
  store float 0.000000e+00, float* %415, align 4
  %416 = load %complex_4, %complex_4* %413, align 1
  %417 = alloca %complex_4, align 8
  store %complex_4 %412, %complex_4* %417, align 1
  %418 = getelementptr %complex_4, %complex_4* %417, i32 0, i32 0
  %419 = load float, float* %418, align 4
  %420 = alloca %complex_4, align 8
  store %complex_4 %416, %complex_4* %420, align 1
  %421 = getelementptr %complex_4, %complex_4* %420, i32 0, i32 0
  %422 = load float, float* %421, align 4
  %423 = alloca %complex_4, align 8
  store %complex_4 %412, %complex_4* %423, align 1
  %424 = getelementptr %complex_4, %complex_4* %423, i32 0, i32 1
  %425 = load float, float* %424, align 4
  %426 = alloca %complex_4, align 8
  store %complex_4 %416, %complex_4* %426, align 1
  %427 = getelementptr %complex_4, %complex_4* %426, i32 0, i32 1
  %428 = load float, float* %427, align 4
  %429 = fcmp one float %419, %422
  %430 = fcmp one float %425, %428
  %431 = or i1 %429, %430
  br i1 %431, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %432 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.52, i32 0, i32 0), align 8
  %433 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.54, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %432, i8* %433)
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  %434 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 1
  %435 = load %complex_4, %complex_4* %434, align 1
  %436 = alloca %complex_4, align 8
  %437 = getelementptr %complex_4, %complex_4* %436, i32 0, i32 0
  %438 = getelementptr %complex_4, %complex_4* %436, i32 0, i32 1
  store float 1.300000e+01, float* %437, align 4
  store float 0.000000e+00, float* %438, align 4
  %439 = load %complex_4, %complex_4* %436, align 1
  %440 = alloca %complex_4, align 8
  store %complex_4 %435, %complex_4* %440, align 1
  %441 = getelementptr %complex_4, %complex_4* %440, i32 0, i32 0
  %442 = load float, float* %441, align 4
  %443 = alloca %complex_4, align 8
  store %complex_4 %439, %complex_4* %443, align 1
  %444 = getelementptr %complex_4, %complex_4* %443, i32 0, i32 0
  %445 = load float, float* %444, align 4
  %446 = alloca %complex_4, align 8
  store %complex_4 %435, %complex_4* %446, align 1
  %447 = getelementptr %complex_4, %complex_4* %446, i32 0, i32 1
  %448 = load float, float* %447, align 4
  %449 = alloca %complex_4, align 8
  store %complex_4 %439, %complex_4* %449, align 1
  %450 = getelementptr %complex_4, %complex_4* %449, i32 0, i32 1
  %451 = load float, float* %450, align 4
  %452 = fcmp one float %442, %445
  %453 = fcmp one float %448, %451
  %454 = or i1 %452, %453
  br i1 %454, label %then54, label %else55

then54:                                           ; preds = %ifcont53
  %455 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.56, i32 0, i32 0), align 8
  %456 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.58, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %455, i8* %456)
  call void @exit(i32 1)
  br label %ifcont56

else55:                                           ; preds = %ifcont53
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  %457 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 3
  %458 = load %complex_4, %complex_4* %457, align 1
  %459 = alloca %complex_4, align 8
  %460 = getelementptr %complex_4, %complex_4* %459, i32 0, i32 0
  %461 = getelementptr %complex_4, %complex_4* %459, i32 0, i32 1
  store float 1.400000e+01, float* %460, align 4
  store float 0.000000e+00, float* %461, align 4
  %462 = load %complex_4, %complex_4* %459, align 1
  %463 = alloca %complex_4, align 8
  store %complex_4 %458, %complex_4* %463, align 1
  %464 = getelementptr %complex_4, %complex_4* %463, i32 0, i32 0
  %465 = load float, float* %464, align 4
  %466 = alloca %complex_4, align 8
  store %complex_4 %462, %complex_4* %466, align 1
  %467 = getelementptr %complex_4, %complex_4* %466, i32 0, i32 0
  %468 = load float, float* %467, align 4
  %469 = alloca %complex_4, align 8
  store %complex_4 %458, %complex_4* %469, align 1
  %470 = getelementptr %complex_4, %complex_4* %469, i32 0, i32 1
  %471 = load float, float* %470, align 4
  %472 = alloca %complex_4, align 8
  store %complex_4 %462, %complex_4* %472, align 1
  %473 = getelementptr %complex_4, %complex_4* %472, i32 0, i32 1
  %474 = load float, float* %473, align 4
  %475 = fcmp one float %465, %468
  %476 = fcmp one float %471, %474
  %477 = or i1 %475, %476
  br i1 %477, label %then57, label %else58

then57:                                           ; preds = %ifcont56
  %478 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.60, i32 0, i32 0), align 8
  %479 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.62, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %478, i8* %479)
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %ifcont56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont59
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub_32(%complex_4*, %complex_4*, %complex_4*)

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*)

declare void @_lpython_free_argv()
