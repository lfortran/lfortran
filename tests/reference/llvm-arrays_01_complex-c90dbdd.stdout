; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>
%complex_4 = type <{ float, float }>

@0 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@1 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@3 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@4 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@6 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@9 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.7 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.7, i32 0, i32 0), i64 10 }>
@string_const_data.9 = private constant [2 x i8] c"\0A\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@12 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@14 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@17 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@18 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@20 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@23 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.23 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@string_const_data.25 = private constant [2 x i8] c"\0A\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.25, i32 0, i32 0), i64 1 }>
@24 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@26 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@27 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@28 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@29 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@30 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@31 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@32 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@33 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.31 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.31, i32 0, i32 0), i64 10 }>
@string_const_data.33 = private constant [2 x i8] c"\0A\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.33, i32 0, i32 0), i64 1 }>
@34 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@36 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@37 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@38 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@39 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@41 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@42 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@43 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@44 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@45 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@47 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@48 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@49 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.39 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.39, i32 0, i32 0), i64 10 }>
@string_const_data.41 = private constant [2 x i8] c"\0A\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.41, i32 0, i32 0), i64 1 }>
@50 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@51 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@52 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@53 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@54 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@55 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@56 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.43 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.43, i32 0, i32 0), i64 10 }>
@string_const_data.45 = private constant [2 x i8] c"\0A\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.45, i32 0, i32 0), i64 1 }>
@57 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@58 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@59 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@60 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@61 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@62 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@63 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@64 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@65 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.47 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.48 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.47, i32 0, i32 0), i64 10 }>
@string_const_data.49 = private constant [2 x i8] c"\0A\00"
@string_const.50 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.49, i32 0, i32 0), i64 1 }>
@66 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@67 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@68 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@69 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@70 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.51 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.51, i32 0, i32 0), i64 10 }>
@string_const_data.53 = private constant [2 x i8] c"\0A\00"
@string_const.54 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.53, i32 0, i32 0), i64 1 }>
@71 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@72 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@73 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@74 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@75 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.55 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.56 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.55, i32 0, i32 0), i64 10 }>
@string_const_data.57 = private constant [2 x i8] c"\0A\00"
@string_const.58 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.57, i32 0, i32 0), i64 1 }>
@76 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@77 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@78 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@79 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@80 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.59 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.60 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.59, i32 0, i32 0), i64 10 }>
@string_const_data.61 = private constant [2 x i8] c"\0A\00"
@string_const.62 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.61, i32 0, i32 0), i64 1 }>
@81 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x %complex_4], align 8
  %b = alloca [4 x %complex_4], align 8
  %c = alloca [4 x %complex_4], align 8
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  store i32 0, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %ifcont, %.entry
  %2 = load i32, i32* %i1, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 3
  br i1 %4, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %5 = load i32, i32* %i1, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i1, align 4
  %7 = load i32, i32* %i1, align 4
  %8 = sub i32 %7, 1
  %9 = mul i32 1, %8
  %10 = add i32 0, %9
  %11 = icmp slt i32 %7, 1
  %12 = icmp sgt i32 %7, 3
  %13 = or i1 %11, %12
  br i1 %13, label %then, label %ifcont

then:                                             ; preds = %loop.body
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 %7, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont:                                           ; preds = %loop.body
  %14 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 %10
  %15 = load i32, i32* %i1, align 4
  %16 = add i32 %15, 10
  %17 = sitofp i32 %16 to float
  %18 = alloca %complex_4, align 8
  %19 = getelementptr %complex_4, %complex_4* %18, i32 0, i32 0
  %20 = getelementptr %complex_4, %complex_4* %18, i32 0, i32 1
  store float %17, float* %19, align 4
  store float 0.000000e+00, float* %20, align 4
  %21 = load %complex_4, %complex_4* %18, align 1
  store %complex_4 %21, %complex_4* %14, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br i1 false, label %then3, label %ifcont4

then3:                                            ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont4:                                          ; preds = %loop.end
  %22 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 0
  %23 = load %complex_4, %complex_4* %22, align 1
  %24 = alloca %complex_4, align 8
  %25 = getelementptr %complex_4, %complex_4* %24, i32 0, i32 0
  %26 = getelementptr %complex_4, %complex_4* %24, i32 0, i32 1
  store float 1.100000e+01, float* %25, align 4
  store float 0.000000e+00, float* %26, align 4
  %27 = load %complex_4, %complex_4* %24, align 1
  %28 = alloca %complex_4, align 8
  store %complex_4 %23, %complex_4* %28, align 1
  %29 = getelementptr %complex_4, %complex_4* %28, i32 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = alloca %complex_4, align 8
  store %complex_4 %27, %complex_4* %31, align 1
  %32 = getelementptr %complex_4, %complex_4* %31, i32 0, i32 0
  %33 = load float, float* %32, align 4
  %34 = alloca %complex_4, align 8
  store %complex_4 %23, %complex_4* %34, align 1
  %35 = getelementptr %complex_4, %complex_4* %34, i32 0, i32 1
  %36 = load float, float* %35, align 4
  %37 = alloca %complex_4, align 8
  store %complex_4 %27, %complex_4* %37, align 1
  %38 = getelementptr %complex_4, %complex_4* %37, i32 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp one float %30, %33
  %41 = fcmp one float %36, %39
  %42 = or i1 %40, %41
  br i1 %42, label %then5, label %else

then5:                                            ; preds = %ifcont4
  %43 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %44 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8* %43, i8* %44)
  call void @exit(i32 1)
  br label %ifcont6

else:                                             ; preds = %ifcont4
  br label %ifcont6

ifcont6:                                          ; preds = %else, %then5
  br i1 false, label %then7, label %ifcont8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i32 2, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont8:                                          ; preds = %ifcont6
  %45 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 1
  %46 = load %complex_4, %complex_4* %45, align 1
  %47 = alloca %complex_4, align 8
  %48 = getelementptr %complex_4, %complex_4* %47, i32 0, i32 0
  %49 = getelementptr %complex_4, %complex_4* %47, i32 0, i32 1
  store float 1.200000e+01, float* %48, align 4
  store float 0.000000e+00, float* %49, align 4
  %50 = load %complex_4, %complex_4* %47, align 1
  %51 = alloca %complex_4, align 8
  store %complex_4 %46, %complex_4* %51, align 1
  %52 = getelementptr %complex_4, %complex_4* %51, i32 0, i32 0
  %53 = load float, float* %52, align 4
  %54 = alloca %complex_4, align 8
  store %complex_4 %50, %complex_4* %54, align 1
  %55 = getelementptr %complex_4, %complex_4* %54, i32 0, i32 0
  %56 = load float, float* %55, align 4
  %57 = alloca %complex_4, align 8
  store %complex_4 %46, %complex_4* %57, align 1
  %58 = getelementptr %complex_4, %complex_4* %57, i32 0, i32 1
  %59 = load float, float* %58, align 4
  %60 = alloca %complex_4, align 8
  store %complex_4 %50, %complex_4* %60, align 1
  %61 = getelementptr %complex_4, %complex_4* %60, i32 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = fcmp one float %53, %56
  %64 = fcmp one float %59, %62
  %65 = or i1 %63, %64
  br i1 %65, label %then9, label %else10

then9:                                            ; preds = %ifcont8
  %66 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %67 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %66, i8* %67)
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %ifcont8
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  br i1 false, label %then12, label %ifcont13

then12:                                           ; preds = %ifcont11
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 3, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont13:                                         ; preds = %ifcont11
  %68 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 2
  %69 = load %complex_4, %complex_4* %68, align 1
  %70 = alloca %complex_4, align 8
  %71 = getelementptr %complex_4, %complex_4* %70, i32 0, i32 0
  %72 = getelementptr %complex_4, %complex_4* %70, i32 0, i32 1
  store float 1.300000e+01, float* %71, align 4
  store float 0.000000e+00, float* %72, align 4
  %73 = load %complex_4, %complex_4* %70, align 1
  %74 = alloca %complex_4, align 8
  store %complex_4 %69, %complex_4* %74, align 1
  %75 = getelementptr %complex_4, %complex_4* %74, i32 0, i32 0
  %76 = load float, float* %75, align 4
  %77 = alloca %complex_4, align 8
  store %complex_4 %73, %complex_4* %77, align 1
  %78 = getelementptr %complex_4, %complex_4* %77, i32 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = alloca %complex_4, align 8
  store %complex_4 %69, %complex_4* %80, align 1
  %81 = getelementptr %complex_4, %complex_4* %80, i32 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = alloca %complex_4, align 8
  store %complex_4 %73, %complex_4* %83, align 1
  %84 = getelementptr %complex_4, %complex_4* %83, i32 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fcmp one float %76, %79
  %87 = fcmp one float %82, %85
  %88 = or i1 %86, %87
  br i1 %88, label %then14, label %else15

then14:                                           ; preds = %ifcont13
  %89 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  %90 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %89, i8* %90)
  call void @exit(i32 1)
  br label %ifcont16

else15:                                           ; preds = %ifcont13
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  store i32 10, i32* %i1, align 4
  br label %loop.head17

loop.head17:                                      ; preds = %ifcont20, %ifcont16
  %91 = load i32, i32* %i1, align 4
  %92 = add i32 %91, 1
  %93 = icmp sle i32 %92, 14
  br i1 %93, label %loop.body18, label %loop.end21

loop.body18:                                      ; preds = %loop.head17
  %94 = load i32, i32* %i1, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %i1, align 4
  %96 = load i32, i32* %i1, align 4
  %97 = sub i32 %96, 10
  %98 = sub i32 %97, 1
  %99 = mul i32 1, %98
  %100 = add i32 0, %99
  %101 = icmp slt i32 %97, 1
  %102 = icmp sgt i32 %97, 4
  %103 = or i1 %101, %102
  br i1 %103, label %then19, label %ifcont20

then19:                                           ; preds = %loop.body18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i32 %97, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont20:                                         ; preds = %loop.body18
  %104 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 %100
  %105 = load i32, i32* %i1, align 4
  %106 = sitofp i32 %105 to float
  %107 = alloca %complex_4, align 8
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 0
  %109 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 1
  store float %106, float* %108, align 4
  store float 0.000000e+00, float* %109, align 4
  %110 = load %complex_4, %complex_4* %107, align 1
  store %complex_4 %110, %complex_4* %104, align 1
  br label %loop.head17

loop.end21:                                       ; preds = %loop.head17
  br i1 false, label %then22, label %ifcont23

then22:                                           ; preds = %loop.end21
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont23:                                         ; preds = %loop.end21
  %111 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 0
  %112 = load %complex_4, %complex_4* %111, align 1
  %113 = alloca %complex_4, align 8
  %114 = getelementptr %complex_4, %complex_4* %113, i32 0, i32 0
  %115 = getelementptr %complex_4, %complex_4* %113, i32 0, i32 1
  store float 1.100000e+01, float* %114, align 4
  store float 0.000000e+00, float* %115, align 4
  %116 = load %complex_4, %complex_4* %113, align 1
  %117 = alloca %complex_4, align 8
  store %complex_4 %112, %complex_4* %117, align 1
  %118 = getelementptr %complex_4, %complex_4* %117, i32 0, i32 0
  %119 = load float, float* %118, align 4
  %120 = alloca %complex_4, align 8
  store %complex_4 %116, %complex_4* %120, align 1
  %121 = getelementptr %complex_4, %complex_4* %120, i32 0, i32 0
  %122 = load float, float* %121, align 4
  %123 = alloca %complex_4, align 8
  store %complex_4 %112, %complex_4* %123, align 1
  %124 = getelementptr %complex_4, %complex_4* %123, i32 0, i32 1
  %125 = load float, float* %124, align 4
  %126 = alloca %complex_4, align 8
  store %complex_4 %116, %complex_4* %126, align 1
  %127 = getelementptr %complex_4, %complex_4* %126, i32 0, i32 1
  %128 = load float, float* %127, align 4
  %129 = fcmp one float %119, %122
  %130 = fcmp one float %125, %128
  %131 = or i1 %129, %130
  br i1 %131, label %then24, label %else25

then24:                                           ; preds = %ifcont23
  %132 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %133 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %132, i8* %133)
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont23
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  br i1 false, label %then27, label %ifcont28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont28:                                         ; preds = %ifcont26
  %134 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 1
  %135 = load %complex_4, %complex_4* %134, align 1
  %136 = alloca %complex_4, align 8
  %137 = getelementptr %complex_4, %complex_4* %136, i32 0, i32 0
  %138 = getelementptr %complex_4, %complex_4* %136, i32 0, i32 1
  store float 1.200000e+01, float* %137, align 4
  store float 0.000000e+00, float* %138, align 4
  %139 = load %complex_4, %complex_4* %136, align 1
  %140 = alloca %complex_4, align 8
  store %complex_4 %135, %complex_4* %140, align 1
  %141 = getelementptr %complex_4, %complex_4* %140, i32 0, i32 0
  %142 = load float, float* %141, align 4
  %143 = alloca %complex_4, align 8
  store %complex_4 %139, %complex_4* %143, align 1
  %144 = getelementptr %complex_4, %complex_4* %143, i32 0, i32 0
  %145 = load float, float* %144, align 4
  %146 = alloca %complex_4, align 8
  store %complex_4 %135, %complex_4* %146, align 1
  %147 = getelementptr %complex_4, %complex_4* %146, i32 0, i32 1
  %148 = load float, float* %147, align 4
  %149 = alloca %complex_4, align 8
  store %complex_4 %139, %complex_4* %149, align 1
  %150 = getelementptr %complex_4, %complex_4* %149, i32 0, i32 1
  %151 = load float, float* %150, align 4
  %152 = fcmp one float %142, %145
  %153 = fcmp one float %148, %151
  %154 = or i1 %152, %153
  br i1 %154, label %then29, label %else30

then29:                                           ; preds = %ifcont28
  %155 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %156 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i8* %155, i8* %156)
  call void @exit(i32 1)
  br label %ifcont31

else30:                                           ; preds = %ifcont28
  br label %ifcont31

ifcont31:                                         ; preds = %else30, %then29
  br i1 false, label %then32, label %ifcont33

then32:                                           ; preds = %ifcont31
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont33:                                         ; preds = %ifcont31
  %157 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 2
  %158 = load %complex_4, %complex_4* %157, align 1
  %159 = alloca %complex_4, align 8
  %160 = getelementptr %complex_4, %complex_4* %159, i32 0, i32 0
  %161 = getelementptr %complex_4, %complex_4* %159, i32 0, i32 1
  store float 1.300000e+01, float* %160, align 4
  store float 0.000000e+00, float* %161, align 4
  %162 = load %complex_4, %complex_4* %159, align 1
  %163 = alloca %complex_4, align 8
  store %complex_4 %158, %complex_4* %163, align 1
  %164 = getelementptr %complex_4, %complex_4* %163, i32 0, i32 0
  %165 = load float, float* %164, align 4
  %166 = alloca %complex_4, align 8
  store %complex_4 %162, %complex_4* %166, align 1
  %167 = getelementptr %complex_4, %complex_4* %166, i32 0, i32 0
  %168 = load float, float* %167, align 4
  %169 = alloca %complex_4, align 8
  store %complex_4 %158, %complex_4* %169, align 1
  %170 = getelementptr %complex_4, %complex_4* %169, i32 0, i32 1
  %171 = load float, float* %170, align 4
  %172 = alloca %complex_4, align 8
  store %complex_4 %162, %complex_4* %172, align 1
  %173 = getelementptr %complex_4, %complex_4* %172, i32 0, i32 1
  %174 = load float, float* %173, align 4
  %175 = fcmp one float %165, %168
  %176 = fcmp one float %171, %174
  %177 = or i1 %175, %176
  br i1 %177, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  %178 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %179 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0), i8* %178, i8* %179)
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  br i1 false, label %then37, label %ifcont38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont38:                                         ; preds = %ifcont36
  %180 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %181 = load %complex_4, %complex_4* %180, align 1
  %182 = alloca %complex_4, align 8
  %183 = getelementptr %complex_4, %complex_4* %182, i32 0, i32 0
  %184 = getelementptr %complex_4, %complex_4* %182, i32 0, i32 1
  store float 1.400000e+01, float* %183, align 4
  store float 0.000000e+00, float* %184, align 4
  %185 = load %complex_4, %complex_4* %182, align 1
  %186 = alloca %complex_4, align 8
  store %complex_4 %181, %complex_4* %186, align 1
  %187 = getelementptr %complex_4, %complex_4* %186, i32 0, i32 0
  %188 = load float, float* %187, align 4
  %189 = alloca %complex_4, align 8
  store %complex_4 %185, %complex_4* %189, align 1
  %190 = getelementptr %complex_4, %complex_4* %189, i32 0, i32 0
  %191 = load float, float* %190, align 4
  %192 = alloca %complex_4, align 8
  store %complex_4 %181, %complex_4* %192, align 1
  %193 = getelementptr %complex_4, %complex_4* %192, i32 0, i32 1
  %194 = load float, float* %193, align 4
  %195 = alloca %complex_4, align 8
  store %complex_4 %185, %complex_4* %195, align 1
  %196 = getelementptr %complex_4, %complex_4* %195, i32 0, i32 1
  %197 = load float, float* %196, align 4
  %198 = fcmp one float %188, %191
  %199 = fcmp one float %194, %197
  %200 = or i1 %198, %199
  br i1 %200, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  %201 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  %202 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @24, i32 0, i32 0), i8* %201, i8* %202)
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  store i32 0, i32* %i1, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %ifcont47, %ifcont41
  %203 = load i32, i32* %i1, align 4
  %204 = add i32 %203, 1
  %205 = icmp sle i32 %204, 3
  br i1 %205, label %loop.body43, label %loop.end48

loop.body43:                                      ; preds = %loop.head42
  %206 = load i32, i32* %i1, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %i1, align 4
  %208 = load i32, i32* %i1, align 4
  %209 = sub i32 %208, 1
  %210 = mul i32 1, %209
  %211 = add i32 0, %210
  %212 = icmp slt i32 %208, 1
  %213 = icmp sgt i32 %208, 4
  %214 = or i1 %212, %213
  br i1 %214, label %then44, label %ifcont45

then44:                                           ; preds = %loop.body43
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0), i32 %208, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont45:                                         ; preds = %loop.body43
  %215 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 %211
  %216 = load i32, i32* %i1, align 4
  %217 = sub i32 %216, 1
  %218 = mul i32 1, %217
  %219 = add i32 0, %218
  %220 = icmp slt i32 %216, 1
  %221 = icmp sgt i32 %216, 3
  %222 = or i1 %220, %221
  br i1 %222, label %then46, label %ifcont47

then46:                                           ; preds = %ifcont45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @27, i32 0, i32 0), i32 %216, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont47:                                         ; preds = %ifcont45
  %223 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 %219
  %224 = load %complex_4, %complex_4* %223, align 1
  %225 = alloca %complex_4, align 8
  %226 = getelementptr %complex_4, %complex_4* %225, i32 0, i32 0
  %227 = getelementptr %complex_4, %complex_4* %225, i32 0, i32 1
  store float 1.000000e+01, float* %226, align 4
  store float 0.000000e+00, float* %227, align 4
  %228 = load %complex_4, %complex_4* %225, align 1
  %229 = alloca %complex_4, align 8
  store %complex_4 %224, %complex_4* %229, align 1
  %230 = alloca %complex_4, align 8
  store %complex_4 %228, %complex_4* %230, align 1
  %231 = alloca %complex_4, align 8
  call void @_lfortran_complex_sub_32(%complex_4* %229, %complex_4* %230, %complex_4* %231)
  %232 = load %complex_4, %complex_4* %231, align 1
  store %complex_4 %232, %complex_4* %215, align 1
  br label %loop.head42

loop.end48:                                       ; preds = %loop.head42
  br i1 false, label %then49, label %ifcont50

then49:                                           ; preds = %loop.end48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont50:                                         ; preds = %loop.end48
  %233 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 0
  %234 = load %complex_4, %complex_4* %233, align 1
  %235 = alloca %complex_4, align 8
  %236 = getelementptr %complex_4, %complex_4* %235, i32 0, i32 0
  %237 = getelementptr %complex_4, %complex_4* %235, i32 0, i32 1
  store float 1.000000e+00, float* %236, align 4
  store float 0.000000e+00, float* %237, align 4
  %238 = load %complex_4, %complex_4* %235, align 1
  %239 = alloca %complex_4, align 8
  store %complex_4 %234, %complex_4* %239, align 1
  %240 = getelementptr %complex_4, %complex_4* %239, i32 0, i32 0
  %241 = load float, float* %240, align 4
  %242 = alloca %complex_4, align 8
  store %complex_4 %238, %complex_4* %242, align 1
  %243 = getelementptr %complex_4, %complex_4* %242, i32 0, i32 0
  %244 = load float, float* %243, align 4
  %245 = alloca %complex_4, align 8
  store %complex_4 %234, %complex_4* %245, align 1
  %246 = getelementptr %complex_4, %complex_4* %245, i32 0, i32 1
  %247 = load float, float* %246, align 4
  %248 = alloca %complex_4, align 8
  store %complex_4 %238, %complex_4* %248, align 1
  %249 = getelementptr %complex_4, %complex_4* %248, i32 0, i32 1
  %250 = load float, float* %249, align 4
  %251 = fcmp one float %241, %244
  %252 = fcmp one float %247, %250
  %253 = or i1 %251, %252
  br i1 %253, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  %254 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %255 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* %254, i8* %255)
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  br i1 false, label %then54, label %ifcont55

then54:                                           ; preds = %ifcont53
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @32, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont55:                                         ; preds = %ifcont53
  %256 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 1
  %257 = load %complex_4, %complex_4* %256, align 1
  %258 = alloca %complex_4, align 8
  %259 = getelementptr %complex_4, %complex_4* %258, i32 0, i32 0
  %260 = getelementptr %complex_4, %complex_4* %258, i32 0, i32 1
  store float 2.000000e+00, float* %259, align 4
  store float 0.000000e+00, float* %260, align 4
  %261 = load %complex_4, %complex_4* %258, align 1
  %262 = alloca %complex_4, align 8
  store %complex_4 %257, %complex_4* %262, align 1
  %263 = getelementptr %complex_4, %complex_4* %262, i32 0, i32 0
  %264 = load float, float* %263, align 4
  %265 = alloca %complex_4, align 8
  store %complex_4 %261, %complex_4* %265, align 1
  %266 = getelementptr %complex_4, %complex_4* %265, i32 0, i32 0
  %267 = load float, float* %266, align 4
  %268 = alloca %complex_4, align 8
  store %complex_4 %257, %complex_4* %268, align 1
  %269 = getelementptr %complex_4, %complex_4* %268, i32 0, i32 1
  %270 = load float, float* %269, align 4
  %271 = alloca %complex_4, align 8
  store %complex_4 %261, %complex_4* %271, align 1
  %272 = getelementptr %complex_4, %complex_4* %271, i32 0, i32 1
  %273 = load float, float* %272, align 4
  %274 = fcmp one float %264, %267
  %275 = fcmp one float %270, %273
  %276 = or i1 %274, %275
  br i1 %276, label %then56, label %else57

then56:                                           ; preds = %ifcont55
  %277 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  %278 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @34, i32 0, i32 0), i8* %277, i8* %278)
  call void @exit(i32 1)
  br label %ifcont58

else57:                                           ; preds = %ifcont55
  br label %ifcont58

ifcont58:                                         ; preds = %else57, %then56
  br i1 false, label %then59, label %ifcont60

then59:                                           ; preds = %ifcont58
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont60:                                         ; preds = %ifcont58
  %279 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 2
  %280 = load %complex_4, %complex_4* %279, align 1
  %281 = alloca %complex_4, align 8
  %282 = getelementptr %complex_4, %complex_4* %281, i32 0, i32 0
  %283 = getelementptr %complex_4, %complex_4* %281, i32 0, i32 1
  store float 3.000000e+00, float* %282, align 4
  store float 0.000000e+00, float* %283, align 4
  %284 = load %complex_4, %complex_4* %281, align 1
  %285 = alloca %complex_4, align 8
  store %complex_4 %280, %complex_4* %285, align 1
  %286 = getelementptr %complex_4, %complex_4* %285, i32 0, i32 0
  %287 = load float, float* %286, align 4
  %288 = alloca %complex_4, align 8
  store %complex_4 %284, %complex_4* %288, align 1
  %289 = getelementptr %complex_4, %complex_4* %288, i32 0, i32 0
  %290 = load float, float* %289, align 4
  %291 = alloca %complex_4, align 8
  store %complex_4 %280, %complex_4* %291, align 1
  %292 = getelementptr %complex_4, %complex_4* %291, i32 0, i32 1
  %293 = load float, float* %292, align 4
  %294 = alloca %complex_4, align 8
  store %complex_4 %284, %complex_4* %294, align 1
  %295 = getelementptr %complex_4, %complex_4* %294, i32 0, i32 1
  %296 = load float, float* %295, align 4
  %297 = fcmp one float %287, %290
  %298 = fcmp one float %293, %296
  %299 = or i1 %297, %298
  br i1 %299, label %then61, label %else62

then61:                                           ; preds = %ifcont60
  %300 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %301 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @37, i32 0, i32 0), i8* %300, i8* %301)
  call void @exit(i32 1)
  br label %ifcont63

else62:                                           ; preds = %ifcont60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  br i1 false, label %then64, label %ifcont65

then64:                                           ; preds = %ifcont63
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @38, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont65:                                         ; preds = %ifcont63
  %302 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  br i1 false, label %then66, label %ifcont67

then66:                                           ; preds = %ifcont65
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont67:                                         ; preds = %ifcont65
  %303 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 0
  %304 = load %complex_4, %complex_4* %303, align 1
  br i1 false, label %then68, label %ifcont69

then68:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @42, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont69:                                         ; preds = %ifcont67
  %305 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 1
  %306 = load %complex_4, %complex_4* %305, align 1
  %307 = alloca %complex_4, align 8
  store %complex_4 %304, %complex_4* %307, align 1
  %308 = alloca %complex_4, align 8
  store %complex_4 %306, %complex_4* %308, align 1
  %309 = alloca %complex_4, align 8
  call void @_lfortran_complex_add_32(%complex_4* %307, %complex_4* %308, %complex_4* %309)
  %310 = load %complex_4, %complex_4* %309, align 1
  br i1 false, label %then70, label %ifcont71

then70:                                           ; preds = %ifcont69
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @44, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont71:                                         ; preds = %ifcont69
  %311 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 2
  %312 = load %complex_4, %complex_4* %311, align 1
  %313 = alloca %complex_4, align 8
  store %complex_4 %310, %complex_4* %313, align 1
  %314 = alloca %complex_4, align 8
  store %complex_4 %312, %complex_4* %314, align 1
  %315 = alloca %complex_4, align 8
  call void @_lfortran_complex_add_32(%complex_4* %313, %complex_4* %314, %complex_4* %315)
  %316 = load %complex_4, %complex_4* %315, align 1
  br i1 false, label %then72, label %ifcont73

then72:                                           ; preds = %ifcont71
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont73:                                         ; preds = %ifcont71
  %317 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 0
  %318 = load %complex_4, %complex_4* %317, align 1
  %319 = alloca %complex_4, align 8
  store %complex_4 %316, %complex_4* %319, align 1
  %320 = alloca %complex_4, align 8
  store %complex_4 %318, %complex_4* %320, align 1
  %321 = alloca %complex_4, align 8
  call void @_lfortran_complex_add_32(%complex_4* %319, %complex_4* %320, %complex_4* %321)
  %322 = load %complex_4, %complex_4* %321, align 1
  store %complex_4 %322, %complex_4* %302, align 1
  br i1 false, label %then74, label %ifcont75

then74:                                           ; preds = %ifcont73
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont75:                                         ; preds = %ifcont73
  %323 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %324 = load %complex_4, %complex_4* %323, align 1
  %325 = alloca %complex_4, align 8
  %326 = getelementptr %complex_4, %complex_4* %325, i32 0, i32 0
  %327 = getelementptr %complex_4, %complex_4* %325, i32 0, i32 1
  store float 1.700000e+01, float* %326, align 4
  store float 0.000000e+00, float* %327, align 4
  %328 = load %complex_4, %complex_4* %325, align 1
  %329 = alloca %complex_4, align 8
  store %complex_4 %324, %complex_4* %329, align 1
  %330 = getelementptr %complex_4, %complex_4* %329, i32 0, i32 0
  %331 = load float, float* %330, align 4
  %332 = alloca %complex_4, align 8
  store %complex_4 %328, %complex_4* %332, align 1
  %333 = getelementptr %complex_4, %complex_4* %332, i32 0, i32 0
  %334 = load float, float* %333, align 4
  %335 = alloca %complex_4, align 8
  store %complex_4 %324, %complex_4* %335, align 1
  %336 = getelementptr %complex_4, %complex_4* %335, i32 0, i32 1
  %337 = load float, float* %336, align 4
  %338 = alloca %complex_4, align 8
  store %complex_4 %328, %complex_4* %338, align 1
  %339 = getelementptr %complex_4, %complex_4* %338, i32 0, i32 1
  %340 = load float, float* %339, align 4
  %341 = fcmp one float %331, %334
  %342 = fcmp one float %337, %340
  %343 = or i1 %341, %342
  br i1 %343, label %then76, label %else77

then76:                                           ; preds = %ifcont75
  %344 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  %345 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @50, i32 0, i32 0), i8* %344, i8* %345)
  call void @exit(i32 1)
  br label %ifcont78

else77:                                           ; preds = %ifcont75
  br label %ifcont78

ifcont78:                                         ; preds = %else77, %then76
  br i1 false, label %then79, label %ifcont80

then79:                                           ; preds = %ifcont78
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @51, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont80:                                         ; preds = %ifcont78
  %346 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  br i1 false, label %then81, label %ifcont82

then81:                                           ; preds = %ifcont80
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @54, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @53, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  unreachable

ifcont82:                                         ; preds = %ifcont80
  %347 = getelementptr [3 x %complex_4], [3 x %complex_4]* %a, i32 0, i32 0
  %348 = load %complex_4, %complex_4* %347, align 1
  store %complex_4 %348, %complex_4* %346, align 1
  br i1 false, label %then83, label %ifcont84

then83:                                           ; preds = %ifcont82
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @55, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  unreachable

ifcont84:                                         ; preds = %ifcont82
  %349 = getelementptr [4 x %complex_4], [4 x %complex_4]* %b, i32 0, i32 3
  %350 = load %complex_4, %complex_4* %349, align 1
  %351 = alloca %complex_4, align 8
  %352 = getelementptr %complex_4, %complex_4* %351, i32 0, i32 0
  %353 = getelementptr %complex_4, %complex_4* %351, i32 0, i32 1
  store float 1.100000e+01, float* %352, align 4
  store float 0.000000e+00, float* %353, align 4
  %354 = load %complex_4, %complex_4* %351, align 1
  %355 = alloca %complex_4, align 8
  store %complex_4 %350, %complex_4* %355, align 1
  %356 = getelementptr %complex_4, %complex_4* %355, i32 0, i32 0
  %357 = load float, float* %356, align 4
  %358 = alloca %complex_4, align 8
  store %complex_4 %354, %complex_4* %358, align 1
  %359 = getelementptr %complex_4, %complex_4* %358, i32 0, i32 0
  %360 = load float, float* %359, align 4
  %361 = alloca %complex_4, align 8
  store %complex_4 %350, %complex_4* %361, align 1
  %362 = getelementptr %complex_4, %complex_4* %361, i32 0, i32 1
  %363 = load float, float* %362, align 4
  %364 = alloca %complex_4, align 8
  store %complex_4 %354, %complex_4* %364, align 1
  %365 = getelementptr %complex_4, %complex_4* %364, i32 0, i32 1
  %366 = load float, float* %365, align 4
  %367 = fcmp one float %357, %360
  %368 = fcmp one float %363, %366
  %369 = or i1 %367, %368
  br i1 %369, label %then85, label %else86

then85:                                           ; preds = %ifcont84
  %370 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  %371 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @57, i32 0, i32 0), i8* %370, i8* %371)
  call void @exit(i32 1)
  br label %ifcont87

else86:                                           ; preds = %ifcont84
  br label %ifcont87

ifcont87:                                         ; preds = %else86, %then85
  store i32 0, i32* %i1, align 4
  br label %loop.head88

loop.head88:                                      ; preds = %loop.end96, %ifcont87
  %372 = load i32, i32* %i1, align 4
  %373 = add i32 %372, 1
  %374 = icmp sle i32 %373, 2
  br i1 %374, label %loop.body89, label %loop.end97

loop.body89:                                      ; preds = %loop.head88
  %375 = load i32, i32* %i1, align 4
  %376 = add i32 %375, 1
  store i32 %376, i32* %i1, align 4
  store i32 0, i32* %j2, align 4
  br label %loop.head90

loop.head90:                                      ; preds = %ifcont95, %loop.body89
  %377 = load i32, i32* %j2, align 4
  %378 = add i32 %377, 1
  %379 = icmp sle i32 %378, 2
  br i1 %379, label %loop.body91, label %loop.end96

loop.body91:                                      ; preds = %loop.head90
  %380 = load i32, i32* %j2, align 4
  %381 = add i32 %380, 1
  store i32 %381, i32* %j2, align 4
  %382 = load i32, i32* %i1, align 4
  %383 = load i32, i32* %j2, align 4
  %384 = sub i32 %382, 1
  %385 = mul i32 1, %384
  %386 = add i32 0, %385
  %387 = icmp slt i32 %382, 1
  %388 = icmp sgt i32 %382, 2
  %389 = or i1 %387, %388
  br i1 %389, label %then92, label %ifcont93

then92:                                           ; preds = %loop.body91
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @58, i32 0, i32 0), i32 %382, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont93:                                         ; preds = %loop.body91
  %390 = sub i32 %383, 1
  %391 = mul i32 2, %390
  %392 = add i32 %386, %391
  %393 = icmp slt i32 %383, 1
  %394 = icmp sgt i32 %383, 2
  %395 = or i1 %393, %394
  br i1 %395, label %then94, label %ifcont95

then94:                                           ; preds = %ifcont93
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @61, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @60, i32 0, i32 0), i32 %383, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont95:                                         ; preds = %ifcont93
  %396 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 %392
  %397 = load i32, i32* %i1, align 4
  %398 = load i32, i32* %j2, align 4
  %399 = add i32 %397, %398
  %400 = add i32 %399, 10
  %401 = sitofp i32 %400 to float
  %402 = alloca %complex_4, align 8
  %403 = getelementptr %complex_4, %complex_4* %402, i32 0, i32 0
  %404 = getelementptr %complex_4, %complex_4* %402, i32 0, i32 1
  store float %401, float* %403, align 4
  store float 0.000000e+00, float* %404, align 4
  %405 = load %complex_4, %complex_4* %402, align 1
  store %complex_4 %405, %complex_4* %396, align 1
  br label %loop.head90

loop.end96:                                       ; preds = %loop.head90
  br label %loop.head88

loop.end97:                                       ; preds = %loop.head88
  br i1 false, label %then98, label %ifcont99

then98:                                           ; preds = %loop.end97
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @62, i32 0, i32 0), i32 1, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont99:                                         ; preds = %loop.end97
  br i1 false, label %then100, label %ifcont101

then100:                                          ; preds = %ifcont99
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @65, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @64, i32 0, i32 0), i32 1, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont101:                                        ; preds = %ifcont99
  %406 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 0
  %407 = load %complex_4, %complex_4* %406, align 1
  %408 = alloca %complex_4, align 8
  %409 = getelementptr %complex_4, %complex_4* %408, i32 0, i32 0
  %410 = getelementptr %complex_4, %complex_4* %408, i32 0, i32 1
  store float 1.200000e+01, float* %409, align 4
  store float 0.000000e+00, float* %410, align 4
  %411 = load %complex_4, %complex_4* %408, align 1
  %412 = alloca %complex_4, align 8
  store %complex_4 %407, %complex_4* %412, align 1
  %413 = getelementptr %complex_4, %complex_4* %412, i32 0, i32 0
  %414 = load float, float* %413, align 4
  %415 = alloca %complex_4, align 8
  store %complex_4 %411, %complex_4* %415, align 1
  %416 = getelementptr %complex_4, %complex_4* %415, i32 0, i32 0
  %417 = load float, float* %416, align 4
  %418 = alloca %complex_4, align 8
  store %complex_4 %407, %complex_4* %418, align 1
  %419 = getelementptr %complex_4, %complex_4* %418, i32 0, i32 1
  %420 = load float, float* %419, align 4
  %421 = alloca %complex_4, align 8
  store %complex_4 %411, %complex_4* %421, align 1
  %422 = getelementptr %complex_4, %complex_4* %421, i32 0, i32 1
  %423 = load float, float* %422, align 4
  %424 = fcmp one float %414, %417
  %425 = fcmp one float %420, %423
  %426 = or i1 %424, %425
  br i1 %426, label %then102, label %else103

then102:                                          ; preds = %ifcont101
  %427 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.48, i32 0, i32 0), align 8
  %428 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.50, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @66, i32 0, i32 0), i8* %427, i8* %428)
  call void @exit(i32 1)
  br label %ifcont104

else103:                                          ; preds = %ifcont101
  br label %ifcont104

ifcont104:                                        ; preds = %else103, %then102
  br i1 false, label %then105, label %ifcont106

then105:                                          ; preds = %ifcont104
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @68, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @67, i32 0, i32 0), i32 1, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont106:                                        ; preds = %ifcont104
  br i1 false, label %then107, label %ifcont108

then107:                                          ; preds = %ifcont106
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @69, i32 0, i32 0), i32 2, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont108:                                        ; preds = %ifcont106
  %429 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 2
  %430 = load %complex_4, %complex_4* %429, align 1
  %431 = alloca %complex_4, align 8
  %432 = getelementptr %complex_4, %complex_4* %431, i32 0, i32 0
  %433 = getelementptr %complex_4, %complex_4* %431, i32 0, i32 1
  store float 1.300000e+01, float* %432, align 4
  store float 0.000000e+00, float* %433, align 4
  %434 = load %complex_4, %complex_4* %431, align 1
  %435 = alloca %complex_4, align 8
  store %complex_4 %430, %complex_4* %435, align 1
  %436 = getelementptr %complex_4, %complex_4* %435, i32 0, i32 0
  %437 = load float, float* %436, align 4
  %438 = alloca %complex_4, align 8
  store %complex_4 %434, %complex_4* %438, align 1
  %439 = getelementptr %complex_4, %complex_4* %438, i32 0, i32 0
  %440 = load float, float* %439, align 4
  %441 = alloca %complex_4, align 8
  store %complex_4 %430, %complex_4* %441, align 1
  %442 = getelementptr %complex_4, %complex_4* %441, i32 0, i32 1
  %443 = load float, float* %442, align 4
  %444 = alloca %complex_4, align 8
  store %complex_4 %434, %complex_4* %444, align 1
  %445 = getelementptr %complex_4, %complex_4* %444, i32 0, i32 1
  %446 = load float, float* %445, align 4
  %447 = fcmp one float %437, %440
  %448 = fcmp one float %443, %446
  %449 = or i1 %447, %448
  br i1 %449, label %then109, label %else110

then109:                                          ; preds = %ifcont108
  %450 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.52, i32 0, i32 0), align 8
  %451 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.54, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @71, i32 0, i32 0), i8* %450, i8* %451)
  call void @exit(i32 1)
  br label %ifcont111

else110:                                          ; preds = %ifcont108
  br label %ifcont111

ifcont111:                                        ; preds = %else110, %then109
  br i1 false, label %then112, label %ifcont113

then112:                                          ; preds = %ifcont111
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @73, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @72, i32 0, i32 0), i32 2, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont113:                                        ; preds = %ifcont111
  br i1 false, label %then114, label %ifcont115

then114:                                          ; preds = %ifcont113
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0), i32 1, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont115:                                        ; preds = %ifcont113
  %452 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 1
  %453 = load %complex_4, %complex_4* %452, align 1
  %454 = alloca %complex_4, align 8
  %455 = getelementptr %complex_4, %complex_4* %454, i32 0, i32 0
  %456 = getelementptr %complex_4, %complex_4* %454, i32 0, i32 1
  store float 1.300000e+01, float* %455, align 4
  store float 0.000000e+00, float* %456, align 4
  %457 = load %complex_4, %complex_4* %454, align 1
  %458 = alloca %complex_4, align 8
  store %complex_4 %453, %complex_4* %458, align 1
  %459 = getelementptr %complex_4, %complex_4* %458, i32 0, i32 0
  %460 = load float, float* %459, align 4
  %461 = alloca %complex_4, align 8
  store %complex_4 %457, %complex_4* %461, align 1
  %462 = getelementptr %complex_4, %complex_4* %461, i32 0, i32 0
  %463 = load float, float* %462, align 4
  %464 = alloca %complex_4, align 8
  store %complex_4 %453, %complex_4* %464, align 1
  %465 = getelementptr %complex_4, %complex_4* %464, i32 0, i32 1
  %466 = load float, float* %465, align 4
  %467 = alloca %complex_4, align 8
  store %complex_4 %457, %complex_4* %467, align 1
  %468 = getelementptr %complex_4, %complex_4* %467, i32 0, i32 1
  %469 = load float, float* %468, align 4
  %470 = fcmp one float %460, %463
  %471 = fcmp one float %466, %469
  %472 = or i1 %470, %471
  br i1 %472, label %then116, label %else117

then116:                                          ; preds = %ifcont115
  %473 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.56, i32 0, i32 0), align 8
  %474 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.58, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @76, i32 0, i32 0), i8* %473, i8* %474)
  call void @exit(i32 1)
  br label %ifcont118

else117:                                          ; preds = %ifcont115
  br label %ifcont118

ifcont118:                                        ; preds = %else117, %then116
  br i1 false, label %then119, label %ifcont120

then119:                                          ; preds = %ifcont118
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @78, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @77, i32 0, i32 0), i32 2, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont120:                                        ; preds = %ifcont118
  br i1 false, label %then121, label %ifcont122

then121:                                          ; preds = %ifcont120
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @79, i32 0, i32 0), i32 2, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  unreachable

ifcont122:                                        ; preds = %ifcont120
  %475 = getelementptr [4 x %complex_4], [4 x %complex_4]* %c, i32 0, i32 3
  %476 = load %complex_4, %complex_4* %475, align 1
  %477 = alloca %complex_4, align 8
  %478 = getelementptr %complex_4, %complex_4* %477, i32 0, i32 0
  %479 = getelementptr %complex_4, %complex_4* %477, i32 0, i32 1
  store float 1.400000e+01, float* %478, align 4
  store float 0.000000e+00, float* %479, align 4
  %480 = load %complex_4, %complex_4* %477, align 1
  %481 = alloca %complex_4, align 8
  store %complex_4 %476, %complex_4* %481, align 1
  %482 = getelementptr %complex_4, %complex_4* %481, i32 0, i32 0
  %483 = load float, float* %482, align 4
  %484 = alloca %complex_4, align 8
  store %complex_4 %480, %complex_4* %484, align 1
  %485 = getelementptr %complex_4, %complex_4* %484, i32 0, i32 0
  %486 = load float, float* %485, align 4
  %487 = alloca %complex_4, align 8
  store %complex_4 %476, %complex_4* %487, align 1
  %488 = getelementptr %complex_4, %complex_4* %487, i32 0, i32 1
  %489 = load float, float* %488, align 4
  %490 = alloca %complex_4, align 8
  store %complex_4 %480, %complex_4* %490, align 1
  %491 = getelementptr %complex_4, %complex_4* %490, i32 0, i32 1
  %492 = load float, float* %491, align 4
  %493 = fcmp one float %483, %486
  %494 = fcmp one float %489, %492
  %495 = or i1 %493, %494
  br i1 %495, label %then123, label %else124

then123:                                          ; preds = %ifcont122
  %496 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.60, i32 0, i32 0), align 8
  %497 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.62, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @81, i32 0, i32 0), i8* %496, i8* %497)
  call void @exit(i32 1)
  br label %ifcont125

else124:                                          ; preds = %ifcont122
  br label %ifcont125

ifcont125:                                        ; preds = %else124, %then123
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont125
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub_32(%complex_4*, %complex_4*, %complex_4*)

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*)

declare void @_lpython_free_argv()
