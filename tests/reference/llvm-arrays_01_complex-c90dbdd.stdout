; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%complex_4 = type { float, float }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array, %array* %a, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 3, i32* %12, align 4
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = getelementptr %array, %array* %a, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = alloca %complex_4, i32 %15, align 8
  store %complex_4* %16, %complex_4** %14, align 8
  %b = alloca %array, align 8
  %17 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr %array, %array* %b, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  %22 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %22, align 4
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %23 = load %dimension_descriptor*, %dimension_descriptor** %18, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 4, i32* %27, align 4
  %28 = alloca i32, align 4
  store i32 4, i32* %28, align 4
  %29 = getelementptr %array, %array* %b, i32 0, i32 0
  %30 = load i32, i32* %28, align 4
  %31 = alloca %complex_4, i32 %30, align 8
  store %complex_4* %31, %complex_4** %29, align 8
  %c = alloca %array, align 8
  %32 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %32, align 4
  %33 = getelementptr %array, %array* %c, i32 0, i32 2
  %34 = alloca i32, align 4
  store i32 2, i32* %34, align 4
  %35 = load i32, i32* %34, align 4
  %36 = alloca %dimension_descriptor, i32 %35, align 8
  %37 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 2, i32* %37, align 4
  store %dimension_descriptor* %36, %dimension_descriptor** %33, align 8
  %38 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  store i32 1, i32* %40, align 4
  store i32 1, i32* %41, align 4
  store i32 2, i32* %42, align 4
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  store i32 2, i32* %44, align 4
  store i32 1, i32* %45, align 4
  store i32 2, i32* %46, align 4
  %47 = alloca i32, align 4
  store i32 4, i32* %47, align 4
  %48 = getelementptr %array, %array* %c, i32 0, i32 0
  %49 = load i32, i32* %47, align 4
  %50 = alloca %complex_4, i32 %49, align 8
  store %complex_4* %50, %complex_4** %48, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %51 = load i32, i32* %i, align 4
  %52 = add i32 %51, 1
  %53 = icmp sle i32 %52, 3
  br i1 %53, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %i, align 4
  %56 = load i32, i32* %i, align 4
  %57 = getelementptr %array, %array* %a, i32 0, i32 2
  %58 = load %dimension_descriptor*, %dimension_descriptor** %57, align 8
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %58, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %56, %61
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 %64, %62
  %66 = add i32 0, %65
  %67 = getelementptr %array, %array* %a, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %66, %68
  %70 = getelementptr %array, %array* %a, i32 0, i32 0
  %71 = load %complex_4*, %complex_4** %70, align 8
  %72 = getelementptr inbounds %complex_4, %complex_4* %71, i32 %69
  %73 = load i32, i32* %i, align 4
  %74 = add i32 %73, 10
  %75 = sitofp i32 %74 to float
  %76 = alloca %complex_4, align 8
  %77 = getelementptr %complex_4, %complex_4* %76, i32 0, i32 0
  %78 = getelementptr %complex_4, %complex_4* %76, i32 0, i32 1
  store float %75, float* %77, align 4
  store float 0.000000e+00, float* %78, align 4
  %79 = load %complex_4, %complex_4* %76, align 4
  store %complex_4 %79, %complex_4* %72, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %80 = getelementptr %array, %array* %a, i32 0, i32 2
  %81 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 0
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 1, %84
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = mul i32 %87, %85
  %89 = add i32 0, %88
  %90 = getelementptr %array, %array* %a, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %89, %91
  %93 = getelementptr %array, %array* %a, i32 0, i32 0
  %94 = load %complex_4*, %complex_4** %93, align 8
  %95 = getelementptr inbounds %complex_4, %complex_4* %94, i32 %92
  %96 = load %complex_4, %complex_4* %95, align 4
  %97 = alloca %complex_4, align 8
  %98 = getelementptr %complex_4, %complex_4* %97, i32 0, i32 0
  %99 = getelementptr %complex_4, %complex_4* %97, i32 0, i32 1
  store float 1.100000e+01, float* %98, align 4
  store float 0.000000e+00, float* %99, align 4
  %100 = load %complex_4, %complex_4* %97, align 4
  %101 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %101, align 4
  %102 = getelementptr %complex_4, %complex_4* %101, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = alloca %complex_4, align 8
  store %complex_4 %100, %complex_4* %104, align 4
  %105 = getelementptr %complex_4, %complex_4* %104, i32 0, i32 0
  %106 = load float, float* %105, align 4
  %107 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %107, align 4
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 1
  %109 = load float, float* %108, align 4
  %110 = alloca %complex_4, align 8
  store %complex_4 %100, %complex_4* %110, align 4
  %111 = getelementptr %complex_4, %complex_4* %110, i32 0, i32 1
  %112 = load float, float* %111, align 4
  %113 = fcmp une float %103, %106
  %114 = fcmp une float %109, %112
  %115 = and i1 %113, %114
  br i1 %115, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %116 = getelementptr %array, %array* %a, i32 0, i32 2
  %117 = load %dimension_descriptor*, %dimension_descriptor** %116, align 8
  %118 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sub i32 2, %120
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = mul i32 %123, %121
  %125 = add i32 0, %124
  %126 = getelementptr %array, %array* %a, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = add i32 %125, %127
  %129 = getelementptr %array, %array* %a, i32 0, i32 0
  %130 = load %complex_4*, %complex_4** %129, align 8
  %131 = getelementptr inbounds %complex_4, %complex_4* %130, i32 %128
  %132 = load %complex_4, %complex_4* %131, align 4
  %133 = alloca %complex_4, align 8
  %134 = getelementptr %complex_4, %complex_4* %133, i32 0, i32 0
  %135 = getelementptr %complex_4, %complex_4* %133, i32 0, i32 1
  store float 1.200000e+01, float* %134, align 4
  store float 0.000000e+00, float* %135, align 4
  %136 = load %complex_4, %complex_4* %133, align 4
  %137 = alloca %complex_4, align 8
  store %complex_4 %132, %complex_4* %137, align 4
  %138 = getelementptr %complex_4, %complex_4* %137, i32 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = alloca %complex_4, align 8
  store %complex_4 %136, %complex_4* %140, align 4
  %141 = getelementptr %complex_4, %complex_4* %140, i32 0, i32 0
  %142 = load float, float* %141, align 4
  %143 = alloca %complex_4, align 8
  store %complex_4 %132, %complex_4* %143, align 4
  %144 = getelementptr %complex_4, %complex_4* %143, i32 0, i32 1
  %145 = load float, float* %144, align 4
  %146 = alloca %complex_4, align 8
  store %complex_4 %136, %complex_4* %146, align 4
  %147 = getelementptr %complex_4, %complex_4* %146, i32 0, i32 1
  %148 = load float, float* %147, align 4
  %149 = fcmp une float %139, %142
  %150 = fcmp une float %145, %148
  %151 = and i1 %149, %150
  br i1 %151, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %152 = getelementptr %array, %array* %a, i32 0, i32 2
  %153 = load %dimension_descriptor*, %dimension_descriptor** %152, align 8
  %154 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %153, i32 0
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 3, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %154, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 %159, %157
  %161 = add i32 0, %160
  %162 = getelementptr %array, %array* %a, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = add i32 %161, %163
  %165 = getelementptr %array, %array* %a, i32 0, i32 0
  %166 = load %complex_4*, %complex_4** %165, align 8
  %167 = getelementptr inbounds %complex_4, %complex_4* %166, i32 %164
  %168 = load %complex_4, %complex_4* %167, align 4
  %169 = alloca %complex_4, align 8
  %170 = getelementptr %complex_4, %complex_4* %169, i32 0, i32 0
  %171 = getelementptr %complex_4, %complex_4* %169, i32 0, i32 1
  store float 1.300000e+01, float* %170, align 4
  store float 0.000000e+00, float* %171, align 4
  %172 = load %complex_4, %complex_4* %169, align 4
  %173 = alloca %complex_4, align 8
  store %complex_4 %168, %complex_4* %173, align 4
  %174 = getelementptr %complex_4, %complex_4* %173, i32 0, i32 0
  %175 = load float, float* %174, align 4
  %176 = alloca %complex_4, align 8
  store %complex_4 %172, %complex_4* %176, align 4
  %177 = getelementptr %complex_4, %complex_4* %176, i32 0, i32 0
  %178 = load float, float* %177, align 4
  %179 = alloca %complex_4, align 8
  store %complex_4 %168, %complex_4* %179, align 4
  %180 = getelementptr %complex_4, %complex_4* %179, i32 0, i32 1
  %181 = load float, float* %180, align 4
  %182 = alloca %complex_4, align 8
  store %complex_4 %172, %complex_4* %182, align 4
  %183 = getelementptr %complex_4, %complex_4* %182, i32 0, i32 1
  %184 = load float, float* %183, align 4
  %185 = fcmp une float %175, %178
  %186 = fcmp une float %181, %184
  %187 = and i1 %185, %186
  br i1 %187, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %188 = load i32, i32* %i, align 4
  %189 = add i32 %188, 1
  %190 = icmp sle i32 %189, 14
  br i1 %190, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %191 = load i32, i32* %i, align 4
  %192 = add i32 %191, 1
  store i32 %192, i32* %i, align 4
  %193 = load i32, i32* %i, align 4
  %194 = sub i32 %193, 10
  %195 = getelementptr %array, %array* %b, i32 0, i32 2
  %196 = load %dimension_descriptor*, %dimension_descriptor** %195, align 8
  %197 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %196, i32 0
  %198 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = sub i32 %194, %199
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %197, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = mul i32 %202, %200
  %204 = add i32 0, %203
  %205 = getelementptr %array, %array* %b, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = add i32 %204, %206
  %208 = getelementptr %array, %array* %b, i32 0, i32 0
  %209 = load %complex_4*, %complex_4** %208, align 8
  %210 = getelementptr inbounds %complex_4, %complex_4* %209, i32 %207
  %211 = load i32, i32* %i, align 4
  %212 = sitofp i32 %211 to float
  %213 = alloca %complex_4, align 8
  %214 = getelementptr %complex_4, %complex_4* %213, i32 0, i32 0
  %215 = getelementptr %complex_4, %complex_4* %213, i32 0, i32 1
  store float %212, float* %214, align 4
  store float 0.000000e+00, float* %215, align 4
  %216 = load %complex_4, %complex_4* %213, align 4
  store %complex_4 %216, %complex_4* %210, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %217 = getelementptr %array, %array* %b, i32 0, i32 2
  %218 = load %dimension_descriptor*, %dimension_descriptor** %217, align 8
  %219 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %218, i32 0
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = sub i32 1, %221
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = mul i32 %224, %222
  %226 = add i32 0, %225
  %227 = getelementptr %array, %array* %b, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = add i32 %226, %228
  %230 = getelementptr %array, %array* %b, i32 0, i32 0
  %231 = load %complex_4*, %complex_4** %230, align 8
  %232 = getelementptr inbounds %complex_4, %complex_4* %231, i32 %229
  %233 = load %complex_4, %complex_4* %232, align 4
  %234 = alloca %complex_4, align 8
  %235 = getelementptr %complex_4, %complex_4* %234, i32 0, i32 0
  %236 = getelementptr %complex_4, %complex_4* %234, i32 0, i32 1
  store float 1.100000e+01, float* %235, align 4
  store float 0.000000e+00, float* %236, align 4
  %237 = load %complex_4, %complex_4* %234, align 4
  %238 = alloca %complex_4, align 8
  store %complex_4 %233, %complex_4* %238, align 4
  %239 = getelementptr %complex_4, %complex_4* %238, i32 0, i32 0
  %240 = load float, float* %239, align 4
  %241 = alloca %complex_4, align 8
  store %complex_4 %237, %complex_4* %241, align 4
  %242 = getelementptr %complex_4, %complex_4* %241, i32 0, i32 0
  %243 = load float, float* %242, align 4
  %244 = alloca %complex_4, align 8
  store %complex_4 %233, %complex_4* %244, align 4
  %245 = getelementptr %complex_4, %complex_4* %244, i32 0, i32 1
  %246 = load float, float* %245, align 4
  %247 = alloca %complex_4, align 8
  store %complex_4 %237, %complex_4* %247, align 4
  %248 = getelementptr %complex_4, %complex_4* %247, i32 0, i32 1
  %249 = load float, float* %248, align 4
  %250 = fcmp une float %240, %243
  %251 = fcmp une float %246, %249
  %252 = and i1 %250, %251
  br i1 %252, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %253 = getelementptr %array, %array* %b, i32 0, i32 2
  %254 = load %dimension_descriptor*, %dimension_descriptor** %253, align 8
  %255 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %254, i32 0
  %256 = getelementptr %dimension_descriptor, %dimension_descriptor* %255, i32 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = sub i32 2, %257
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %255, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = mul i32 %260, %258
  %262 = add i32 0, %261
  %263 = getelementptr %array, %array* %b, i32 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = add i32 %262, %264
  %266 = getelementptr %array, %array* %b, i32 0, i32 0
  %267 = load %complex_4*, %complex_4** %266, align 8
  %268 = getelementptr inbounds %complex_4, %complex_4* %267, i32 %265
  %269 = load %complex_4, %complex_4* %268, align 4
  %270 = alloca %complex_4, align 8
  %271 = getelementptr %complex_4, %complex_4* %270, i32 0, i32 0
  %272 = getelementptr %complex_4, %complex_4* %270, i32 0, i32 1
  store float 1.200000e+01, float* %271, align 4
  store float 0.000000e+00, float* %272, align 4
  %273 = load %complex_4, %complex_4* %270, align 4
  %274 = alloca %complex_4, align 8
  store %complex_4 %269, %complex_4* %274, align 4
  %275 = getelementptr %complex_4, %complex_4* %274, i32 0, i32 0
  %276 = load float, float* %275, align 4
  %277 = alloca %complex_4, align 8
  store %complex_4 %273, %complex_4* %277, align 4
  %278 = getelementptr %complex_4, %complex_4* %277, i32 0, i32 0
  %279 = load float, float* %278, align 4
  %280 = alloca %complex_4, align 8
  store %complex_4 %269, %complex_4* %280, align 4
  %281 = getelementptr %complex_4, %complex_4* %280, i32 0, i32 1
  %282 = load float, float* %281, align 4
  %283 = alloca %complex_4, align 8
  store %complex_4 %273, %complex_4* %283, align 4
  %284 = getelementptr %complex_4, %complex_4* %283, i32 0, i32 1
  %285 = load float, float* %284, align 4
  %286 = fcmp une float %276, %279
  %287 = fcmp une float %282, %285
  %288 = and i1 %286, %287
  br i1 %288, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %289 = getelementptr %array, %array* %b, i32 0, i32 2
  %290 = load %dimension_descriptor*, %dimension_descriptor** %289, align 8
  %291 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %290, i32 0
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 3, %293
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = mul i32 %296, %294
  %298 = add i32 0, %297
  %299 = getelementptr %array, %array* %b, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = add i32 %298, %300
  %302 = getelementptr %array, %array* %b, i32 0, i32 0
  %303 = load %complex_4*, %complex_4** %302, align 8
  %304 = getelementptr inbounds %complex_4, %complex_4* %303, i32 %301
  %305 = load %complex_4, %complex_4* %304, align 4
  %306 = alloca %complex_4, align 8
  %307 = getelementptr %complex_4, %complex_4* %306, i32 0, i32 0
  %308 = getelementptr %complex_4, %complex_4* %306, i32 0, i32 1
  store float 1.300000e+01, float* %307, align 4
  store float 0.000000e+00, float* %308, align 4
  %309 = load %complex_4, %complex_4* %306, align 4
  %310 = alloca %complex_4, align 8
  store %complex_4 %305, %complex_4* %310, align 4
  %311 = getelementptr %complex_4, %complex_4* %310, i32 0, i32 0
  %312 = load float, float* %311, align 4
  %313 = alloca %complex_4, align 8
  store %complex_4 %309, %complex_4* %313, align 4
  %314 = getelementptr %complex_4, %complex_4* %313, i32 0, i32 0
  %315 = load float, float* %314, align 4
  %316 = alloca %complex_4, align 8
  store %complex_4 %305, %complex_4* %316, align 4
  %317 = getelementptr %complex_4, %complex_4* %316, i32 0, i32 1
  %318 = load float, float* %317, align 4
  %319 = alloca %complex_4, align 8
  store %complex_4 %309, %complex_4* %319, align 4
  %320 = getelementptr %complex_4, %complex_4* %319, i32 0, i32 1
  %321 = load float, float* %320, align 4
  %322 = fcmp une float %312, %315
  %323 = fcmp une float %318, %321
  %324 = and i1 %322, %323
  br i1 %324, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %325 = getelementptr %array, %array* %b, i32 0, i32 2
  %326 = load %dimension_descriptor*, %dimension_descriptor** %325, align 8
  %327 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %326, i32 0
  %328 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = sub i32 4, %329
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %327, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = mul i32 %332, %330
  %334 = add i32 0, %333
  %335 = getelementptr %array, %array* %b, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = add i32 %334, %336
  %338 = getelementptr %array, %array* %b, i32 0, i32 0
  %339 = load %complex_4*, %complex_4** %338, align 8
  %340 = getelementptr inbounds %complex_4, %complex_4* %339, i32 %337
  %341 = load %complex_4, %complex_4* %340, align 4
  %342 = alloca %complex_4, align 8
  %343 = getelementptr %complex_4, %complex_4* %342, i32 0, i32 0
  %344 = getelementptr %complex_4, %complex_4* %342, i32 0, i32 1
  store float 1.400000e+01, float* %343, align 4
  store float 0.000000e+00, float* %344, align 4
  %345 = load %complex_4, %complex_4* %342, align 4
  %346 = alloca %complex_4, align 8
  store %complex_4 %341, %complex_4* %346, align 4
  %347 = getelementptr %complex_4, %complex_4* %346, i32 0, i32 0
  %348 = load float, float* %347, align 4
  %349 = alloca %complex_4, align 8
  store %complex_4 %345, %complex_4* %349, align 4
  %350 = getelementptr %complex_4, %complex_4* %349, i32 0, i32 0
  %351 = load float, float* %350, align 4
  %352 = alloca %complex_4, align 8
  store %complex_4 %341, %complex_4* %352, align 4
  %353 = getelementptr %complex_4, %complex_4* %352, i32 0, i32 1
  %354 = load float, float* %353, align 4
  %355 = alloca %complex_4, align 8
  store %complex_4 %345, %complex_4* %355, align 4
  %356 = getelementptr %complex_4, %complex_4* %355, i32 0, i32 1
  %357 = load float, float* %356, align 4
  %358 = fcmp une float %348, %351
  %359 = fcmp une float %354, %357
  %360 = and i1 %358, %359
  br i1 %360, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %361 = load i32, i32* %i, align 4
  %362 = add i32 %361, 1
  %363 = icmp sle i32 %362, 3
  br i1 %363, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %364 = load i32, i32* %i, align 4
  %365 = add i32 %364, 1
  store i32 %365, i32* %i, align 4
  %366 = load i32, i32* %i, align 4
  %367 = getelementptr %array, %array* %b, i32 0, i32 2
  %368 = load %dimension_descriptor*, %dimension_descriptor** %367, align 8
  %369 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %368, i32 0
  %370 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %366, %371
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %369, i32 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = mul i32 %374, %372
  %376 = add i32 0, %375
  %377 = getelementptr %array, %array* %b, i32 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = add i32 %376, %378
  %380 = getelementptr %array, %array* %b, i32 0, i32 0
  %381 = load %complex_4*, %complex_4** %380, align 8
  %382 = getelementptr inbounds %complex_4, %complex_4* %381, i32 %379
  %383 = load i32, i32* %i, align 4
  %384 = getelementptr %array, %array* %a, i32 0, i32 2
  %385 = load %dimension_descriptor*, %dimension_descriptor** %384, align 8
  %386 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %385, i32 0
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %386, i32 0, i32 1
  %388 = load i32, i32* %387, align 4
  %389 = sub i32 %383, %388
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %386, i32 0, i32 0
  %391 = load i32, i32* %390, align 4
  %392 = mul i32 %391, %389
  %393 = add i32 0, %392
  %394 = getelementptr %array, %array* %a, i32 0, i32 1
  %395 = load i32, i32* %394, align 4
  %396 = add i32 %393, %395
  %397 = getelementptr %array, %array* %a, i32 0, i32 0
  %398 = load %complex_4*, %complex_4** %397, align 8
  %399 = getelementptr inbounds %complex_4, %complex_4* %398, i32 %396
  %400 = load %complex_4, %complex_4* %399, align 4
  %401 = alloca %complex_4, align 8
  %402 = getelementptr %complex_4, %complex_4* %401, i32 0, i32 0
  %403 = getelementptr %complex_4, %complex_4* %401, i32 0, i32 1
  store float 1.000000e+01, float* %402, align 4
  store float 0.000000e+00, float* %403, align 4
  %404 = load %complex_4, %complex_4* %401, align 4
  %405 = alloca %complex_4, align 8
  store %complex_4 %400, %complex_4* %405, align 4
  %406 = alloca %complex_4, align 8
  store %complex_4 %404, %complex_4* %406, align 4
  %407 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub_32(%complex_4* %405, %complex_4* %406, %complex_4* %407)
  %408 = load %complex_4, %complex_4* %407, align 4
  store %complex_4 %408, %complex_4* %382, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %409 = getelementptr %array, %array* %b, i32 0, i32 2
  %410 = load %dimension_descriptor*, %dimension_descriptor** %409, align 8
  %411 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %410, i32 0
  %412 = getelementptr %dimension_descriptor, %dimension_descriptor* %411, i32 0, i32 1
  %413 = load i32, i32* %412, align 4
  %414 = sub i32 1, %413
  %415 = getelementptr %dimension_descriptor, %dimension_descriptor* %411, i32 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = mul i32 %416, %414
  %418 = add i32 0, %417
  %419 = getelementptr %array, %array* %b, i32 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = add i32 %418, %420
  %422 = getelementptr %array, %array* %b, i32 0, i32 0
  %423 = load %complex_4*, %complex_4** %422, align 8
  %424 = getelementptr inbounds %complex_4, %complex_4* %423, i32 %421
  %425 = load %complex_4, %complex_4* %424, align 4
  %426 = alloca %complex_4, align 8
  %427 = getelementptr %complex_4, %complex_4* %426, i32 0, i32 0
  %428 = getelementptr %complex_4, %complex_4* %426, i32 0, i32 1
  store float 1.000000e+00, float* %427, align 4
  store float 0.000000e+00, float* %428, align 4
  %429 = load %complex_4, %complex_4* %426, align 4
  %430 = alloca %complex_4, align 8
  store %complex_4 %425, %complex_4* %430, align 4
  %431 = getelementptr %complex_4, %complex_4* %430, i32 0, i32 0
  %432 = load float, float* %431, align 4
  %433 = alloca %complex_4, align 8
  store %complex_4 %429, %complex_4* %433, align 4
  %434 = getelementptr %complex_4, %complex_4* %433, i32 0, i32 0
  %435 = load float, float* %434, align 4
  %436 = alloca %complex_4, align 8
  store %complex_4 %425, %complex_4* %436, align 4
  %437 = getelementptr %complex_4, %complex_4* %436, i32 0, i32 1
  %438 = load float, float* %437, align 4
  %439 = alloca %complex_4, align 8
  store %complex_4 %429, %complex_4* %439, align 4
  %440 = getelementptr %complex_4, %complex_4* %439, i32 0, i32 1
  %441 = load float, float* %440, align 4
  %442 = fcmp une float %432, %435
  %443 = fcmp une float %438, %441
  %444 = and i1 %442, %443
  br i1 %444, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %445 = getelementptr %array, %array* %b, i32 0, i32 2
  %446 = load %dimension_descriptor*, %dimension_descriptor** %445, align 8
  %447 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %446, i32 0
  %448 = getelementptr %dimension_descriptor, %dimension_descriptor* %447, i32 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = sub i32 2, %449
  %451 = getelementptr %dimension_descriptor, %dimension_descriptor* %447, i32 0, i32 0
  %452 = load i32, i32* %451, align 4
  %453 = mul i32 %452, %450
  %454 = add i32 0, %453
  %455 = getelementptr %array, %array* %b, i32 0, i32 1
  %456 = load i32, i32* %455, align 4
  %457 = add i32 %454, %456
  %458 = getelementptr %array, %array* %b, i32 0, i32 0
  %459 = load %complex_4*, %complex_4** %458, align 8
  %460 = getelementptr inbounds %complex_4, %complex_4* %459, i32 %457
  %461 = load %complex_4, %complex_4* %460, align 4
  %462 = alloca %complex_4, align 8
  %463 = getelementptr %complex_4, %complex_4* %462, i32 0, i32 0
  %464 = getelementptr %complex_4, %complex_4* %462, i32 0, i32 1
  store float 2.000000e+00, float* %463, align 4
  store float 0.000000e+00, float* %464, align 4
  %465 = load %complex_4, %complex_4* %462, align 4
  %466 = alloca %complex_4, align 8
  store %complex_4 %461, %complex_4* %466, align 4
  %467 = getelementptr %complex_4, %complex_4* %466, i32 0, i32 0
  %468 = load float, float* %467, align 4
  %469 = alloca %complex_4, align 8
  store %complex_4 %465, %complex_4* %469, align 4
  %470 = getelementptr %complex_4, %complex_4* %469, i32 0, i32 0
  %471 = load float, float* %470, align 4
  %472 = alloca %complex_4, align 8
  store %complex_4 %461, %complex_4* %472, align 4
  %473 = getelementptr %complex_4, %complex_4* %472, i32 0, i32 1
  %474 = load float, float* %473, align 4
  %475 = alloca %complex_4, align 8
  store %complex_4 %465, %complex_4* %475, align 4
  %476 = getelementptr %complex_4, %complex_4* %475, i32 0, i32 1
  %477 = load float, float* %476, align 4
  %478 = fcmp une float %468, %471
  %479 = fcmp une float %474, %477
  %480 = and i1 %478, %479
  br i1 %480, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %481 = getelementptr %array, %array* %b, i32 0, i32 2
  %482 = load %dimension_descriptor*, %dimension_descriptor** %481, align 8
  %483 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %482, i32 0
  %484 = getelementptr %dimension_descriptor, %dimension_descriptor* %483, i32 0, i32 1
  %485 = load i32, i32* %484, align 4
  %486 = sub i32 3, %485
  %487 = getelementptr %dimension_descriptor, %dimension_descriptor* %483, i32 0, i32 0
  %488 = load i32, i32* %487, align 4
  %489 = mul i32 %488, %486
  %490 = add i32 0, %489
  %491 = getelementptr %array, %array* %b, i32 0, i32 1
  %492 = load i32, i32* %491, align 4
  %493 = add i32 %490, %492
  %494 = getelementptr %array, %array* %b, i32 0, i32 0
  %495 = load %complex_4*, %complex_4** %494, align 8
  %496 = getelementptr inbounds %complex_4, %complex_4* %495, i32 %493
  %497 = load %complex_4, %complex_4* %496, align 4
  %498 = alloca %complex_4, align 8
  %499 = getelementptr %complex_4, %complex_4* %498, i32 0, i32 0
  %500 = getelementptr %complex_4, %complex_4* %498, i32 0, i32 1
  store float 3.000000e+00, float* %499, align 4
  store float 0.000000e+00, float* %500, align 4
  %501 = load %complex_4, %complex_4* %498, align 4
  %502 = alloca %complex_4, align 8
  store %complex_4 %497, %complex_4* %502, align 4
  %503 = getelementptr %complex_4, %complex_4* %502, i32 0, i32 0
  %504 = load float, float* %503, align 4
  %505 = alloca %complex_4, align 8
  store %complex_4 %501, %complex_4* %505, align 4
  %506 = getelementptr %complex_4, %complex_4* %505, i32 0, i32 0
  %507 = load float, float* %506, align 4
  %508 = alloca %complex_4, align 8
  store %complex_4 %497, %complex_4* %508, align 4
  %509 = getelementptr %complex_4, %complex_4* %508, i32 0, i32 1
  %510 = load float, float* %509, align 4
  %511 = alloca %complex_4, align 8
  store %complex_4 %501, %complex_4* %511, align 4
  %512 = getelementptr %complex_4, %complex_4* %511, i32 0, i32 1
  %513 = load float, float* %512, align 4
  %514 = fcmp une float %504, %507
  %515 = fcmp une float %510, %513
  %516 = and i1 %514, %515
  br i1 %516, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %517 = getelementptr %array, %array* %b, i32 0, i32 2
  %518 = load %dimension_descriptor*, %dimension_descriptor** %517, align 8
  %519 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %518, i32 0
  %520 = getelementptr %dimension_descriptor, %dimension_descriptor* %519, i32 0, i32 1
  %521 = load i32, i32* %520, align 4
  %522 = sub i32 4, %521
  %523 = getelementptr %dimension_descriptor, %dimension_descriptor* %519, i32 0, i32 0
  %524 = load i32, i32* %523, align 4
  %525 = mul i32 %524, %522
  %526 = add i32 0, %525
  %527 = getelementptr %array, %array* %b, i32 0, i32 1
  %528 = load i32, i32* %527, align 4
  %529 = add i32 %526, %528
  %530 = getelementptr %array, %array* %b, i32 0, i32 0
  %531 = load %complex_4*, %complex_4** %530, align 8
  %532 = getelementptr inbounds %complex_4, %complex_4* %531, i32 %529
  %533 = getelementptr %array, %array* %b, i32 0, i32 2
  %534 = load %dimension_descriptor*, %dimension_descriptor** %533, align 8
  %535 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %534, i32 0
  %536 = getelementptr %dimension_descriptor, %dimension_descriptor* %535, i32 0, i32 1
  %537 = load i32, i32* %536, align 4
  %538 = sub i32 1, %537
  %539 = getelementptr %dimension_descriptor, %dimension_descriptor* %535, i32 0, i32 0
  %540 = load i32, i32* %539, align 4
  %541 = mul i32 %540, %538
  %542 = add i32 0, %541
  %543 = getelementptr %array, %array* %b, i32 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = add i32 %542, %544
  %546 = getelementptr %array, %array* %b, i32 0, i32 0
  %547 = load %complex_4*, %complex_4** %546, align 8
  %548 = getelementptr inbounds %complex_4, %complex_4* %547, i32 %545
  %549 = load %complex_4, %complex_4* %548, align 4
  %550 = getelementptr %array, %array* %b, i32 0, i32 2
  %551 = load %dimension_descriptor*, %dimension_descriptor** %550, align 8
  %552 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %551, i32 0
  %553 = getelementptr %dimension_descriptor, %dimension_descriptor* %552, i32 0, i32 1
  %554 = load i32, i32* %553, align 4
  %555 = sub i32 2, %554
  %556 = getelementptr %dimension_descriptor, %dimension_descriptor* %552, i32 0, i32 0
  %557 = load i32, i32* %556, align 4
  %558 = mul i32 %557, %555
  %559 = add i32 0, %558
  %560 = getelementptr %array, %array* %b, i32 0, i32 1
  %561 = load i32, i32* %560, align 4
  %562 = add i32 %559, %561
  %563 = getelementptr %array, %array* %b, i32 0, i32 0
  %564 = load %complex_4*, %complex_4** %563, align 8
  %565 = getelementptr inbounds %complex_4, %complex_4* %564, i32 %562
  %566 = load %complex_4, %complex_4* %565, align 4
  %567 = alloca %complex_4, align 8
  store %complex_4 %549, %complex_4* %567, align 4
  %568 = alloca %complex_4, align 8
  store %complex_4 %566, %complex_4* %568, align 4
  %569 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %567, %complex_4* %568, %complex_4* %569)
  %570 = load %complex_4, %complex_4* %569, align 4
  %571 = getelementptr %array, %array* %b, i32 0, i32 2
  %572 = load %dimension_descriptor*, %dimension_descriptor** %571, align 8
  %573 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %572, i32 0
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = sub i32 3, %575
  %577 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 0
  %578 = load i32, i32* %577, align 4
  %579 = mul i32 %578, %576
  %580 = add i32 0, %579
  %581 = getelementptr %array, %array* %b, i32 0, i32 1
  %582 = load i32, i32* %581, align 4
  %583 = add i32 %580, %582
  %584 = getelementptr %array, %array* %b, i32 0, i32 0
  %585 = load %complex_4*, %complex_4** %584, align 8
  %586 = getelementptr inbounds %complex_4, %complex_4* %585, i32 %583
  %587 = load %complex_4, %complex_4* %586, align 4
  %588 = alloca %complex_4, align 8
  store %complex_4 %570, %complex_4* %588, align 4
  %589 = alloca %complex_4, align 8
  store %complex_4 %587, %complex_4* %589, align 4
  %590 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %588, %complex_4* %589, %complex_4* %590)
  %591 = load %complex_4, %complex_4* %590, align 4
  %592 = getelementptr %array, %array* %a, i32 0, i32 2
  %593 = load %dimension_descriptor*, %dimension_descriptor** %592, align 8
  %594 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %593, i32 0
  %595 = getelementptr %dimension_descriptor, %dimension_descriptor* %594, i32 0, i32 1
  %596 = load i32, i32* %595, align 4
  %597 = sub i32 1, %596
  %598 = getelementptr %dimension_descriptor, %dimension_descriptor* %594, i32 0, i32 0
  %599 = load i32, i32* %598, align 4
  %600 = mul i32 %599, %597
  %601 = add i32 0, %600
  %602 = getelementptr %array, %array* %a, i32 0, i32 1
  %603 = load i32, i32* %602, align 4
  %604 = add i32 %601, %603
  %605 = getelementptr %array, %array* %a, i32 0, i32 0
  %606 = load %complex_4*, %complex_4** %605, align 8
  %607 = getelementptr inbounds %complex_4, %complex_4* %606, i32 %604
  %608 = load %complex_4, %complex_4* %607, align 4
  %609 = alloca %complex_4, align 8
  store %complex_4 %591, %complex_4* %609, align 4
  %610 = alloca %complex_4, align 8
  store %complex_4 %608, %complex_4* %610, align 4
  %611 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %609, %complex_4* %610, %complex_4* %611)
  %612 = load %complex_4, %complex_4* %611, align 4
  store %complex_4 %612, %complex_4* %532, align 4
  %613 = getelementptr %array, %array* %b, i32 0, i32 2
  %614 = load %dimension_descriptor*, %dimension_descriptor** %613, align 8
  %615 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %614, i32 0
  %616 = getelementptr %dimension_descriptor, %dimension_descriptor* %615, i32 0, i32 1
  %617 = load i32, i32* %616, align 4
  %618 = sub i32 4, %617
  %619 = getelementptr %dimension_descriptor, %dimension_descriptor* %615, i32 0, i32 0
  %620 = load i32, i32* %619, align 4
  %621 = mul i32 %620, %618
  %622 = add i32 0, %621
  %623 = getelementptr %array, %array* %b, i32 0, i32 1
  %624 = load i32, i32* %623, align 4
  %625 = add i32 %622, %624
  %626 = getelementptr %array, %array* %b, i32 0, i32 0
  %627 = load %complex_4*, %complex_4** %626, align 8
  %628 = getelementptr inbounds %complex_4, %complex_4* %627, i32 %625
  %629 = load %complex_4, %complex_4* %628, align 4
  %630 = alloca %complex_4, align 8
  %631 = getelementptr %complex_4, %complex_4* %630, i32 0, i32 0
  %632 = getelementptr %complex_4, %complex_4* %630, i32 0, i32 1
  store float 1.700000e+01, float* %631, align 4
  store float 0.000000e+00, float* %632, align 4
  %633 = load %complex_4, %complex_4* %630, align 4
  %634 = alloca %complex_4, align 8
  store %complex_4 %629, %complex_4* %634, align 4
  %635 = getelementptr %complex_4, %complex_4* %634, i32 0, i32 0
  %636 = load float, float* %635, align 4
  %637 = alloca %complex_4, align 8
  store %complex_4 %633, %complex_4* %637, align 4
  %638 = getelementptr %complex_4, %complex_4* %637, i32 0, i32 0
  %639 = load float, float* %638, align 4
  %640 = alloca %complex_4, align 8
  store %complex_4 %629, %complex_4* %640, align 4
  %641 = getelementptr %complex_4, %complex_4* %640, i32 0, i32 1
  %642 = load float, float* %641, align 4
  %643 = alloca %complex_4, align 8
  store %complex_4 %633, %complex_4* %643, align 4
  %644 = getelementptr %complex_4, %complex_4* %643, i32 0, i32 1
  %645 = load float, float* %644, align 4
  %646 = fcmp une float %636, %639
  %647 = fcmp une float %642, %645
  %648 = and i1 %646, %647
  br i1 %648, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %649 = getelementptr %array, %array* %b, i32 0, i32 2
  %650 = load %dimension_descriptor*, %dimension_descriptor** %649, align 8
  %651 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %650, i32 0
  %652 = getelementptr %dimension_descriptor, %dimension_descriptor* %651, i32 0, i32 1
  %653 = load i32, i32* %652, align 4
  %654 = sub i32 4, %653
  %655 = getelementptr %dimension_descriptor, %dimension_descriptor* %651, i32 0, i32 0
  %656 = load i32, i32* %655, align 4
  %657 = mul i32 %656, %654
  %658 = add i32 0, %657
  %659 = getelementptr %array, %array* %b, i32 0, i32 1
  %660 = load i32, i32* %659, align 4
  %661 = add i32 %658, %660
  %662 = getelementptr %array, %array* %b, i32 0, i32 0
  %663 = load %complex_4*, %complex_4** %662, align 8
  %664 = getelementptr inbounds %complex_4, %complex_4* %663, i32 %661
  %665 = getelementptr %array, %array* %a, i32 0, i32 2
  %666 = load %dimension_descriptor*, %dimension_descriptor** %665, align 8
  %667 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %666, i32 0
  %668 = getelementptr %dimension_descriptor, %dimension_descriptor* %667, i32 0, i32 1
  %669 = load i32, i32* %668, align 4
  %670 = sub i32 1, %669
  %671 = getelementptr %dimension_descriptor, %dimension_descriptor* %667, i32 0, i32 0
  %672 = load i32, i32* %671, align 4
  %673 = mul i32 %672, %670
  %674 = add i32 0, %673
  %675 = getelementptr %array, %array* %a, i32 0, i32 1
  %676 = load i32, i32* %675, align 4
  %677 = add i32 %674, %676
  %678 = getelementptr %array, %array* %a, i32 0, i32 0
  %679 = load %complex_4*, %complex_4** %678, align 8
  %680 = getelementptr inbounds %complex_4, %complex_4* %679, i32 %677
  %681 = load %complex_4, %complex_4* %680, align 4
  store %complex_4 %681, %complex_4* %664, align 4
  %682 = getelementptr %array, %array* %b, i32 0, i32 2
  %683 = load %dimension_descriptor*, %dimension_descriptor** %682, align 8
  %684 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %683, i32 0
  %685 = getelementptr %dimension_descriptor, %dimension_descriptor* %684, i32 0, i32 1
  %686 = load i32, i32* %685, align 4
  %687 = sub i32 4, %686
  %688 = getelementptr %dimension_descriptor, %dimension_descriptor* %684, i32 0, i32 0
  %689 = load i32, i32* %688, align 4
  %690 = mul i32 %689, %687
  %691 = add i32 0, %690
  %692 = getelementptr %array, %array* %b, i32 0, i32 1
  %693 = load i32, i32* %692, align 4
  %694 = add i32 %691, %693
  %695 = getelementptr %array, %array* %b, i32 0, i32 0
  %696 = load %complex_4*, %complex_4** %695, align 8
  %697 = getelementptr inbounds %complex_4, %complex_4* %696, i32 %694
  %698 = load %complex_4, %complex_4* %697, align 4
  %699 = alloca %complex_4, align 8
  %700 = getelementptr %complex_4, %complex_4* %699, i32 0, i32 0
  %701 = getelementptr %complex_4, %complex_4* %699, i32 0, i32 1
  store float 1.100000e+01, float* %700, align 4
  store float 0.000000e+00, float* %701, align 4
  %702 = load %complex_4, %complex_4* %699, align 4
  %703 = alloca %complex_4, align 8
  store %complex_4 %698, %complex_4* %703, align 4
  %704 = getelementptr %complex_4, %complex_4* %703, i32 0, i32 0
  %705 = load float, float* %704, align 4
  %706 = alloca %complex_4, align 8
  store %complex_4 %702, %complex_4* %706, align 4
  %707 = getelementptr %complex_4, %complex_4* %706, i32 0, i32 0
  %708 = load float, float* %707, align 4
  %709 = alloca %complex_4, align 8
  store %complex_4 %698, %complex_4* %709, align 4
  %710 = getelementptr %complex_4, %complex_4* %709, i32 0, i32 1
  %711 = load float, float* %710, align 4
  %712 = alloca %complex_4, align 8
  store %complex_4 %702, %complex_4* %712, align 4
  %713 = getelementptr %complex_4, %complex_4* %712, i32 0, i32 1
  %714 = load float, float* %713, align 4
  %715 = fcmp une float %705, %708
  %716 = fcmp une float %711, %714
  %717 = and i1 %715, %716
  br i1 %717, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %718 = load i32, i32* %i, align 4
  %719 = add i32 %718, 1
  %720 = icmp sle i32 %719, 2
  br i1 %720, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %721 = load i32, i32* %i, align 4
  %722 = add i32 %721, 1
  store i32 %722, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %723 = load i32, i32* %j, align 4
  %724 = add i32 %723, 1
  %725 = icmp sle i32 %724, 2
  br i1 %725, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %726 = load i32, i32* %j, align 4
  %727 = add i32 %726, 1
  store i32 %727, i32* %j, align 4
  %728 = load i32, i32* %i, align 4
  %729 = load i32, i32* %j, align 4
  %730 = getelementptr %array, %array* %c, i32 0, i32 2
  %731 = load %dimension_descriptor*, %dimension_descriptor** %730, align 8
  %732 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %731, i32 0
  %733 = getelementptr %dimension_descriptor, %dimension_descriptor* %732, i32 0, i32 1
  %734 = load i32, i32* %733, align 4
  %735 = sub i32 %728, %734
  %736 = getelementptr %dimension_descriptor, %dimension_descriptor* %732, i32 0, i32 0
  %737 = load i32, i32* %736, align 4
  %738 = mul i32 %737, %735
  %739 = add i32 0, %738
  %740 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %731, i32 1
  %741 = getelementptr %dimension_descriptor, %dimension_descriptor* %740, i32 0, i32 1
  %742 = load i32, i32* %741, align 4
  %743 = sub i32 %729, %742
  %744 = getelementptr %dimension_descriptor, %dimension_descriptor* %740, i32 0, i32 0
  %745 = load i32, i32* %744, align 4
  %746 = mul i32 %745, %743
  %747 = add i32 %739, %746
  %748 = getelementptr %array, %array* %c, i32 0, i32 1
  %749 = load i32, i32* %748, align 4
  %750 = add i32 %747, %749
  %751 = getelementptr %array, %array* %c, i32 0, i32 0
  %752 = load %complex_4*, %complex_4** %751, align 8
  %753 = getelementptr inbounds %complex_4, %complex_4* %752, i32 %750
  %754 = load i32, i32* %i, align 4
  %755 = load i32, i32* %j, align 4
  %756 = add i32 %754, %755
  %757 = add i32 %756, 10
  %758 = sitofp i32 %757 to float
  %759 = alloca %complex_4, align 8
  %760 = getelementptr %complex_4, %complex_4* %759, i32 0, i32 0
  %761 = getelementptr %complex_4, %complex_4* %759, i32 0, i32 1
  store float %758, float* %760, align 4
  store float 0.000000e+00, float* %761, align 4
  %762 = load %complex_4, %complex_4* %759, align 4
  store %complex_4 %762, %complex_4* %753, align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %763 = getelementptr %array, %array* %c, i32 0, i32 2
  %764 = load %dimension_descriptor*, %dimension_descriptor** %763, align 8
  %765 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %764, i32 0
  %766 = getelementptr %dimension_descriptor, %dimension_descriptor* %765, i32 0, i32 1
  %767 = load i32, i32* %766, align 4
  %768 = sub i32 1, %767
  %769 = getelementptr %dimension_descriptor, %dimension_descriptor* %765, i32 0, i32 0
  %770 = load i32, i32* %769, align 4
  %771 = mul i32 %770, %768
  %772 = add i32 0, %771
  %773 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %764, i32 1
  %774 = getelementptr %dimension_descriptor, %dimension_descriptor* %773, i32 0, i32 1
  %775 = load i32, i32* %774, align 4
  %776 = sub i32 1, %775
  %777 = getelementptr %dimension_descriptor, %dimension_descriptor* %773, i32 0, i32 0
  %778 = load i32, i32* %777, align 4
  %779 = mul i32 %778, %776
  %780 = add i32 %772, %779
  %781 = getelementptr %array, %array* %c, i32 0, i32 1
  %782 = load i32, i32* %781, align 4
  %783 = add i32 %780, %782
  %784 = getelementptr %array, %array* %c, i32 0, i32 0
  %785 = load %complex_4*, %complex_4** %784, align 8
  %786 = getelementptr inbounds %complex_4, %complex_4* %785, i32 %783
  %787 = load %complex_4, %complex_4* %786, align 4
  %788 = alloca %complex_4, align 8
  %789 = getelementptr %complex_4, %complex_4* %788, i32 0, i32 0
  %790 = getelementptr %complex_4, %complex_4* %788, i32 0, i32 1
  store float 1.200000e+01, float* %789, align 4
  store float 0.000000e+00, float* %790, align 4
  %791 = load %complex_4, %complex_4* %788, align 4
  %792 = alloca %complex_4, align 8
  store %complex_4 %787, %complex_4* %792, align 4
  %793 = getelementptr %complex_4, %complex_4* %792, i32 0, i32 0
  %794 = load float, float* %793, align 4
  %795 = alloca %complex_4, align 8
  store %complex_4 %791, %complex_4* %795, align 4
  %796 = getelementptr %complex_4, %complex_4* %795, i32 0, i32 0
  %797 = load float, float* %796, align 4
  %798 = alloca %complex_4, align 8
  store %complex_4 %787, %complex_4* %798, align 4
  %799 = getelementptr %complex_4, %complex_4* %798, i32 0, i32 1
  %800 = load float, float* %799, align 4
  %801 = alloca %complex_4, align 8
  store %complex_4 %791, %complex_4* %801, align 4
  %802 = getelementptr %complex_4, %complex_4* %801, i32 0, i32 1
  %803 = load float, float* %802, align 4
  %804 = fcmp une float %794, %797
  %805 = fcmp une float %800, %803
  %806 = and i1 %804, %805
  br i1 %806, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %807 = getelementptr %array, %array* %c, i32 0, i32 2
  %808 = load %dimension_descriptor*, %dimension_descriptor** %807, align 8
  %809 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %808, i32 0
  %810 = getelementptr %dimension_descriptor, %dimension_descriptor* %809, i32 0, i32 1
  %811 = load i32, i32* %810, align 4
  %812 = sub i32 1, %811
  %813 = getelementptr %dimension_descriptor, %dimension_descriptor* %809, i32 0, i32 0
  %814 = load i32, i32* %813, align 4
  %815 = mul i32 %814, %812
  %816 = add i32 0, %815
  %817 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %808, i32 1
  %818 = getelementptr %dimension_descriptor, %dimension_descriptor* %817, i32 0, i32 1
  %819 = load i32, i32* %818, align 4
  %820 = sub i32 2, %819
  %821 = getelementptr %dimension_descriptor, %dimension_descriptor* %817, i32 0, i32 0
  %822 = load i32, i32* %821, align 4
  %823 = mul i32 %822, %820
  %824 = add i32 %816, %823
  %825 = getelementptr %array, %array* %c, i32 0, i32 1
  %826 = load i32, i32* %825, align 4
  %827 = add i32 %824, %826
  %828 = getelementptr %array, %array* %c, i32 0, i32 0
  %829 = load %complex_4*, %complex_4** %828, align 8
  %830 = getelementptr inbounds %complex_4, %complex_4* %829, i32 %827
  %831 = load %complex_4, %complex_4* %830, align 4
  %832 = alloca %complex_4, align 8
  %833 = getelementptr %complex_4, %complex_4* %832, i32 0, i32 0
  %834 = getelementptr %complex_4, %complex_4* %832, i32 0, i32 1
  store float 1.300000e+01, float* %833, align 4
  store float 0.000000e+00, float* %834, align 4
  %835 = load %complex_4, %complex_4* %832, align 4
  %836 = alloca %complex_4, align 8
  store %complex_4 %831, %complex_4* %836, align 4
  %837 = getelementptr %complex_4, %complex_4* %836, i32 0, i32 0
  %838 = load float, float* %837, align 4
  %839 = alloca %complex_4, align 8
  store %complex_4 %835, %complex_4* %839, align 4
  %840 = getelementptr %complex_4, %complex_4* %839, i32 0, i32 0
  %841 = load float, float* %840, align 4
  %842 = alloca %complex_4, align 8
  store %complex_4 %831, %complex_4* %842, align 4
  %843 = getelementptr %complex_4, %complex_4* %842, i32 0, i32 1
  %844 = load float, float* %843, align 4
  %845 = alloca %complex_4, align 8
  store %complex_4 %835, %complex_4* %845, align 4
  %846 = getelementptr %complex_4, %complex_4* %845, i32 0, i32 1
  %847 = load float, float* %846, align 4
  %848 = fcmp une float %838, %841
  %849 = fcmp une float %844, %847
  %850 = and i1 %848, %849
  br i1 %850, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %851 = getelementptr %array, %array* %c, i32 0, i32 2
  %852 = load %dimension_descriptor*, %dimension_descriptor** %851, align 8
  %853 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %852, i32 0
  %854 = getelementptr %dimension_descriptor, %dimension_descriptor* %853, i32 0, i32 1
  %855 = load i32, i32* %854, align 4
  %856 = sub i32 2, %855
  %857 = getelementptr %dimension_descriptor, %dimension_descriptor* %853, i32 0, i32 0
  %858 = load i32, i32* %857, align 4
  %859 = mul i32 %858, %856
  %860 = add i32 0, %859
  %861 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %852, i32 1
  %862 = getelementptr %dimension_descriptor, %dimension_descriptor* %861, i32 0, i32 1
  %863 = load i32, i32* %862, align 4
  %864 = sub i32 1, %863
  %865 = getelementptr %dimension_descriptor, %dimension_descriptor* %861, i32 0, i32 0
  %866 = load i32, i32* %865, align 4
  %867 = mul i32 %866, %864
  %868 = add i32 %860, %867
  %869 = getelementptr %array, %array* %c, i32 0, i32 1
  %870 = load i32, i32* %869, align 4
  %871 = add i32 %868, %870
  %872 = getelementptr %array, %array* %c, i32 0, i32 0
  %873 = load %complex_4*, %complex_4** %872, align 8
  %874 = getelementptr inbounds %complex_4, %complex_4* %873, i32 %871
  %875 = load %complex_4, %complex_4* %874, align 4
  %876 = alloca %complex_4, align 8
  %877 = getelementptr %complex_4, %complex_4* %876, i32 0, i32 0
  %878 = getelementptr %complex_4, %complex_4* %876, i32 0, i32 1
  store float 1.300000e+01, float* %877, align 4
  store float 0.000000e+00, float* %878, align 4
  %879 = load %complex_4, %complex_4* %876, align 4
  %880 = alloca %complex_4, align 8
  store %complex_4 %875, %complex_4* %880, align 4
  %881 = getelementptr %complex_4, %complex_4* %880, i32 0, i32 0
  %882 = load float, float* %881, align 4
  %883 = alloca %complex_4, align 8
  store %complex_4 %879, %complex_4* %883, align 4
  %884 = getelementptr %complex_4, %complex_4* %883, i32 0, i32 0
  %885 = load float, float* %884, align 4
  %886 = alloca %complex_4, align 8
  store %complex_4 %875, %complex_4* %886, align 4
  %887 = getelementptr %complex_4, %complex_4* %886, i32 0, i32 1
  %888 = load float, float* %887, align 4
  %889 = alloca %complex_4, align 8
  store %complex_4 %879, %complex_4* %889, align 4
  %890 = getelementptr %complex_4, %complex_4* %889, i32 0, i32 1
  %891 = load float, float* %890, align 4
  %892 = fcmp une float %882, %885
  %893 = fcmp une float %888, %891
  %894 = and i1 %892, %893
  br i1 %894, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %895 = getelementptr %array, %array* %c, i32 0, i32 2
  %896 = load %dimension_descriptor*, %dimension_descriptor** %895, align 8
  %897 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %896, i32 0
  %898 = getelementptr %dimension_descriptor, %dimension_descriptor* %897, i32 0, i32 1
  %899 = load i32, i32* %898, align 4
  %900 = sub i32 2, %899
  %901 = getelementptr %dimension_descriptor, %dimension_descriptor* %897, i32 0, i32 0
  %902 = load i32, i32* %901, align 4
  %903 = mul i32 %902, %900
  %904 = add i32 0, %903
  %905 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %896, i32 1
  %906 = getelementptr %dimension_descriptor, %dimension_descriptor* %905, i32 0, i32 1
  %907 = load i32, i32* %906, align 4
  %908 = sub i32 2, %907
  %909 = getelementptr %dimension_descriptor, %dimension_descriptor* %905, i32 0, i32 0
  %910 = load i32, i32* %909, align 4
  %911 = mul i32 %910, %908
  %912 = add i32 %904, %911
  %913 = getelementptr %array, %array* %c, i32 0, i32 1
  %914 = load i32, i32* %913, align 4
  %915 = add i32 %912, %914
  %916 = getelementptr %array, %array* %c, i32 0, i32 0
  %917 = load %complex_4*, %complex_4** %916, align 8
  %918 = getelementptr inbounds %complex_4, %complex_4* %917, i32 %915
  %919 = load %complex_4, %complex_4* %918, align 4
  %920 = alloca %complex_4, align 8
  %921 = getelementptr %complex_4, %complex_4* %920, i32 0, i32 0
  %922 = getelementptr %complex_4, %complex_4* %920, i32 0, i32 1
  store float 1.400000e+01, float* %921, align 4
  store float 0.000000e+00, float* %922, align 4
  %923 = load %complex_4, %complex_4* %920, align 4
  %924 = alloca %complex_4, align 8
  store %complex_4 %919, %complex_4* %924, align 4
  %925 = getelementptr %complex_4, %complex_4* %924, i32 0, i32 0
  %926 = load float, float* %925, align 4
  %927 = alloca %complex_4, align 8
  store %complex_4 %923, %complex_4* %927, align 4
  %928 = getelementptr %complex_4, %complex_4* %927, i32 0, i32 0
  %929 = load float, float* %928, align 4
  %930 = alloca %complex_4, align 8
  store %complex_4 %919, %complex_4* %930, align 4
  %931 = getelementptr %complex_4, %complex_4* %930, i32 0, i32 1
  %932 = load float, float* %931, align 4
  %933 = alloca %complex_4, align 8
  store %complex_4 %923, %complex_4* %933, align 4
  %934 = getelementptr %complex_4, %complex_4* %933, i32 0, i32 1
  %935 = load float, float* %934, align 4
  %936 = fcmp une float %926, %929
  %937 = fcmp une float %932, %935
  %938 = and i1 %936, %937
  br i1 %938, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)
