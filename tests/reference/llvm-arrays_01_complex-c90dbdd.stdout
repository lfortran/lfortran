; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%complex_4 = type { float, float }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array, %array* %a, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 3, i32* %12, align 4
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = getelementptr %array, %array* %a, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = alloca %complex_4, i32 %15, align 8
  store %complex_4* %16, %complex_4** %14, align 8
  %b = alloca %array, align 8
  %17 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr %array, %array* %b, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  %22 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 1, i32* %22, align 4
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %23 = load %dimension_descriptor*, %dimension_descriptor** %18, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 4, i32* %27, align 4
  %28 = alloca i32, align 4
  store i32 4, i32* %28, align 4
  %29 = getelementptr %array, %array* %b, i32 0, i32 0
  %30 = load i32, i32* %28, align 4
  %31 = alloca %complex_4, i32 %30, align 8
  store %complex_4* %31, %complex_4** %29, align 8
  %c = alloca %array, align 8
  %32 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %32, align 4
  %33 = getelementptr %array, %array* %c, i32 0, i32 2
  %34 = alloca i32, align 4
  store i32 2, i32* %34, align 4
  %35 = load i32, i32* %34, align 4
  %36 = alloca %dimension_descriptor, i32 %35, align 8
  %37 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 2, i32* %37, align 4
  store %dimension_descriptor* %36, %dimension_descriptor** %33, align 8
  %38 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  store i32 1, i32* %40, align 4
  store i32 1, i32* %41, align 4
  store i32 2, i32* %42, align 4
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %38, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  store i32 1, i32* %44, align 4
  store i32 1, i32* %45, align 4
  store i32 2, i32* %46, align 4
  %47 = alloca i32, align 4
  store i32 4, i32* %47, align 4
  %48 = getelementptr %array, %array* %c, i32 0, i32 0
  %49 = load i32, i32* %47, align 4
  %50 = alloca %complex_4, i32 %49, align 8
  store %complex_4* %50, %complex_4** %48, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %51 = load i32, i32* %i, align 4
  %52 = add i32 %51, 1
  %53 = icmp sle i32 %52, 3
  br i1 %53, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %i, align 4
  %56 = load i32, i32* %i, align 4
  %57 = getelementptr %array, %array* %a, i32 0, i32 2
  %58 = load %dimension_descriptor*, %dimension_descriptor** %57, align 8
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %58, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sub i32 %56, %61
  %63 = mul i32 1, %62
  %64 = add i32 0, %63
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 1, %66
  %68 = getelementptr %array, %array* %a, i32 0, i32 0
  %69 = load %complex_4*, %complex_4** %68, align 8
  %70 = getelementptr inbounds %complex_4, %complex_4* %69, i32 %64
  %71 = load i32, i32* %i, align 4
  %72 = add i32 %71, 10
  %73 = sitofp i32 %72 to float
  %74 = alloca %complex_4, align 8
  %75 = getelementptr %complex_4, %complex_4* %74, i32 0, i32 0
  %76 = getelementptr %complex_4, %complex_4* %74, i32 0, i32 1
  store float %73, float* %75, align 4
  store float 0.000000e+00, float* %76, align 4
  %77 = load %complex_4, %complex_4* %74, align 4
  store %complex_4 %77, %complex_4* %70, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %78 = getelementptr %array, %array* %a, i32 0, i32 2
  %79 = load %dimension_descriptor*, %dimension_descriptor** %78, align 8
  %80 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %79, i32 0
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 1, %82
  %84 = mul i32 1, %83
  %85 = add i32 0, %84
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = mul i32 1, %87
  %89 = getelementptr %array, %array* %a, i32 0, i32 0
  %90 = load %complex_4*, %complex_4** %89, align 8
  %91 = getelementptr inbounds %complex_4, %complex_4* %90, i32 %85
  %92 = load %complex_4, %complex_4* %91, align 4
  %93 = alloca %complex_4, align 8
  %94 = getelementptr %complex_4, %complex_4* %93, i32 0, i32 0
  %95 = getelementptr %complex_4, %complex_4* %93, i32 0, i32 1
  store float 1.100000e+01, float* %94, align 4
  store float 0.000000e+00, float* %95, align 4
  %96 = load %complex_4, %complex_4* %93, align 4
  %97 = alloca %complex_4, align 8
  store %complex_4 %92, %complex_4* %97, align 4
  %98 = getelementptr %complex_4, %complex_4* %97, i32 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %100, align 4
  %101 = getelementptr %complex_4, %complex_4* %100, i32 0, i32 0
  %102 = load float, float* %101, align 4
  %103 = alloca %complex_4, align 8
  store %complex_4 %92, %complex_4* %103, align 4
  %104 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 1
  %105 = load float, float* %104, align 4
  %106 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %106, align 4
  %107 = getelementptr %complex_4, %complex_4* %106, i32 0, i32 1
  %108 = load float, float* %107, align 4
  %109 = fcmp une float %99, %102
  %110 = fcmp une float %105, %108
  %111 = and i1 %109, %110
  br i1 %111, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %112 = getelementptr %array, %array* %a, i32 0, i32 2
  %113 = load %dimension_descriptor*, %dimension_descriptor** %112, align 8
  %114 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = sub i32 2, %116
  %118 = mul i32 1, %117
  %119 = add i32 0, %118
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = mul i32 1, %121
  %123 = getelementptr %array, %array* %a, i32 0, i32 0
  %124 = load %complex_4*, %complex_4** %123, align 8
  %125 = getelementptr inbounds %complex_4, %complex_4* %124, i32 %119
  %126 = load %complex_4, %complex_4* %125, align 4
  %127 = alloca %complex_4, align 8
  %128 = getelementptr %complex_4, %complex_4* %127, i32 0, i32 0
  %129 = getelementptr %complex_4, %complex_4* %127, i32 0, i32 1
  store float 1.200000e+01, float* %128, align 4
  store float 0.000000e+00, float* %129, align 4
  %130 = load %complex_4, %complex_4* %127, align 4
  %131 = alloca %complex_4, align 8
  store %complex_4 %126, %complex_4* %131, align 4
  %132 = getelementptr %complex_4, %complex_4* %131, i32 0, i32 0
  %133 = load float, float* %132, align 4
  %134 = alloca %complex_4, align 8
  store %complex_4 %130, %complex_4* %134, align 4
  %135 = getelementptr %complex_4, %complex_4* %134, i32 0, i32 0
  %136 = load float, float* %135, align 4
  %137 = alloca %complex_4, align 8
  store %complex_4 %126, %complex_4* %137, align 4
  %138 = getelementptr %complex_4, %complex_4* %137, i32 0, i32 1
  %139 = load float, float* %138, align 4
  %140 = alloca %complex_4, align 8
  store %complex_4 %130, %complex_4* %140, align 4
  %141 = getelementptr %complex_4, %complex_4* %140, i32 0, i32 1
  %142 = load float, float* %141, align 4
  %143 = fcmp une float %133, %136
  %144 = fcmp une float %139, %142
  %145 = and i1 %143, %144
  br i1 %145, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %146 = getelementptr %array, %array* %a, i32 0, i32 2
  %147 = load %dimension_descriptor*, %dimension_descriptor** %146, align 8
  %148 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %147, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub i32 3, %150
  %152 = mul i32 1, %151
  %153 = add i32 0, %152
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = mul i32 1, %155
  %157 = getelementptr %array, %array* %a, i32 0, i32 0
  %158 = load %complex_4*, %complex_4** %157, align 8
  %159 = getelementptr inbounds %complex_4, %complex_4* %158, i32 %153
  %160 = load %complex_4, %complex_4* %159, align 4
  %161 = alloca %complex_4, align 8
  %162 = getelementptr %complex_4, %complex_4* %161, i32 0, i32 0
  %163 = getelementptr %complex_4, %complex_4* %161, i32 0, i32 1
  store float 1.300000e+01, float* %162, align 4
  store float 0.000000e+00, float* %163, align 4
  %164 = load %complex_4, %complex_4* %161, align 4
  %165 = alloca %complex_4, align 8
  store %complex_4 %160, %complex_4* %165, align 4
  %166 = getelementptr %complex_4, %complex_4* %165, i32 0, i32 0
  %167 = load float, float* %166, align 4
  %168 = alloca %complex_4, align 8
  store %complex_4 %164, %complex_4* %168, align 4
  %169 = getelementptr %complex_4, %complex_4* %168, i32 0, i32 0
  %170 = load float, float* %169, align 4
  %171 = alloca %complex_4, align 8
  store %complex_4 %160, %complex_4* %171, align 4
  %172 = getelementptr %complex_4, %complex_4* %171, i32 0, i32 1
  %173 = load float, float* %172, align 4
  %174 = alloca %complex_4, align 8
  store %complex_4 %164, %complex_4* %174, align 4
  %175 = getelementptr %complex_4, %complex_4* %174, i32 0, i32 1
  %176 = load float, float* %175, align 4
  %177 = fcmp une float %167, %170
  %178 = fcmp une float %173, %176
  %179 = and i1 %177, %178
  br i1 %179, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %180 = load i32, i32* %i, align 4
  %181 = add i32 %180, 1
  %182 = icmp sle i32 %181, 14
  br i1 %182, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %183 = load i32, i32* %i, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %i, align 4
  %185 = load i32, i32* %i, align 4
  %186 = sub i32 %185, 10
  %187 = getelementptr %array, %array* %b, i32 0, i32 2
  %188 = load %dimension_descriptor*, %dimension_descriptor** %187, align 8
  %189 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %188, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 %186, %191
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = mul i32 1, %196
  %198 = getelementptr %array, %array* %b, i32 0, i32 0
  %199 = load %complex_4*, %complex_4** %198, align 8
  %200 = getelementptr inbounds %complex_4, %complex_4* %199, i32 %194
  %201 = load i32, i32* %i, align 4
  %202 = sitofp i32 %201 to float
  %203 = alloca %complex_4, align 8
  %204 = getelementptr %complex_4, %complex_4* %203, i32 0, i32 0
  %205 = getelementptr %complex_4, %complex_4* %203, i32 0, i32 1
  store float %202, float* %204, align 4
  store float 0.000000e+00, float* %205, align 4
  %206 = load %complex_4, %complex_4* %203, align 4
  store %complex_4 %206, %complex_4* %200, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %207 = getelementptr %array, %array* %b, i32 0, i32 2
  %208 = load %dimension_descriptor*, %dimension_descriptor** %207, align 8
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %208, i32 0
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 1, %211
  %213 = mul i32 1, %212
  %214 = add i32 0, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 1, %216
  %218 = getelementptr %array, %array* %b, i32 0, i32 0
  %219 = load %complex_4*, %complex_4** %218, align 8
  %220 = getelementptr inbounds %complex_4, %complex_4* %219, i32 %214
  %221 = load %complex_4, %complex_4* %220, align 4
  %222 = alloca %complex_4, align 8
  %223 = getelementptr %complex_4, %complex_4* %222, i32 0, i32 0
  %224 = getelementptr %complex_4, %complex_4* %222, i32 0, i32 1
  store float 1.100000e+01, float* %223, align 4
  store float 0.000000e+00, float* %224, align 4
  %225 = load %complex_4, %complex_4* %222, align 4
  %226 = alloca %complex_4, align 8
  store %complex_4 %221, %complex_4* %226, align 4
  %227 = getelementptr %complex_4, %complex_4* %226, i32 0, i32 0
  %228 = load float, float* %227, align 4
  %229 = alloca %complex_4, align 8
  store %complex_4 %225, %complex_4* %229, align 4
  %230 = getelementptr %complex_4, %complex_4* %229, i32 0, i32 0
  %231 = load float, float* %230, align 4
  %232 = alloca %complex_4, align 8
  store %complex_4 %221, %complex_4* %232, align 4
  %233 = getelementptr %complex_4, %complex_4* %232, i32 0, i32 1
  %234 = load float, float* %233, align 4
  %235 = alloca %complex_4, align 8
  store %complex_4 %225, %complex_4* %235, align 4
  %236 = getelementptr %complex_4, %complex_4* %235, i32 0, i32 1
  %237 = load float, float* %236, align 4
  %238 = fcmp une float %228, %231
  %239 = fcmp une float %234, %237
  %240 = and i1 %238, %239
  br i1 %240, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %241 = getelementptr %array, %array* %b, i32 0, i32 2
  %242 = load %dimension_descriptor*, %dimension_descriptor** %241, align 8
  %243 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %242, i32 0
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = sub i32 2, %245
  %247 = mul i32 1, %246
  %248 = add i32 0, %247
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = mul i32 1, %250
  %252 = getelementptr %array, %array* %b, i32 0, i32 0
  %253 = load %complex_4*, %complex_4** %252, align 8
  %254 = getelementptr inbounds %complex_4, %complex_4* %253, i32 %248
  %255 = load %complex_4, %complex_4* %254, align 4
  %256 = alloca %complex_4, align 8
  %257 = getelementptr %complex_4, %complex_4* %256, i32 0, i32 0
  %258 = getelementptr %complex_4, %complex_4* %256, i32 0, i32 1
  store float 1.200000e+01, float* %257, align 4
  store float 0.000000e+00, float* %258, align 4
  %259 = load %complex_4, %complex_4* %256, align 4
  %260 = alloca %complex_4, align 8
  store %complex_4 %255, %complex_4* %260, align 4
  %261 = getelementptr %complex_4, %complex_4* %260, i32 0, i32 0
  %262 = load float, float* %261, align 4
  %263 = alloca %complex_4, align 8
  store %complex_4 %259, %complex_4* %263, align 4
  %264 = getelementptr %complex_4, %complex_4* %263, i32 0, i32 0
  %265 = load float, float* %264, align 4
  %266 = alloca %complex_4, align 8
  store %complex_4 %255, %complex_4* %266, align 4
  %267 = getelementptr %complex_4, %complex_4* %266, i32 0, i32 1
  %268 = load float, float* %267, align 4
  %269 = alloca %complex_4, align 8
  store %complex_4 %259, %complex_4* %269, align 4
  %270 = getelementptr %complex_4, %complex_4* %269, i32 0, i32 1
  %271 = load float, float* %270, align 4
  %272 = fcmp une float %262, %265
  %273 = fcmp une float %268, %271
  %274 = and i1 %272, %273
  br i1 %274, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %275 = getelementptr %array, %array* %b, i32 0, i32 2
  %276 = load %dimension_descriptor*, %dimension_descriptor** %275, align 8
  %277 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %276, i32 0
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 3, %279
  %281 = mul i32 1, %280
  %282 = add i32 0, %281
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 2
  %284 = load i32, i32* %283, align 4
  %285 = mul i32 1, %284
  %286 = getelementptr %array, %array* %b, i32 0, i32 0
  %287 = load %complex_4*, %complex_4** %286, align 8
  %288 = getelementptr inbounds %complex_4, %complex_4* %287, i32 %282
  %289 = load %complex_4, %complex_4* %288, align 4
  %290 = alloca %complex_4, align 8
  %291 = getelementptr %complex_4, %complex_4* %290, i32 0, i32 0
  %292 = getelementptr %complex_4, %complex_4* %290, i32 0, i32 1
  store float 1.300000e+01, float* %291, align 4
  store float 0.000000e+00, float* %292, align 4
  %293 = load %complex_4, %complex_4* %290, align 4
  %294 = alloca %complex_4, align 8
  store %complex_4 %289, %complex_4* %294, align 4
  %295 = getelementptr %complex_4, %complex_4* %294, i32 0, i32 0
  %296 = load float, float* %295, align 4
  %297 = alloca %complex_4, align 8
  store %complex_4 %293, %complex_4* %297, align 4
  %298 = getelementptr %complex_4, %complex_4* %297, i32 0, i32 0
  %299 = load float, float* %298, align 4
  %300 = alloca %complex_4, align 8
  store %complex_4 %289, %complex_4* %300, align 4
  %301 = getelementptr %complex_4, %complex_4* %300, i32 0, i32 1
  %302 = load float, float* %301, align 4
  %303 = alloca %complex_4, align 8
  store %complex_4 %293, %complex_4* %303, align 4
  %304 = getelementptr %complex_4, %complex_4* %303, i32 0, i32 1
  %305 = load float, float* %304, align 4
  %306 = fcmp une float %296, %299
  %307 = fcmp une float %302, %305
  %308 = and i1 %306, %307
  br i1 %308, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %309 = getelementptr %array, %array* %b, i32 0, i32 2
  %310 = load %dimension_descriptor*, %dimension_descriptor** %309, align 8
  %311 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %310, i32 0
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = sub i32 4, %313
  %315 = mul i32 1, %314
  %316 = add i32 0, %315
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 2
  %318 = load i32, i32* %317, align 4
  %319 = mul i32 1, %318
  %320 = getelementptr %array, %array* %b, i32 0, i32 0
  %321 = load %complex_4*, %complex_4** %320, align 8
  %322 = getelementptr inbounds %complex_4, %complex_4* %321, i32 %316
  %323 = load %complex_4, %complex_4* %322, align 4
  %324 = alloca %complex_4, align 8
  %325 = getelementptr %complex_4, %complex_4* %324, i32 0, i32 0
  %326 = getelementptr %complex_4, %complex_4* %324, i32 0, i32 1
  store float 1.400000e+01, float* %325, align 4
  store float 0.000000e+00, float* %326, align 4
  %327 = load %complex_4, %complex_4* %324, align 4
  %328 = alloca %complex_4, align 8
  store %complex_4 %323, %complex_4* %328, align 4
  %329 = getelementptr %complex_4, %complex_4* %328, i32 0, i32 0
  %330 = load float, float* %329, align 4
  %331 = alloca %complex_4, align 8
  store %complex_4 %327, %complex_4* %331, align 4
  %332 = getelementptr %complex_4, %complex_4* %331, i32 0, i32 0
  %333 = load float, float* %332, align 4
  %334 = alloca %complex_4, align 8
  store %complex_4 %323, %complex_4* %334, align 4
  %335 = getelementptr %complex_4, %complex_4* %334, i32 0, i32 1
  %336 = load float, float* %335, align 4
  %337 = alloca %complex_4, align 8
  store %complex_4 %327, %complex_4* %337, align 4
  %338 = getelementptr %complex_4, %complex_4* %337, i32 0, i32 1
  %339 = load float, float* %338, align 4
  %340 = fcmp une float %330, %333
  %341 = fcmp une float %336, %339
  %342 = and i1 %340, %341
  br i1 %342, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %343 = load i32, i32* %i, align 4
  %344 = add i32 %343, 1
  %345 = icmp sle i32 %344, 3
  br i1 %345, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %346 = load i32, i32* %i, align 4
  %347 = add i32 %346, 1
  store i32 %347, i32* %i, align 4
  %348 = load i32, i32* %i, align 4
  %349 = getelementptr %array, %array* %b, i32 0, i32 2
  %350 = load %dimension_descriptor*, %dimension_descriptor** %349, align 8
  %351 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %350, i32 0
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = sub i32 %348, %353
  %355 = mul i32 1, %354
  %356 = add i32 0, %355
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %351, i32 0, i32 2
  %358 = load i32, i32* %357, align 4
  %359 = mul i32 1, %358
  %360 = getelementptr %array, %array* %b, i32 0, i32 0
  %361 = load %complex_4*, %complex_4** %360, align 8
  %362 = getelementptr inbounds %complex_4, %complex_4* %361, i32 %356
  %363 = load i32, i32* %i, align 4
  %364 = getelementptr %array, %array* %a, i32 0, i32 2
  %365 = load %dimension_descriptor*, %dimension_descriptor** %364, align 8
  %366 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %365, i32 0
  %367 = getelementptr %dimension_descriptor, %dimension_descriptor* %366, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = sub i32 %363, %368
  %370 = mul i32 1, %369
  %371 = add i32 0, %370
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %366, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = mul i32 1, %373
  %375 = getelementptr %array, %array* %a, i32 0, i32 0
  %376 = load %complex_4*, %complex_4** %375, align 8
  %377 = getelementptr inbounds %complex_4, %complex_4* %376, i32 %371
  %378 = load %complex_4, %complex_4* %377, align 4
  %379 = alloca %complex_4, align 8
  %380 = getelementptr %complex_4, %complex_4* %379, i32 0, i32 0
  %381 = getelementptr %complex_4, %complex_4* %379, i32 0, i32 1
  store float 1.000000e+01, float* %380, align 4
  store float 0.000000e+00, float* %381, align 4
  %382 = load %complex_4, %complex_4* %379, align 4
  %383 = alloca %complex_4, align 8
  store %complex_4 %378, %complex_4* %383, align 4
  %384 = alloca %complex_4, align 8
  store %complex_4 %382, %complex_4* %384, align 4
  %385 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub_32(%complex_4* %383, %complex_4* %384, %complex_4* %385)
  %386 = load %complex_4, %complex_4* %385, align 4
  store %complex_4 %386, %complex_4* %362, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %387 = getelementptr %array, %array* %b, i32 0, i32 2
  %388 = load %dimension_descriptor*, %dimension_descriptor** %387, align 8
  %389 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %388, i32 0
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = sub i32 1, %391
  %393 = mul i32 1, %392
  %394 = add i32 0, %393
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %389, i32 0, i32 2
  %396 = load i32, i32* %395, align 4
  %397 = mul i32 1, %396
  %398 = getelementptr %array, %array* %b, i32 0, i32 0
  %399 = load %complex_4*, %complex_4** %398, align 8
  %400 = getelementptr inbounds %complex_4, %complex_4* %399, i32 %394
  %401 = load %complex_4, %complex_4* %400, align 4
  %402 = alloca %complex_4, align 8
  %403 = getelementptr %complex_4, %complex_4* %402, i32 0, i32 0
  %404 = getelementptr %complex_4, %complex_4* %402, i32 0, i32 1
  store float 1.000000e+00, float* %403, align 4
  store float 0.000000e+00, float* %404, align 4
  %405 = load %complex_4, %complex_4* %402, align 4
  %406 = alloca %complex_4, align 8
  store %complex_4 %401, %complex_4* %406, align 4
  %407 = getelementptr %complex_4, %complex_4* %406, i32 0, i32 0
  %408 = load float, float* %407, align 4
  %409 = alloca %complex_4, align 8
  store %complex_4 %405, %complex_4* %409, align 4
  %410 = getelementptr %complex_4, %complex_4* %409, i32 0, i32 0
  %411 = load float, float* %410, align 4
  %412 = alloca %complex_4, align 8
  store %complex_4 %401, %complex_4* %412, align 4
  %413 = getelementptr %complex_4, %complex_4* %412, i32 0, i32 1
  %414 = load float, float* %413, align 4
  %415 = alloca %complex_4, align 8
  store %complex_4 %405, %complex_4* %415, align 4
  %416 = getelementptr %complex_4, %complex_4* %415, i32 0, i32 1
  %417 = load float, float* %416, align 4
  %418 = fcmp une float %408, %411
  %419 = fcmp une float %414, %417
  %420 = and i1 %418, %419
  br i1 %420, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %421 = getelementptr %array, %array* %b, i32 0, i32 2
  %422 = load %dimension_descriptor*, %dimension_descriptor** %421, align 8
  %423 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %422, i32 0
  %424 = getelementptr %dimension_descriptor, %dimension_descriptor* %423, i32 0, i32 1
  %425 = load i32, i32* %424, align 4
  %426 = sub i32 2, %425
  %427 = mul i32 1, %426
  %428 = add i32 0, %427
  %429 = getelementptr %dimension_descriptor, %dimension_descriptor* %423, i32 0, i32 2
  %430 = load i32, i32* %429, align 4
  %431 = mul i32 1, %430
  %432 = getelementptr %array, %array* %b, i32 0, i32 0
  %433 = load %complex_4*, %complex_4** %432, align 8
  %434 = getelementptr inbounds %complex_4, %complex_4* %433, i32 %428
  %435 = load %complex_4, %complex_4* %434, align 4
  %436 = alloca %complex_4, align 8
  %437 = getelementptr %complex_4, %complex_4* %436, i32 0, i32 0
  %438 = getelementptr %complex_4, %complex_4* %436, i32 0, i32 1
  store float 2.000000e+00, float* %437, align 4
  store float 0.000000e+00, float* %438, align 4
  %439 = load %complex_4, %complex_4* %436, align 4
  %440 = alloca %complex_4, align 8
  store %complex_4 %435, %complex_4* %440, align 4
  %441 = getelementptr %complex_4, %complex_4* %440, i32 0, i32 0
  %442 = load float, float* %441, align 4
  %443 = alloca %complex_4, align 8
  store %complex_4 %439, %complex_4* %443, align 4
  %444 = getelementptr %complex_4, %complex_4* %443, i32 0, i32 0
  %445 = load float, float* %444, align 4
  %446 = alloca %complex_4, align 8
  store %complex_4 %435, %complex_4* %446, align 4
  %447 = getelementptr %complex_4, %complex_4* %446, i32 0, i32 1
  %448 = load float, float* %447, align 4
  %449 = alloca %complex_4, align 8
  store %complex_4 %439, %complex_4* %449, align 4
  %450 = getelementptr %complex_4, %complex_4* %449, i32 0, i32 1
  %451 = load float, float* %450, align 4
  %452 = fcmp une float %442, %445
  %453 = fcmp une float %448, %451
  %454 = and i1 %452, %453
  br i1 %454, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %455 = getelementptr %array, %array* %b, i32 0, i32 2
  %456 = load %dimension_descriptor*, %dimension_descriptor** %455, align 8
  %457 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %456, i32 0
  %458 = getelementptr %dimension_descriptor, %dimension_descriptor* %457, i32 0, i32 1
  %459 = load i32, i32* %458, align 4
  %460 = sub i32 3, %459
  %461 = mul i32 1, %460
  %462 = add i32 0, %461
  %463 = getelementptr %dimension_descriptor, %dimension_descriptor* %457, i32 0, i32 2
  %464 = load i32, i32* %463, align 4
  %465 = mul i32 1, %464
  %466 = getelementptr %array, %array* %b, i32 0, i32 0
  %467 = load %complex_4*, %complex_4** %466, align 8
  %468 = getelementptr inbounds %complex_4, %complex_4* %467, i32 %462
  %469 = load %complex_4, %complex_4* %468, align 4
  %470 = alloca %complex_4, align 8
  %471 = getelementptr %complex_4, %complex_4* %470, i32 0, i32 0
  %472 = getelementptr %complex_4, %complex_4* %470, i32 0, i32 1
  store float 3.000000e+00, float* %471, align 4
  store float 0.000000e+00, float* %472, align 4
  %473 = load %complex_4, %complex_4* %470, align 4
  %474 = alloca %complex_4, align 8
  store %complex_4 %469, %complex_4* %474, align 4
  %475 = getelementptr %complex_4, %complex_4* %474, i32 0, i32 0
  %476 = load float, float* %475, align 4
  %477 = alloca %complex_4, align 8
  store %complex_4 %473, %complex_4* %477, align 4
  %478 = getelementptr %complex_4, %complex_4* %477, i32 0, i32 0
  %479 = load float, float* %478, align 4
  %480 = alloca %complex_4, align 8
  store %complex_4 %469, %complex_4* %480, align 4
  %481 = getelementptr %complex_4, %complex_4* %480, i32 0, i32 1
  %482 = load float, float* %481, align 4
  %483 = alloca %complex_4, align 8
  store %complex_4 %473, %complex_4* %483, align 4
  %484 = getelementptr %complex_4, %complex_4* %483, i32 0, i32 1
  %485 = load float, float* %484, align 4
  %486 = fcmp une float %476, %479
  %487 = fcmp une float %482, %485
  %488 = and i1 %486, %487
  br i1 %488, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %489 = getelementptr %array, %array* %b, i32 0, i32 2
  %490 = load %dimension_descriptor*, %dimension_descriptor** %489, align 8
  %491 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %490, i32 0
  %492 = getelementptr %dimension_descriptor, %dimension_descriptor* %491, i32 0, i32 1
  %493 = load i32, i32* %492, align 4
  %494 = sub i32 4, %493
  %495 = mul i32 1, %494
  %496 = add i32 0, %495
  %497 = getelementptr %dimension_descriptor, %dimension_descriptor* %491, i32 0, i32 2
  %498 = load i32, i32* %497, align 4
  %499 = mul i32 1, %498
  %500 = getelementptr %array, %array* %b, i32 0, i32 0
  %501 = load %complex_4*, %complex_4** %500, align 8
  %502 = getelementptr inbounds %complex_4, %complex_4* %501, i32 %496
  %503 = getelementptr %array, %array* %b, i32 0, i32 2
  %504 = load %dimension_descriptor*, %dimension_descriptor** %503, align 8
  %505 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %504, i32 0
  %506 = getelementptr %dimension_descriptor, %dimension_descriptor* %505, i32 0, i32 1
  %507 = load i32, i32* %506, align 4
  %508 = sub i32 1, %507
  %509 = mul i32 1, %508
  %510 = add i32 0, %509
  %511 = getelementptr %dimension_descriptor, %dimension_descriptor* %505, i32 0, i32 2
  %512 = load i32, i32* %511, align 4
  %513 = mul i32 1, %512
  %514 = getelementptr %array, %array* %b, i32 0, i32 0
  %515 = load %complex_4*, %complex_4** %514, align 8
  %516 = getelementptr inbounds %complex_4, %complex_4* %515, i32 %510
  %517 = load %complex_4, %complex_4* %516, align 4
  %518 = getelementptr %array, %array* %b, i32 0, i32 2
  %519 = load %dimension_descriptor*, %dimension_descriptor** %518, align 8
  %520 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %519, i32 0
  %521 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 1
  %522 = load i32, i32* %521, align 4
  %523 = sub i32 2, %522
  %524 = mul i32 1, %523
  %525 = add i32 0, %524
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 2
  %527 = load i32, i32* %526, align 4
  %528 = mul i32 1, %527
  %529 = getelementptr %array, %array* %b, i32 0, i32 0
  %530 = load %complex_4*, %complex_4** %529, align 8
  %531 = getelementptr inbounds %complex_4, %complex_4* %530, i32 %525
  %532 = load %complex_4, %complex_4* %531, align 4
  %533 = alloca %complex_4, align 8
  store %complex_4 %517, %complex_4* %533, align 4
  %534 = alloca %complex_4, align 8
  store %complex_4 %532, %complex_4* %534, align 4
  %535 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %533, %complex_4* %534, %complex_4* %535)
  %536 = load %complex_4, %complex_4* %535, align 4
  %537 = getelementptr %array, %array* %b, i32 0, i32 2
  %538 = load %dimension_descriptor*, %dimension_descriptor** %537, align 8
  %539 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %538, i32 0
  %540 = getelementptr %dimension_descriptor, %dimension_descriptor* %539, i32 0, i32 1
  %541 = load i32, i32* %540, align 4
  %542 = sub i32 3, %541
  %543 = mul i32 1, %542
  %544 = add i32 0, %543
  %545 = getelementptr %dimension_descriptor, %dimension_descriptor* %539, i32 0, i32 2
  %546 = load i32, i32* %545, align 4
  %547 = mul i32 1, %546
  %548 = getelementptr %array, %array* %b, i32 0, i32 0
  %549 = load %complex_4*, %complex_4** %548, align 8
  %550 = getelementptr inbounds %complex_4, %complex_4* %549, i32 %544
  %551 = load %complex_4, %complex_4* %550, align 4
  %552 = alloca %complex_4, align 8
  store %complex_4 %536, %complex_4* %552, align 4
  %553 = alloca %complex_4, align 8
  store %complex_4 %551, %complex_4* %553, align 4
  %554 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %552, %complex_4* %553, %complex_4* %554)
  %555 = load %complex_4, %complex_4* %554, align 4
  %556 = getelementptr %array, %array* %a, i32 0, i32 2
  %557 = load %dimension_descriptor*, %dimension_descriptor** %556, align 8
  %558 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %557, i32 0
  %559 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 1
  %560 = load i32, i32* %559, align 4
  %561 = sub i32 1, %560
  %562 = mul i32 1, %561
  %563 = add i32 0, %562
  %564 = getelementptr %dimension_descriptor, %dimension_descriptor* %558, i32 0, i32 2
  %565 = load i32, i32* %564, align 4
  %566 = mul i32 1, %565
  %567 = getelementptr %array, %array* %a, i32 0, i32 0
  %568 = load %complex_4*, %complex_4** %567, align 8
  %569 = getelementptr inbounds %complex_4, %complex_4* %568, i32 %563
  %570 = load %complex_4, %complex_4* %569, align 4
  %571 = alloca %complex_4, align 8
  store %complex_4 %555, %complex_4* %571, align 4
  %572 = alloca %complex_4, align 8
  store %complex_4 %570, %complex_4* %572, align 4
  %573 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %571, %complex_4* %572, %complex_4* %573)
  %574 = load %complex_4, %complex_4* %573, align 4
  store %complex_4 %574, %complex_4* %502, align 4
  %575 = getelementptr %array, %array* %b, i32 0, i32 2
  %576 = load %dimension_descriptor*, %dimension_descriptor** %575, align 8
  %577 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %576, i32 0
  %578 = getelementptr %dimension_descriptor, %dimension_descriptor* %577, i32 0, i32 1
  %579 = load i32, i32* %578, align 4
  %580 = sub i32 4, %579
  %581 = mul i32 1, %580
  %582 = add i32 0, %581
  %583 = getelementptr %dimension_descriptor, %dimension_descriptor* %577, i32 0, i32 2
  %584 = load i32, i32* %583, align 4
  %585 = mul i32 1, %584
  %586 = getelementptr %array, %array* %b, i32 0, i32 0
  %587 = load %complex_4*, %complex_4** %586, align 8
  %588 = getelementptr inbounds %complex_4, %complex_4* %587, i32 %582
  %589 = load %complex_4, %complex_4* %588, align 4
  %590 = alloca %complex_4, align 8
  %591 = getelementptr %complex_4, %complex_4* %590, i32 0, i32 0
  %592 = getelementptr %complex_4, %complex_4* %590, i32 0, i32 1
  store float 1.700000e+01, float* %591, align 4
  store float 0.000000e+00, float* %592, align 4
  %593 = load %complex_4, %complex_4* %590, align 4
  %594 = alloca %complex_4, align 8
  store %complex_4 %589, %complex_4* %594, align 4
  %595 = getelementptr %complex_4, %complex_4* %594, i32 0, i32 0
  %596 = load float, float* %595, align 4
  %597 = alloca %complex_4, align 8
  store %complex_4 %593, %complex_4* %597, align 4
  %598 = getelementptr %complex_4, %complex_4* %597, i32 0, i32 0
  %599 = load float, float* %598, align 4
  %600 = alloca %complex_4, align 8
  store %complex_4 %589, %complex_4* %600, align 4
  %601 = getelementptr %complex_4, %complex_4* %600, i32 0, i32 1
  %602 = load float, float* %601, align 4
  %603 = alloca %complex_4, align 8
  store %complex_4 %593, %complex_4* %603, align 4
  %604 = getelementptr %complex_4, %complex_4* %603, i32 0, i32 1
  %605 = load float, float* %604, align 4
  %606 = fcmp une float %596, %599
  %607 = fcmp une float %602, %605
  %608 = and i1 %606, %607
  br i1 %608, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %609 = getelementptr %array, %array* %b, i32 0, i32 2
  %610 = load %dimension_descriptor*, %dimension_descriptor** %609, align 8
  %611 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %610, i32 0
  %612 = getelementptr %dimension_descriptor, %dimension_descriptor* %611, i32 0, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = sub i32 4, %613
  %615 = mul i32 1, %614
  %616 = add i32 0, %615
  %617 = getelementptr %dimension_descriptor, %dimension_descriptor* %611, i32 0, i32 2
  %618 = load i32, i32* %617, align 4
  %619 = mul i32 1, %618
  %620 = getelementptr %array, %array* %b, i32 0, i32 0
  %621 = load %complex_4*, %complex_4** %620, align 8
  %622 = getelementptr inbounds %complex_4, %complex_4* %621, i32 %616
  %623 = getelementptr %array, %array* %a, i32 0, i32 2
  %624 = load %dimension_descriptor*, %dimension_descriptor** %623, align 8
  %625 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %624, i32 0
  %626 = getelementptr %dimension_descriptor, %dimension_descriptor* %625, i32 0, i32 1
  %627 = load i32, i32* %626, align 4
  %628 = sub i32 1, %627
  %629 = mul i32 1, %628
  %630 = add i32 0, %629
  %631 = getelementptr %dimension_descriptor, %dimension_descriptor* %625, i32 0, i32 2
  %632 = load i32, i32* %631, align 4
  %633 = mul i32 1, %632
  %634 = getelementptr %array, %array* %a, i32 0, i32 0
  %635 = load %complex_4*, %complex_4** %634, align 8
  %636 = getelementptr inbounds %complex_4, %complex_4* %635, i32 %630
  %637 = load %complex_4, %complex_4* %636, align 4
  store %complex_4 %637, %complex_4* %622, align 4
  %638 = getelementptr %array, %array* %b, i32 0, i32 2
  %639 = load %dimension_descriptor*, %dimension_descriptor** %638, align 8
  %640 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %639, i32 0
  %641 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 1
  %642 = load i32, i32* %641, align 4
  %643 = sub i32 4, %642
  %644 = mul i32 1, %643
  %645 = add i32 0, %644
  %646 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 2
  %647 = load i32, i32* %646, align 4
  %648 = mul i32 1, %647
  %649 = getelementptr %array, %array* %b, i32 0, i32 0
  %650 = load %complex_4*, %complex_4** %649, align 8
  %651 = getelementptr inbounds %complex_4, %complex_4* %650, i32 %645
  %652 = load %complex_4, %complex_4* %651, align 4
  %653 = alloca %complex_4, align 8
  %654 = getelementptr %complex_4, %complex_4* %653, i32 0, i32 0
  %655 = getelementptr %complex_4, %complex_4* %653, i32 0, i32 1
  store float 1.100000e+01, float* %654, align 4
  store float 0.000000e+00, float* %655, align 4
  %656 = load %complex_4, %complex_4* %653, align 4
  %657 = alloca %complex_4, align 8
  store %complex_4 %652, %complex_4* %657, align 4
  %658 = getelementptr %complex_4, %complex_4* %657, i32 0, i32 0
  %659 = load float, float* %658, align 4
  %660 = alloca %complex_4, align 8
  store %complex_4 %656, %complex_4* %660, align 4
  %661 = getelementptr %complex_4, %complex_4* %660, i32 0, i32 0
  %662 = load float, float* %661, align 4
  %663 = alloca %complex_4, align 8
  store %complex_4 %652, %complex_4* %663, align 4
  %664 = getelementptr %complex_4, %complex_4* %663, i32 0, i32 1
  %665 = load float, float* %664, align 4
  %666 = alloca %complex_4, align 8
  store %complex_4 %656, %complex_4* %666, align 4
  %667 = getelementptr %complex_4, %complex_4* %666, i32 0, i32 1
  %668 = load float, float* %667, align 4
  %669 = fcmp une float %659, %662
  %670 = fcmp une float %665, %668
  %671 = and i1 %669, %670
  br i1 %671, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %672 = load i32, i32* %i, align 4
  %673 = add i32 %672, 1
  %674 = icmp sle i32 %673, 2
  br i1 %674, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %675 = load i32, i32* %i, align 4
  %676 = add i32 %675, 1
  store i32 %676, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %677 = load i32, i32* %j, align 4
  %678 = add i32 %677, 1
  %679 = icmp sle i32 %678, 2
  br i1 %679, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %680 = load i32, i32* %j, align 4
  %681 = add i32 %680, 1
  store i32 %681, i32* %j, align 4
  %682 = load i32, i32* %i, align 4
  %683 = load i32, i32* %j, align 4
  %684 = getelementptr %array, %array* %c, i32 0, i32 2
  %685 = load %dimension_descriptor*, %dimension_descriptor** %684, align 8
  %686 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %685, i32 0
  %687 = getelementptr %dimension_descriptor, %dimension_descriptor* %686, i32 0, i32 1
  %688 = load i32, i32* %687, align 4
  %689 = sub i32 %682, %688
  %690 = mul i32 1, %689
  %691 = add i32 0, %690
  %692 = getelementptr %dimension_descriptor, %dimension_descriptor* %686, i32 0, i32 2
  %693 = load i32, i32* %692, align 4
  %694 = mul i32 1, %693
  %695 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %685, i32 1
  %696 = getelementptr %dimension_descriptor, %dimension_descriptor* %695, i32 0, i32 1
  %697 = load i32, i32* %696, align 4
  %698 = sub i32 %683, %697
  %699 = mul i32 %694, %698
  %700 = add i32 %691, %699
  %701 = getelementptr %dimension_descriptor, %dimension_descriptor* %695, i32 0, i32 2
  %702 = load i32, i32* %701, align 4
  %703 = mul i32 %694, %702
  %704 = getelementptr %array, %array* %c, i32 0, i32 0
  %705 = load %complex_4*, %complex_4** %704, align 8
  %706 = getelementptr inbounds %complex_4, %complex_4* %705, i32 %700
  %707 = load i32, i32* %i, align 4
  %708 = load i32, i32* %j, align 4
  %709 = add i32 %707, %708
  %710 = add i32 %709, 10
  %711 = sitofp i32 %710 to float
  %712 = alloca %complex_4, align 8
  %713 = getelementptr %complex_4, %complex_4* %712, i32 0, i32 0
  %714 = getelementptr %complex_4, %complex_4* %712, i32 0, i32 1
  store float %711, float* %713, align 4
  store float 0.000000e+00, float* %714, align 4
  %715 = load %complex_4, %complex_4* %712, align 4
  store %complex_4 %715, %complex_4* %706, align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %716 = getelementptr %array, %array* %c, i32 0, i32 2
  %717 = load %dimension_descriptor*, %dimension_descriptor** %716, align 8
  %718 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %717, i32 0
  %719 = getelementptr %dimension_descriptor, %dimension_descriptor* %718, i32 0, i32 1
  %720 = load i32, i32* %719, align 4
  %721 = sub i32 1, %720
  %722 = mul i32 1, %721
  %723 = add i32 0, %722
  %724 = getelementptr %dimension_descriptor, %dimension_descriptor* %718, i32 0, i32 2
  %725 = load i32, i32* %724, align 4
  %726 = mul i32 1, %725
  %727 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %717, i32 1
  %728 = getelementptr %dimension_descriptor, %dimension_descriptor* %727, i32 0, i32 1
  %729 = load i32, i32* %728, align 4
  %730 = sub i32 1, %729
  %731 = mul i32 %726, %730
  %732 = add i32 %723, %731
  %733 = getelementptr %dimension_descriptor, %dimension_descriptor* %727, i32 0, i32 2
  %734 = load i32, i32* %733, align 4
  %735 = mul i32 %726, %734
  %736 = getelementptr %array, %array* %c, i32 0, i32 0
  %737 = load %complex_4*, %complex_4** %736, align 8
  %738 = getelementptr inbounds %complex_4, %complex_4* %737, i32 %732
  %739 = load %complex_4, %complex_4* %738, align 4
  %740 = alloca %complex_4, align 8
  %741 = getelementptr %complex_4, %complex_4* %740, i32 0, i32 0
  %742 = getelementptr %complex_4, %complex_4* %740, i32 0, i32 1
  store float 1.200000e+01, float* %741, align 4
  store float 0.000000e+00, float* %742, align 4
  %743 = load %complex_4, %complex_4* %740, align 4
  %744 = alloca %complex_4, align 8
  store %complex_4 %739, %complex_4* %744, align 4
  %745 = getelementptr %complex_4, %complex_4* %744, i32 0, i32 0
  %746 = load float, float* %745, align 4
  %747 = alloca %complex_4, align 8
  store %complex_4 %743, %complex_4* %747, align 4
  %748 = getelementptr %complex_4, %complex_4* %747, i32 0, i32 0
  %749 = load float, float* %748, align 4
  %750 = alloca %complex_4, align 8
  store %complex_4 %739, %complex_4* %750, align 4
  %751 = getelementptr %complex_4, %complex_4* %750, i32 0, i32 1
  %752 = load float, float* %751, align 4
  %753 = alloca %complex_4, align 8
  store %complex_4 %743, %complex_4* %753, align 4
  %754 = getelementptr %complex_4, %complex_4* %753, i32 0, i32 1
  %755 = load float, float* %754, align 4
  %756 = fcmp une float %746, %749
  %757 = fcmp une float %752, %755
  %758 = and i1 %756, %757
  br i1 %758, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %759 = getelementptr %array, %array* %c, i32 0, i32 2
  %760 = load %dimension_descriptor*, %dimension_descriptor** %759, align 8
  %761 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %760, i32 0
  %762 = getelementptr %dimension_descriptor, %dimension_descriptor* %761, i32 0, i32 1
  %763 = load i32, i32* %762, align 4
  %764 = sub i32 1, %763
  %765 = mul i32 1, %764
  %766 = add i32 0, %765
  %767 = getelementptr %dimension_descriptor, %dimension_descriptor* %761, i32 0, i32 2
  %768 = load i32, i32* %767, align 4
  %769 = mul i32 1, %768
  %770 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %760, i32 1
  %771 = getelementptr %dimension_descriptor, %dimension_descriptor* %770, i32 0, i32 1
  %772 = load i32, i32* %771, align 4
  %773 = sub i32 2, %772
  %774 = mul i32 %769, %773
  %775 = add i32 %766, %774
  %776 = getelementptr %dimension_descriptor, %dimension_descriptor* %770, i32 0, i32 2
  %777 = load i32, i32* %776, align 4
  %778 = mul i32 %769, %777
  %779 = getelementptr %array, %array* %c, i32 0, i32 0
  %780 = load %complex_4*, %complex_4** %779, align 8
  %781 = getelementptr inbounds %complex_4, %complex_4* %780, i32 %775
  %782 = load %complex_4, %complex_4* %781, align 4
  %783 = alloca %complex_4, align 8
  %784 = getelementptr %complex_4, %complex_4* %783, i32 0, i32 0
  %785 = getelementptr %complex_4, %complex_4* %783, i32 0, i32 1
  store float 1.300000e+01, float* %784, align 4
  store float 0.000000e+00, float* %785, align 4
  %786 = load %complex_4, %complex_4* %783, align 4
  %787 = alloca %complex_4, align 8
  store %complex_4 %782, %complex_4* %787, align 4
  %788 = getelementptr %complex_4, %complex_4* %787, i32 0, i32 0
  %789 = load float, float* %788, align 4
  %790 = alloca %complex_4, align 8
  store %complex_4 %786, %complex_4* %790, align 4
  %791 = getelementptr %complex_4, %complex_4* %790, i32 0, i32 0
  %792 = load float, float* %791, align 4
  %793 = alloca %complex_4, align 8
  store %complex_4 %782, %complex_4* %793, align 4
  %794 = getelementptr %complex_4, %complex_4* %793, i32 0, i32 1
  %795 = load float, float* %794, align 4
  %796 = alloca %complex_4, align 8
  store %complex_4 %786, %complex_4* %796, align 4
  %797 = getelementptr %complex_4, %complex_4* %796, i32 0, i32 1
  %798 = load float, float* %797, align 4
  %799 = fcmp une float %789, %792
  %800 = fcmp une float %795, %798
  %801 = and i1 %799, %800
  br i1 %801, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %802 = getelementptr %array, %array* %c, i32 0, i32 2
  %803 = load %dimension_descriptor*, %dimension_descriptor** %802, align 8
  %804 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %803, i32 0
  %805 = getelementptr %dimension_descriptor, %dimension_descriptor* %804, i32 0, i32 1
  %806 = load i32, i32* %805, align 4
  %807 = sub i32 2, %806
  %808 = mul i32 1, %807
  %809 = add i32 0, %808
  %810 = getelementptr %dimension_descriptor, %dimension_descriptor* %804, i32 0, i32 2
  %811 = load i32, i32* %810, align 4
  %812 = mul i32 1, %811
  %813 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %803, i32 1
  %814 = getelementptr %dimension_descriptor, %dimension_descriptor* %813, i32 0, i32 1
  %815 = load i32, i32* %814, align 4
  %816 = sub i32 1, %815
  %817 = mul i32 %812, %816
  %818 = add i32 %809, %817
  %819 = getelementptr %dimension_descriptor, %dimension_descriptor* %813, i32 0, i32 2
  %820 = load i32, i32* %819, align 4
  %821 = mul i32 %812, %820
  %822 = getelementptr %array, %array* %c, i32 0, i32 0
  %823 = load %complex_4*, %complex_4** %822, align 8
  %824 = getelementptr inbounds %complex_4, %complex_4* %823, i32 %818
  %825 = load %complex_4, %complex_4* %824, align 4
  %826 = alloca %complex_4, align 8
  %827 = getelementptr %complex_4, %complex_4* %826, i32 0, i32 0
  %828 = getelementptr %complex_4, %complex_4* %826, i32 0, i32 1
  store float 1.300000e+01, float* %827, align 4
  store float 0.000000e+00, float* %828, align 4
  %829 = load %complex_4, %complex_4* %826, align 4
  %830 = alloca %complex_4, align 8
  store %complex_4 %825, %complex_4* %830, align 4
  %831 = getelementptr %complex_4, %complex_4* %830, i32 0, i32 0
  %832 = load float, float* %831, align 4
  %833 = alloca %complex_4, align 8
  store %complex_4 %829, %complex_4* %833, align 4
  %834 = getelementptr %complex_4, %complex_4* %833, i32 0, i32 0
  %835 = load float, float* %834, align 4
  %836 = alloca %complex_4, align 8
  store %complex_4 %825, %complex_4* %836, align 4
  %837 = getelementptr %complex_4, %complex_4* %836, i32 0, i32 1
  %838 = load float, float* %837, align 4
  %839 = alloca %complex_4, align 8
  store %complex_4 %829, %complex_4* %839, align 4
  %840 = getelementptr %complex_4, %complex_4* %839, i32 0, i32 1
  %841 = load float, float* %840, align 4
  %842 = fcmp une float %832, %835
  %843 = fcmp une float %838, %841
  %844 = and i1 %842, %843
  br i1 %844, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %845 = getelementptr %array, %array* %c, i32 0, i32 2
  %846 = load %dimension_descriptor*, %dimension_descriptor** %845, align 8
  %847 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %846, i32 0
  %848 = getelementptr %dimension_descriptor, %dimension_descriptor* %847, i32 0, i32 1
  %849 = load i32, i32* %848, align 4
  %850 = sub i32 2, %849
  %851 = mul i32 1, %850
  %852 = add i32 0, %851
  %853 = getelementptr %dimension_descriptor, %dimension_descriptor* %847, i32 0, i32 2
  %854 = load i32, i32* %853, align 4
  %855 = mul i32 1, %854
  %856 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %846, i32 1
  %857 = getelementptr %dimension_descriptor, %dimension_descriptor* %856, i32 0, i32 1
  %858 = load i32, i32* %857, align 4
  %859 = sub i32 2, %858
  %860 = mul i32 %855, %859
  %861 = add i32 %852, %860
  %862 = getelementptr %dimension_descriptor, %dimension_descriptor* %856, i32 0, i32 2
  %863 = load i32, i32* %862, align 4
  %864 = mul i32 %855, %863
  %865 = getelementptr %array, %array* %c, i32 0, i32 0
  %866 = load %complex_4*, %complex_4** %865, align 8
  %867 = getelementptr inbounds %complex_4, %complex_4* %866, i32 %861
  %868 = load %complex_4, %complex_4* %867, align 4
  %869 = alloca %complex_4, align 8
  %870 = getelementptr %complex_4, %complex_4* %869, i32 0, i32 0
  %871 = getelementptr %complex_4, %complex_4* %869, i32 0, i32 1
  store float 1.400000e+01, float* %870, align 4
  store float 0.000000e+00, float* %871, align 4
  %872 = load %complex_4, %complex_4* %869, align 4
  %873 = alloca %complex_4, align 8
  store %complex_4 %868, %complex_4* %873, align 4
  %874 = getelementptr %complex_4, %complex_4* %873, i32 0, i32 0
  %875 = load float, float* %874, align 4
  %876 = alloca %complex_4, align 8
  store %complex_4 %872, %complex_4* %876, align 4
  %877 = getelementptr %complex_4, %complex_4* %876, i32 0, i32 0
  %878 = load float, float* %877, align 4
  %879 = alloca %complex_4, align 8
  store %complex_4 %868, %complex_4* %879, align 4
  %880 = getelementptr %complex_4, %complex_4* %879, i32 0, i32 1
  %881 = load float, float* %880, align 4
  %882 = alloca %complex_4, align 8
  store %complex_4 %872, %complex_4* %882, align 4
  %883 = getelementptr %complex_4, %complex_4* %882, i32 0, i32 1
  %884 = load float, float* %883, align 4
  %885 = fcmp une float %875, %878
  %886 = fcmp une float %881, %884
  %887 = and i1 %885, %886
  br i1 %887, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)
