; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.5 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.6 = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %dp = alloca i32, align 4
  store i32 8, i32* %dp, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %dp1 = alloca i32, align 4
  store i32 8, i32* %dp1, align 4
  %x = alloca float, align 4
  store float 0x3FEFFFFFE0000000, float* %x, align 4
  %2 = alloca i64, align 8
  %3 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i64* %2, i32 0, i32 0, float* %x)
  %4 = load i64, i64* %2, align 4
  %5 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %5 to %string_descriptor*
  %6 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %3, i8** %6, align 8
  %7 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %4, i64* %7, align 4
  %8 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %11 = load i64, i64* %10, align 4
  %12 = trunc i64 %11 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %9, i32 %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  store float 0x3FEFFFFFE0000000, float* %x, align 4
  %13 = alloca i64, align 8
  %14 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.1, i32 0, i32 0), i64* %13, i32 0, i32 0, float* %x)
  %15 = load i64, i64* %13, align 4
  %16 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc2 = bitcast i8* %16 to %string_descriptor*
  %17 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %14, i8** %17, align 8
  %18 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %15, i64* %18, align 4
  %19 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %22 = load i64, i64* %21, align 4
  %23 = trunc i64 %22 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %20, i32 %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  store float 1.000000e+00, float* %x, align 4
  %24 = alloca i64, align 8
  %25 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.2, i32 0, i32 0), i64* %24, i32 0, i32 0, float* %x)
  %26 = load i64, i64* %24, align 4
  %27 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc3 = bitcast i8* %27 to %string_descriptor*
  %28 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  store i8* %25, i8** %28, align 8
  %29 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  store i64 %26, i64* %29, align 4
  %30 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %31, i32 %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1)
  store float 1.000000e+00, float* %x, align 4
  %35 = alloca i64, align 8
  %36 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.3, i32 0, i32 0), i64* %35, i32 0, i32 0, float* %x)
  %37 = load i64, i64* %35, align 4
  %38 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc4 = bitcast i8* %38 to %string_descriptor*
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  store i8* %36, i8** %39, align 8
  %40 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  store i64 %37, i64* %40, align 4
  %41 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  %44 = load i64, i64* %43, align 4
  %45 = trunc i64 %44 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %42, i32 %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1)
  store float 1.000000e+00, float* %x, align 4
  %46 = alloca i64, align 8
  %47 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.4, i32 0, i32 0), i64* %46, i32 0, i32 0, float* %x)
  %48 = load i64, i64* %46, align 4
  %49 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc5 = bitcast i8* %49 to %string_descriptor*
  %50 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  store i8* %47, i8** %50, align 8
  %51 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  store i64 %48, i64* %51, align 4
  %52 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  %55 = load i64, i64* %54, align 4
  %56 = trunc i64 %55 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %53, i32 %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 1)
  store float 0x3FEFFFFFE0000000, float* %x, align 4
  %57 = alloca i64, align 8
  %58 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.5, i32 0, i32 0), i64* %57, i32 0, i32 0, float* %x)
  %59 = load i64, i64* %57, align 4
  %60 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc6 = bitcast i8* %60 to %string_descriptor*
  %61 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  store i8* %58, i8** %61, align 8
  %62 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  store i64 %59, i64* %62, align 4
  %63 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  %66 = load i64, i64* %65, align 4
  %67 = trunc i64 %66 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %64, i32 %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 1)
  store float 1.000000e+00, float* %x, align 4
  %68 = alloca i64, align 8
  %69 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.6, i32 0, i32 0), i64* %68, i32 0, i32 0, float* %x)
  %70 = load i64, i64* %68, align 4
  %71 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc7 = bitcast i8* %71 to %string_descriptor*
  %72 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  store i8* %69, i8** %72, align 8
  %73 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  store i64 %70, i64* %73, align 4
  %74 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  %77 = load i64, i64* %76, align 4
  %78 = trunc i64 %77 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %75, i32 %78, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()
