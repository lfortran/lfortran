; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [9 x i8] c"I4,I4,I4\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.1 = private unnamed_addr constant [9 x i8] c"I4,I4,I4\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.2 = private unnamed_addr constant [12 x i8] c"I4,I4,I4,I4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.3 = private unnamed_addr constant [12 x i8] c"I4,I4,I4,I4\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.4 = private unnamed_addr constant [6 x i8] c"I4,I4\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.5 = private unnamed_addr constant [6 x i8] c"I4,I4\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.6 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@13 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.7 = private unnamed_addr constant [3 x i8] c"I4\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [196 x i32], align 4
  %b = alloca [96 x i32], align 4
  %c = alloca [35 x i32], align 4
  %d = alloca [4 x i32], align 4
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  store i32 2, i32* %3, align 4
  %4 = alloca i32, align 4
  store i32 3, i32* %4, align 4
  %5 = alloca i32, align 4
  store i32 1, i32* %5, align 4
  %6 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @serialization_info, i32 0, i32 0), i64* %2, i32 0, i32 0, i32* %3, i32* %4, i32* %5)
  %7 = load i64, i64* %2, align 4
  %stringFormat_desc = alloca %string_descriptor, align 8
  %8 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %7, i64* %9, align 4
  %10 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %11, i32 %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  store i32 5, i32* %16, align 4
  %17 = alloca i32, align 4
  store i32 9, i32* %17, align 4
  %18 = alloca i32, align 4
  store i32 7, i32* %18, align 4
  %19 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @serialization_info.1, i32 0, i32 0), i64* %15, i32 0, i32 0, i32* %16, i32* %17, i32* %18)
  %20 = load i64, i64* %15, align 4
  %stringFormat_desc1 = alloca %string_descriptor, align 8
  %21 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  store i64 %20, i64* %22, align 4
  %23 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc1, i32 0, i32 1
  %26 = load i64, i64* %25, align 4
  %27 = trunc i64 %26 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %24, i32 %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  %28 = alloca i64, align 8
  %29 = alloca i32, align 4
  store i32 1, i32* %29, align 4
  %30 = alloca i32, align 4
  store i32 2, i32* %30, align 4
  %31 = alloca i32, align 4
  store i32 3, i32* %31, align 4
  %32 = alloca i32, align 4
  store i32 4, i32* %32, align 4
  %33 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @serialization_info.2, i32 0, i32 0), i64* %28, i32 0, i32 0, i32* %29, i32* %30, i32* %31, i32* %32)
  %34 = load i64, i64* %28, align 4
  %stringFormat_desc2 = alloca %string_descriptor, align 8
  %35 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  store i64 %34, i64* %36, align 4
  %37 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc2, i32 0, i32 1
  %40 = load i64, i64* %39, align 4
  %41 = trunc i64 %40 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %38, i32 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1)
  %42 = alloca i64, align 8
  %43 = alloca i32, align 4
  store i32 2, i32* %43, align 4
  %44 = alloca i32, align 4
  store i32 4, i32* %44, align 4
  %45 = alloca i32, align 4
  store i32 6, i32* %45, align 4
  %46 = alloca i32, align 4
  store i32 7, i32* %46, align 4
  %47 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @serialization_info.3, i32 0, i32 0), i64* %42, i32 0, i32 0, i32* %43, i32* %44, i32* %45, i32* %46)
  %48 = load i64, i64* %42, align 4
  %stringFormat_desc3 = alloca %string_descriptor, align 8
  %49 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  store i8* %47, i8** %49, align 8
  %50 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  store i64 %48, i64* %50, align 4
  %51 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc3, i32 0, i32 1
  %54 = load i64, i64* %53, align 4
  %55 = trunc i64 %54 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %52, i32 %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1)
  %56 = alloca i64, align 8
  %57 = alloca i32, align 4
  store i32 6, i32* %57, align 4
  %58 = alloca i32, align 4
  store i32 1, i32* %58, align 4
  %59 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @serialization_info.4, i32 0, i32 0), i64* %56, i32 0, i32 0, i32* %57, i32* %58)
  %60 = load i64, i64* %56, align 4
  %stringFormat_desc4 = alloca %string_descriptor, align 8
  %61 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  store i8* %59, i8** %61, align 8
  %62 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  store i64 %60, i64* %62, align 4
  %63 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc4, i32 0, i32 1
  %66 = load i64, i64* %65, align 4
  %67 = trunc i64 %66 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8* %64, i32 %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i32 0, i32 0), i32 1)
  %68 = alloca i64, align 8
  %69 = alloca i32, align 4
  store i32 10, i32* %69, align 4
  %70 = alloca i32, align 4
  store i32 7, i32* %70, align 4
  %71 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @serialization_info.5, i32 0, i32 0), i64* %68, i32 0, i32 0, i32* %69, i32* %70)
  %72 = load i64, i64* %68, align 4
  %stringFormat_desc5 = alloca %string_descriptor, align 8
  %73 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  store i8* %71, i8** %73, align 8
  %74 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  store i64 %72, i64* %74, align 4
  %75 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc5, i32 0, i32 1
  %78 = load i64, i64* %77, align 4
  %79 = trunc i64 %78 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %76, i32 %79, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0), i32 1)
  %80 = alloca i64, align 8
  %81 = alloca i32, align 4
  store i32 1, i32* %81, align 4
  %82 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.6, i32 0, i32 0), i64* %80, i32 0, i32 0, i32* %81)
  %83 = load i64, i64* %80, align 4
  %stringFormat_desc6 = alloca %string_descriptor, align 8
  %84 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  store i8* %82, i8** %84, align 8
  %85 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  store i64 %83, i64* %85, align 4
  %86 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc6, i32 0, i32 1
  %89 = load i64, i64* %88, align 4
  %90 = trunc i64 %89 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @13, i32 0, i32 0), i8* %87, i32 %90, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i32 1)
  %91 = alloca i64, align 8
  %92 = alloca i32, align 4
  store i32 4, i32* %92, align 4
  %93 = call i8* (i8*, i64, i8*, i64*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info.7, i32 0, i32 0), i64* %91, i32 0, i32 0, i32* %92)
  %94 = load i64, i64* %91, align 4
  %stringFormat_desc7 = alloca %string_descriptor, align 8
  %95 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  store i8* %93, i8** %95, align 8
  %96 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  store i64 %94, i64* %96, align 4
  %97 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc7, i32 0, i32 1
  %100 = load i64, i64* %99, align 4
  %101 = trunc i64 %100 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %98, i32 %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i64*, i32, i32, ...)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()
