; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@3 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@9 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@16 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@18 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@21 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@31 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@32 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@33 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@35 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@36 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@38 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@39 = private unnamed_addr constant [2 x i8] c" \00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@42 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@44 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %j, align 4
  store i32 2, i32* %k, align 4
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %2 = load i32, i32* %k, align 4
  %3 = icmp sgt i32 %2, 0
  %4 = load i32, i32* %i, align 4
  %5 = icmp sle i32 %4, 10
  %6 = icmp eq i1 %3, false
  %7 = select i1 %6, i1 %3, i1 %5
  %8 = load i32, i32* %k, align 4
  %9 = icmp sle i32 %8, 0
  %10 = load i32, i32* %i, align 4
  %11 = icmp sge i32 %10, 10
  %12 = icmp eq i1 %9, false
  %13 = select i1 %12, i1 %9, i1 %11
  %14 = icmp eq i1 %7, false
  %15 = select i1 %14, i1 %13, i1 %7
  br i1 %15, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %16 = load i32, i32* %j, align 4
  %17 = load i32, i32* %i, align 4
  %18 = add i32 %16, %17
  store i32 %18, i32* %j, align 4
  %19 = load i32, i32* %i, align 4
  %20 = load i32, i32* %k, align 4
  %21 = add i32 %19, %20
  store i32 %21, i32* %i, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %22 = load i32, i32* %j, align 4
  %23 = icmp ne i32 %22, 25
  br i1 %23, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %24 = load i32, i32* %i, align 4
  %25 = icmp ne i32 %24, 11
  br i1 %25, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %26 = load i32, i32* %j, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i32 %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  store i32 0, i32* %j, align 4
  store i32 -2, i32* %k, align 4
  store i32 10, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %ifcont3
  %27 = load i32, i32* %k, align 4
  %28 = icmp sgt i32 %27, 0
  %29 = load i32, i32* %i, align 4
  %30 = icmp sle i32 %29, 1
  %31 = icmp eq i1 %28, false
  %32 = select i1 %31, i1 %28, i1 %30
  %33 = load i32, i32* %k, align 4
  %34 = icmp sle i32 %33, 0
  %35 = load i32, i32* %i, align 4
  %36 = icmp sge i32 %35, 1
  %37 = icmp eq i1 %34, false
  %38 = select i1 %37, i1 %34, i1 %36
  %39 = icmp eq i1 %32, false
  %40 = select i1 %39, i1 %38, i1 %32
  br i1 %40, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %41 = load i32, i32* %j, align 4
  %42 = load i32, i32* %i, align 4
  %43 = add i32 %41, %42
  store i32 %43, i32* %j, align 4
  %44 = load i32, i32* %i, align 4
  %45 = load i32, i32* %k, align 4
  %46 = add i32 %44, %45
  store i32 %46, i32* %i, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %47 = load i32, i32* %j, align 4
  %48 = icmp ne i32 %47, 30
  br i1 %48, label %then7, label %else8

then7:                                            ; preds = %loop.end6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont9

else8:                                            ; preds = %loop.end6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %49 = load i32, i32* %i, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %ifcont9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %51 = load i32, i32* %j, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i32 0, i32 0), i32 %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @16, i32 0, i32 0))
  store i32 0, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %a.head

a.head:                                           ; preds = %ifcont15, %ifcont12
  %52 = load i32, i32* %i, align 4
  %53 = icmp sle i32 %52, 10
  br i1 %53, label %a.body, label %a.end

a.body:                                           ; preds = %a.head
  %54 = load i32, i32* %j, align 4
  %55 = load i32, i32* %i, align 4
  %56 = add i32 %54, %55
  store i32 %56, i32* %j, align 4
  %57 = load i32, i32* %i, align 4
  %58 = icmp eq i32 %57, 2
  br i1 %58, label %then13, label %else14

then13:                                           ; preds = %a.body
  br label %a.end

unreachable_after_exit:                           ; No predecessors!
  br label %ifcont15

else14:                                           ; preds = %a.body
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %unreachable_after_exit
  %59 = load i32, i32* %i, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %i, align 4
  br label %a.head

a.end:                                            ; preds = %then13, %a.head
  %61 = load i32, i32* %j, align 4
  %62 = icmp ne i32 %61, 3
  br i1 %62, label %then16, label %else17

then16:                                           ; preds = %a.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %a.end
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %63 = load i32, i32* %i, align 4
  %64 = icmp ne i32 %63, 2
  br i1 %64, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @22, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %b.head

b.head:                                           ; preds = %ifcont25, %ifcont21
  %65 = load i32, i32* %i, align 4
  %66 = icmp sle i32 %65, 10
  br i1 %66, label %b.body, label %b.end

b.body:                                           ; preds = %b.head
  %67 = load i32, i32* %j, align 4
  %68 = load i32, i32* %i, align 4
  %69 = add i32 %67, %68
  store i32 %69, i32* %j, align 4
  %70 = load i32, i32* %i, align 4
  %71 = icmp eq i32 %70, 3
  br i1 %71, label %then22, label %else24

then22:                                           ; preds = %b.body
  br label %b.end

unreachable_after_exit23:                         ; No predecessors!
  br label %ifcont25

else24:                                           ; preds = %b.body
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %unreachable_after_exit23
  %72 = load i32, i32* %i, align 4
  %73 = add i32 %72, 2
  store i32 %73, i32* %i, align 4
  br label %b.head

b.end:                                            ; preds = %then22, %b.head
  %74 = load i32, i32* %j, align 4
  %75 = icmp ne i32 %74, 4
  br i1 %75, label %then26, label %else27

then26:                                           ; preds = %b.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont28

else27:                                           ; preds = %b.end
  br label %ifcont28

ifcont28:                                         ; preds = %else27, %then26
  %76 = load i32, i32* %i, align 4
  %77 = icmp ne i32 %76, 3
  br i1 %77, label %then29, label %else30

then29:                                           ; preds = %ifcont28
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @28, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont31

else30:                                           ; preds = %ifcont28
  br label %ifcont31

ifcont31:                                         ; preds = %else30, %then29
  store i32 0, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %c.head

c.head:                                           ; preds = %ifcont35, %ifcont31
  br i1 true, label %c.body, label %c.end

c.body:                                           ; preds = %c.head
  %78 = load i32, i32* %j, align 4
  %79 = load i32, i32* %i, align 4
  %80 = add i32 %78, %79
  store i32 %80, i32* %j, align 4
  %81 = load i32, i32* %i, align 4
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %then32, label %else34

then32:                                           ; preds = %c.body
  br label %c.end

unreachable_after_exit33:                         ; No predecessors!
  br label %ifcont35

else34:                                           ; preds = %c.body
  br label %ifcont35

ifcont35:                                         ; preds = %else34, %unreachable_after_exit33
  %83 = load i32, i32* %i, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %i, align 4
  br label %c.head

c.end:                                            ; preds = %then32, %c.head
  %85 = load i32, i32* %j, align 4
  %86 = icmp ne i32 %85, 3
  br i1 %86, label %then36, label %else37

then36:                                           ; preds = %c.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont38

else37:                                           ; preds = %c.end
  br label %ifcont38

ifcont38:                                         ; preds = %else37, %then36
  %87 = load i32, i32* %i, align 4
  %88 = icmp ne i32 %87, 2
  br i1 %88, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @34, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %ifcont38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  store i32 2, i32* %k, align 4
  store i32 1, i32* %i, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %goto_target, %ifcont41
  %89 = load i32, i32* %k, align 4
  %90 = icmp sgt i32 %89, 0
  %91 = load i32, i32* %i, align 4
  %92 = icmp sle i32 %91, 10
  %93 = icmp eq i1 %90, false
  %94 = select i1 %93, i1 %90, i1 %92
  %95 = load i32, i32* %k, align 4
  %96 = icmp sle i32 %95, 0
  %97 = load i32, i32* %i, align 4
  %98 = icmp sge i32 %97, 10
  %99 = icmp eq i1 %96, false
  %100 = select i1 %99, i1 %96, i1 %98
  %101 = icmp eq i1 %94, false
  %102 = select i1 %101, i1 %100, i1 %94
  br i1 %102, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  br label %goto_target

goto_target:                                      ; preds = %loop.body43
  %103 = load i32, i32* %i, align 4
  %104 = load i32, i32* %k, align 4
  %105 = add i32 %103, %104
  store i32 %105, i32* %i, align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  %106 = load i32, i32* %i, align 4
  %107 = icmp ne i32 %106, 11
  br i1 %107, label %then45, label %else46

then45:                                           ; preds = %loop.end44
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont47

else46:                                           ; preds = %loop.end44
  br label %ifcont47

ifcont47:                                         ; preds = %else46, %then45
  store i32 1, i32* %i, align 4
  br label %loop.head48

loop.head48:                                      ; preds = %loop.body49, %ifcont47
  %108 = load i32, i32* %i, align 4
  %109 = icmp sle i32 %108, 10
  br i1 %109, label %loop.body49, label %loop.end50

loop.body49:                                      ; preds = %loop.head48
  %110 = load i32, i32* %i, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @41, i32 0, i32 0), i32 %110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  %111 = load i32, i32* %i, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %i, align 4
  br label %loop.head48

loop.end50:                                       ; preds = %loop.head48
  %113 = load i32, i32* %i, align 4
  %114 = icmp ne i32 %113, 11
  br i1 %114, label %then51, label %else52

then51:                                           ; preds = %loop.end50
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %loop.end50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_printf(i8*, ...)
