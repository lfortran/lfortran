subroutine dqawse(f, a, b, alfa, beta, integr, epsabs, epsrel, limit, result, abserr, neval, ier, alist, blist, rlist, elist, iord, last)
double precision :: a, abserr, alfa, alist, area, area1, area12, area2, a1, a2, b, beta, blist, b1, b2, centre, dabs, dmax1, d1mach, elist, epmach, epsabs, epsrel, errbnd, errmax, error1, erro12, error2, errsum, f, resas1, resas2, result, rg, rh, ri, rj, rlist, uflow
integer :: ier, integr, iord, iroff1, iroff2, k, last, limit, maxerr, nev, neval, nrmax
external :: f
dimension :: alist(limit), blist(limit), rlist(limit), elist(limit), iord(limit), ri(25), rj(25), rh(25), rg(25)
epmach = d1mach(4)
uflow = d1mach(1)
ier = 6
neval = 0
last = 0
rlist(1) = 0.0d+00
elist(1) = 0.0d+00
iord(1) = 0
result = 0.0d+00
abserr = 0.0d+00
if (b <= a .or. epsabs == 0.0d+00 .and. epsrel < dmax1(0.5d+02*epmach, 0.5d-28) .or. alfa <= -0.1d+01 .or. beta <= -0.1d+01 .or. integr < 1 .or. integr > 4 .or. limit < 2) then
    go to 999
end if
ier = 0
call dqmomo(alfa, beta, ri, rj, rg, rh, integr)
centre = 0.5d+00*(b + a)
call dqc25s(f, a, b, a, centre, alfa, beta, ri, rj, rg, rh, area1, error1, resas1, integr, nev)
neval = nev
call dqc25s(f, a, b, centre, b, alfa, beta, ri, rj, rg, rh, area2, error2, resas2, integr, nev)
last = 2
neval = neval + nev
result = area1 + area2
abserr = error1 + error2
errbnd = dmax1(epsabs, epsrel*dabs(result))
if (error2 > error1) then
    go to 10
end if
alist(1) = a
alist(2) = centre
blist(1) = centre
blist(2) = b
rlist(1) = area1
rlist(2) = area2
elist(1) = error1
elist(2) = error2
go to 20
10 alist(1) = centre
alist(2) = a
blist(1) = b
blist(2) = centre
rlist(1) = area2
rlist(2) = area1
elist(1) = error2
elist(2) = error1
20 iord(1) = 1
iord(2) = 2
if (limit == 2) then
    ier = 1
end if
if (abserr <= errbnd .or. ier == 1) then
    go to 999
end if
errmax = elist(1)
maxerr = 1
nrmax = 1
area = result
errsum = abserr
iroff1 = 0
iroff2 = 0
70 result = 0.0d+00
abserr = errsum
999 return
end subroutine dqawse
