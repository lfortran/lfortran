; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [35 x i8] c"%13.8e%s%23.17e%s%13.8e%s%23.17e%s\00", align 1

define i32 @main() {
.entry:
  %u = alloca double
  %v = alloca double
  %x = alloca float
  %zero = alloca float
  store float 0.000000e+00, float* %zero
  store double 1.050000e+00, double* %u
  store double 1.050000e+00, double* %v
  store float 0x3FF0CCCCC0000000, float* %x
  %0 = load float, float* %zero
  %1 = fpext float %0 to double
  %2 = load double, double* %v
  %3 = load float, float* %x
  %4 = fpext float %3 to double
  %5 = load double, double* %u
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @2, i32 0, i32 0), double %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), double %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), double %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), double %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
