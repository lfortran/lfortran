; ModuleID = 'LFortran'
source_filename = "LFortran"

define i32 @__module_string_54_mod_double_(i32* %x) {
.entry:
  %ret = alloca i32, align 4
  %0 = load i32, i32* %x, align 4
  %1 = mul i32 %0, 2
  store i32 %1, i32* %ret, align 4
  br label %return

return:                                           ; preds = %.entry
  %2 = load i32, i32* %ret, align 4
  ret i32 %2
}

define void @__module_string_54_mod_foo_sub(i32* %x, i8** %char) {
.entry:
  br label %return

return:                                           ; preds = %.entry
  ret void
}

define i32 @main(i32 %0, i8** %1) {
.entry:
  %x = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %char = alloca i8*, align 8
  %2 = call i8* @_lfortran_malloc(i32 11)
  call void @_lfortran_string_init(i64 11, i8* %2)
  store i8* %2, i8** %char, align 8
  %3 = load i8*, i8** %char, align 8
  %x1 = alloca i32, align 4
  store i32 10, i32* %x1, align 4
  call void @__module_string_54_mod_foo_sub(i32* %x1, i8** %char)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lfortran_malloc(i32)

declare void @_lfortran_string_init(i64, i8*)

declare void @_lpython_free_argv()
