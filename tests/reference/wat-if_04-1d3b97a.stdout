(module
    (type (;0;) (func (param i32) (result)))
    (type (;1;) (func (param i64) (result)))
    (type (;2;) (func (param f32) (result)))
    (type (;3;) (func (param f64) (result)))
    (type (;4;) (func (param i32 i32) (result)))
    (type (;5;) (func (param) (result)))
    (type (;6;) (func (param i32) (result)))
    (type (;7;) (func (param) (result)))
    (import "js" "print_i32" (func (;0;) (type 0)))
    (import "js" "print_i64" (func (;1;) (type 1)))
    (import "js" "print_f32" (func (;2;) (type 2)))
    (import "js" "print_f64" (func (;3;) (type 3)))
    (import "js" "print_str" (func (;4;) (type 4)))
    (import "js" "flush_buf" (func (;5;) (type 5)))
    (import "js" "set_exit_code" (func (;6;) (type 6)))
    (import "js" "memory" (memory (;0;) 100 100))
    (func $7 (type 7) (param) (result)
        (local i32)
        i32.const 1
        local.set 0
        local.get 0
        i32.const 1
        i32.eq
        if
            i32.const 0
            i32.const 1
            call 4
            call 5
        else
            local.get 0
            i32.const 2
            i32.eq
            if
                i32.const 1
                i32.const 1
                call 4
                call 5
            else
                local.get 0
                i32.const 3
                i32.eq
                if
                    i32.const 2
                    i32.const 1
                    call 4
                    call 5
                else
                    local.get 0
                    i32.const 4
                    i32.eq
                    if
                        i32.const 3
                        i32.const 1
                        call 4
                        call 5
                    end
                end
            end
        end
        local.get 0
        i32.const 1
        i32.eq
        if
            i32.const 4
            i32.const 1
            call 4
            call 5
        else
            local.get 0
            i32.const 2
            i32.eq
            if
                i32.const 5
                i32.const 1
                call 4
                call 5
            else
                local.get 0
                i32.const 3
                i32.eq
                if
                    i32.const 6
                    i32.const 1
                    call 4
                    call 5
                else
                    local.get 0
                    i32.const 4
                    i32.eq
                    if
                        i32.const 7
                        i32.const 1
                        call 4
                        call 5
                    else
                        i32.const 8
                        i32.const 8
                        call 4
                        call 5
                    end
                end
            end
        end
        i32.const 0
        call 6
        return
    )
    (export "_lcompilers_main" (func $7))
    (data (;0;) (i32.const 0) "1")
    (data (;1;) (i32.const 1) "2")
    (data (;2;) (i32.const 2) "3")
    (data (;3;) (i32.const 3) "4")
    (data (;4;) (i32.const 4) "1")
    (data (;5;) (i32.const 5) "2")
    (data (;6;) (i32.const 6) "3")
    (data (;7;) (i32.const 7) "4")
    (data (;8;) (i32.const 8) "Invalid!")
)
