; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@string_const_data = private constant [9 x i8] c"learned \00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([9 x i8], [9 x i8]* @string_const_data, i32 0, i32 0), i64 8 }>
@string_const_data.1 = private constant [6 x i8] c"from \00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([6 x i8], [6 x i8]* @string_const_data.1, i32 0, i32 0), i64 5 }>
@string_const_data.3 = private constant [5 x i8] c"the \00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.3, i32 0, i32 0), i64 4 }>
@string_const_data.5 = private constant [5 x i8] c"best\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.5, i32 0, i32 0), i64 4 }>
@string_const_data.7 = private constant [6 x i8] c"I've \00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([6 x i8], [6 x i8]* @string_const_data.7, i32 0, i32 0), i64 5 }>
@string_const_data.9 = private constant [2 x i8] c".\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define %string_descriptor @_lcompilers_stringconcat(%string_descriptor* %s1, %string_descriptor* %s2) {
.entry:
  %0 = call i8* @_lfortran_malloc(i64 16)
  %concat_result = bitcast i8* %0 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %concat_result, align 1
  %1 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 1
  %2 = load i64, i64* %1, align 4
  %3 = trunc i64 %2 to i32
  %4 = getelementptr %string_descriptor, %string_descriptor* %s2, i32 0, i32 1
  %5 = load i64, i64* %4, align 4
  %6 = trunc i64 %5 to i32
  %7 = add i32 %3, %6
  %8 = sext i32 %7 to i64
  %9 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  store i64 %8, i64* %9, align 4
  %10 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 0
  %13 = add i64 %11, 1
  %14 = call i8* @_lfortran_malloc(i64 %13)
  call void @_lfortran_string_init(i64 %13, i8* %14)
  store i8* %14, i8** %12, align 8
  %15 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 1
  %16 = load i64, i64* %15, align 4
  %17 = trunc i64 %16 to i32
  %18 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  %21 = load i64, i64* %20, align 4
  %22 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 1
  %25 = load i64, i64* %24, align 4
  %26 = call i8* @_lfortran_str_slice_assign(i8* %19, i64 %21, i8* %23, i64 %25, i32 1, i32 %17, i32 1, i1 true, i1 true)
  %27 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  %30 = load i64, i64* %29, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %26, i64 %30, i1 false)
  %31 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 1
  %32 = load i64, i64* %31, align 4
  %33 = trunc i64 %32 to i32
  %34 = add i32 %33, 1
  %35 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  %36 = load i64, i64* %35, align 4
  %37 = trunc i64 %36 to i32
  %38 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  %41 = load i64, i64* %40, align 4
  %42 = getelementptr %string_descriptor, %string_descriptor* %s2, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr %string_descriptor, %string_descriptor* %s2, i32 0, i32 1
  %45 = load i64, i64* %44, align 4
  %46 = call i8* @_lfortran_str_slice_assign(i8* %39, i64 %41, i8* %43, i64 %45, i32 %34, i32 %37, i32 1, i1 true, i1 true)
  %47 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  %50 = load i64, i64* %49, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %46, i64 %50, i1 false)
  br label %return

return:                                           ; preds = %.entry
  %51 = load %string_descriptor, %string_descriptor* %concat_result, align 1
  ret %string_descriptor %51
}

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_string_init(i64, i8*)

declare i8* @_lfortran_str_slice_assign(i8*, i64, i8*, i64, i32, i32, i32, i1, i1)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0

define i32 @main(i32 %0, i8** %1) {
.entry:
  %string_ret_const4 = alloca %string_descriptor, align 8
  %string_ret_const3 = alloca %string_descriptor, align 8
  %string_ret_const2 = alloca %string_descriptor, align 8
  %string_ret_const1 = alloca %string_descriptor, align 8
  %string_ret_const = alloca %string_descriptor, align 8
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %2 = call i8* @_lfortran_malloc(i64 16)
  %combined = bitcast i8* %2 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %combined, align 1
  %3 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 1
  store i64 29, i64* %3, align 4
  %4 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 0
  %5 = call i8* @_lfortran_malloc(i64 30)
  call void @_lfortran_string_init(i64 30, i8* %5)
  store i8* %5, i8** %4, align 8
  %6 = call i8* @_lfortran_malloc(i64 16)
  %last_name = bitcast i8* %6 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %last_name, align 1
  %7 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 1
  store i64 7, i64* %7, align 4
  %8 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 0
  %9 = call i8* @_lfortran_malloc(i64 8)
  call void @_lfortran_string_init(i64 8, i8* %9)
  store i8* %9, i8** %8, align 8
  %10 = call i8* @_lfortran_malloc(i64 16)
  %posit = bitcast i8* %10 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %posit, align 1
  %11 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 1
  store i64 5, i64* %11, align 4
  %12 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 0
  %13 = call i8* @_lfortran_malloc(i64 6)
  call void @_lfortran_string_init(i64 6, i8* %13)
  store i8* %13, i8** %12, align 8
  %14 = call i8* @_lfortran_malloc(i64 16)
  %title = bitcast i8* %14 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %title, align 1
  %15 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 1
  store i64 4, i64* %15, align 4
  %16 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 0
  %17 = call i8* @_lfortran_malloc(i64 5)
  call void @_lfortran_string_init(i64 5, i8* %17)
  store i8* %17, i8** %16, align 8
  %18 = call i8* @_lfortran_malloc(i64 16)
  %verb = bitcast i8* %18 to %string_descriptor*
  store %string_descriptor zeroinitializer, %string_descriptor* %verb, align 1
  %19 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 1
  store i64 8, i64* %19, align 4
  %20 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 0
  %21 = call i8* @_lfortran_malloc(i64 9)
  call void @_lfortran_string_init(i64 9, i8* %21)
  store i8* %21, i8** %20, align 8
  %22 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 0
  %23 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 1
  %24 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %22, i64* %23, i8 0, i8 0, i8* %24, i64 8)
  %25 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 0
  %26 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 1
  %27 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %25, i64* %26, i8 0, i8 0, i8* %27, i64 5)
  %28 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 0
  %29 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 1
  %30 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %28, i64* %29, i8 0, i8 0, i8* %30, i64 4)
  %31 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 0
  %32 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 1
  %33 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %31, i64* %32, i8 0, i8 0, i8* %33, i64 4)
  %34 = call %string_descriptor @_lcompilers_stringconcat(%string_descriptor* @string_const.8, %string_descriptor* %verb)
  store %string_descriptor %34, %string_descriptor* %string_ret_const, align 1
  %35 = call %string_descriptor @_lcompilers_stringconcat(%string_descriptor* %string_ret_const, %string_descriptor* %posit)
  store %string_descriptor %35, %string_descriptor* %string_ret_const1, align 1
  %36 = call %string_descriptor @_lcompilers_stringconcat(%string_descriptor* %string_ret_const1, %string_descriptor* %title)
  store %string_descriptor %36, %string_descriptor* %string_ret_const2, align 1
  %37 = call %string_descriptor @_lcompilers_stringconcat(%string_descriptor* %string_ret_const2, %string_descriptor* %last_name)
  store %string_descriptor %37, %string_descriptor* %string_ret_const3, align 1
  %38 = call %string_descriptor @_lcompilers_stringconcat(%string_descriptor* %string_ret_const3, %string_descriptor* @string_const.10)
  store %string_descriptor %38, %string_descriptor* %string_ret_const4, align 1
  %39 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 0
  %40 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 1
  %41 = getelementptr %string_descriptor, %string_descriptor* %string_ret_const4, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr %string_descriptor, %string_descriptor* %string_ret_const4, i32 0, i32 1
  %44 = load i64, i64* %43, align 4
  call void @_lfortran_strcpy(i8** %39, i64* %40, i8 0, i8 0, i8* %42, i64 %44)
  %45 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %46, i32 29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lfortran_strcpy(i8**, i64*, i8, i8, i8*, i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()

attributes #0 = { argmemonly nounwind willreturn }
