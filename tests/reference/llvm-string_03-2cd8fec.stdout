; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [6 x i8] c"I've \00", align 1
@1 = private unnamed_addr constant [30 x i8] c"                             \00", align 1
@2 = private unnamed_addr constant [8 x i8] c"       \00", align 1
@3 = private unnamed_addr constant [6 x i8] c"     \00", align 1
@4 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@5 = private unnamed_addr constant [9 x i8] c"        \00", align 1
@6 = private unnamed_addr constant [9 x i8] c"learned \00", align 1
@7 = private unnamed_addr constant [6 x i8] c"from \00", align 1
@8 = private unnamed_addr constant [5 x i8] c"the \00", align 1
@9 = private unnamed_addr constant [5 x i8] c"best\00", align 1
@10 = private unnamed_addr constant [6 x i8] c"I've \00", align 1
@11 = private unnamed_addr constant [2 x i8] c".\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main() {
.entry:
  %combined = alloca i8*, align 8
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @1, i32 0, i32 0), i8** %combined, align 8
  %last_name = alloca i8*, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i32 0, i32 0), i8** %last_name, align 8
  %posit = alloca i8*, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0), i8** %posit, align 8
  %title = alloca i8*, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i32 0, i32 0), i8** %title, align 8
  %verb = alloca i8*, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @5, i32 0, i32 0), i8** %verb, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @6, i32 0, i32 0), i8** %verb, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @7, i32 0, i32 0), i8** %posit, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8** %title, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i32 0, i32 0), i8** %last_name, align 8
  %0 = load i8*, i8** %verb, align 8
  %1 = alloca i8*, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @10, i32 0, i32 0), i8** %1, align 8
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %1, i8** %2, i8** %3)
  %4 = load i8*, i8** %3, align 8
  %5 = load i8*, i8** %posit, align 8
  %6 = alloca i8*, align 8
  store i8* %4, i8** %6, align 8
  %7 = alloca i8*, align 8
  store i8* %5, i8** %7, align 8
  %8 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %6, i8** %7, i8** %8)
  %9 = load i8*, i8** %8, align 8
  %10 = load i8*, i8** %title, align 8
  %11 = alloca i8*, align 8
  store i8* %9, i8** %11, align 8
  %12 = alloca i8*, align 8
  store i8* %10, i8** %12, align 8
  %13 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %11, i8** %12, i8** %13)
  %14 = load i8*, i8** %13, align 8
  %15 = load i8*, i8** %last_name, align 8
  %16 = alloca i8*, align 8
  store i8* %14, i8** %16, align 8
  %17 = alloca i8*, align 8
  store i8* %15, i8** %17, align 8
  %18 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %16, i8** %17, i8** %18)
  %19 = load i8*, i8** %18, align 8
  %20 = alloca i8*, align 8
  store i8* %19, i8** %20, align 8
  %21 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8** %21, align 8
  %22 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %20, i8** %21, i8** %22)
  %23 = load i8*, i8** %22, align 8
  store i8* %23, i8** %combined, align 8
  %24 = load i8*, i8** %combined, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_strcat(i8**, i8**, i8**)

declare void @_lfortran_printf(i8*, ...)
