; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@string_const_data = private constant [8 x i8] c"learned "
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([8 x i8], [8 x i8]* @string_const_data, i32 0, i32 0), i64 8 }>
@string_const_data.1 = private constant [5 x i8] c"from "
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.1, i32 0, i32 0), i64 5 }>
@string_const_data.3 = private constant [4 x i8] c"the "
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([4 x i8], [4 x i8]* @string_const_data.3, i32 0, i32 0), i64 4 }>
@string_const_data.5 = private constant [4 x i8] c"best"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([4 x i8], [4 x i8]* @string_const_data.5, i32 0, i32 0), i64 4 }>
@__Wrong_allocation = private unnamed_addr constant [67 x i8] c"runtime error: Attempting to allocate already allocated variable!\0A\00", align 1
@string_const_data.7 = private constant [5 x i8] c"I've "
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([5 x i8], [5 x i8]* @string_const_data.7, i32 0, i32 0), i64 5 }>
@string_const_data.9 = private constant [1 x i8] c"."
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([1 x i8], [1 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define void @_lcompilers_stringconcat(%string_descriptor* %s1, %string_descriptor* %s2, %string_descriptor* %concat_result) {
.entry:
  %0 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 1
  %1 = load i64, i64* %0, align 4
  %2 = trunc i64 %1 to i32
  %3 = sext i32 %2 to i64
  %4 = sub i64 %3, 1
  %5 = add i64 %4, 1
  %6 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %StrSliceGEP = getelementptr i8, i8* %7, i64 0
  %StrSlice_StrView = alloca %string_descriptor, align 8
  %8 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView, i32 0, i32 0
  store i8* %StrSliceGEP, i8** %8, align 8
  %9 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView, i32 0, i32 1
  store i64 %5, i64* %9, align 4
  %10 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView, i32 0, i32 0
  %11 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView, i32 0, i32 1
  %12 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 1
  %15 = load i64, i64* %14, align 4
  call void @_lfortran_strcpy(i8** %10, i64* %11, i8 0, i8 0, i8* %13, i64 %15)
  %16 = getelementptr %string_descriptor, %string_descriptor* %s1, i32 0, i32 1
  %17 = load i64, i64* %16, align 4
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, 1
  %20 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 1
  %21 = load i64, i64* %20, align 4
  %22 = trunc i64 %21 to i32
  %23 = sext i32 %19 to i64
  %24 = sext i32 %22 to i64
  %25 = sub i64 %24, %23
  %26 = add i64 %25, 1
  %27 = getelementptr %string_descriptor, %string_descriptor* %concat_result, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = sext i32 %19 to i64
  %30 = sub i64 %29, 1
  %StrSliceGEP1 = getelementptr i8, i8* %28, i64 %30
  %StrSlice_StrView2 = alloca %string_descriptor, align 8
  %31 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView2, i32 0, i32 0
  store i8* %StrSliceGEP1, i8** %31, align 8
  %32 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView2, i32 0, i32 1
  store i64 %26, i64* %32, align 4
  %33 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView2, i32 0, i32 0
  %34 = getelementptr %string_descriptor, %string_descriptor* %StrSlice_StrView2, i32 0, i32 1
  %35 = getelementptr %string_descriptor, %string_descriptor* %s2, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr %string_descriptor, %string_descriptor* %s2, i32 0, i32 1
  %38 = load i64, i64* %37, align 4
  call void @_lfortran_strcpy(i8** %33, i64* %34, i8 0, i8 0, i8* %36, i64 %38)
  br label %return

return:                                           ; preds = %.entry
  ret void
}

declare void @_lfortran_strcpy(i8**, i64*, i8, i8, i8*, i64)

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %__libasr__created__var__0_return_slot = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %__libasr__created__var__0_return_slot, align 1
  %__libasr__created__var__1_return_slot = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %__libasr__created__var__1_return_slot, align 1
  %__libasr__created__var__2_return_slot = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %__libasr__created__var__2_return_slot, align 1
  %__libasr__created__var__3_return_slot = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %__libasr__created__var__3_return_slot, align 1
  %__libasr__created__var__4_return_slot = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %__libasr__created__var__4_return_slot, align 1
  %combined = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %combined, align 1
  %2 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 1
  store i64 29, i64* %2, align 4
  %3 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 0
  %4 = call i8* @_lfortran_malloc(i64 29)
  store i8* %4, i8** %3, align 8
  %last_name = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %last_name, align 1
  %5 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 1
  store i64 7, i64* %5, align 4
  %6 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 0
  %7 = call i8* @_lfortran_malloc(i64 7)
  store i8* %7, i8** %6, align 8
  %posit = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %posit, align 1
  %8 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 1
  store i64 5, i64* %8, align 4
  %9 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 0
  %10 = call i8* @_lfortran_malloc(i64 5)
  store i8* %10, i8** %9, align 8
  %title = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %title, align 1
  %11 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 1
  store i64 4, i64* %11, align 4
  %12 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 0
  %13 = call i8* @_lfortran_malloc(i64 4)
  store i8* %13, i8** %12, align 8
  %verb = alloca %string_descriptor, align 8
  store %string_descriptor zeroinitializer, %string_descriptor* %verb, align 1
  %14 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 1
  store i64 8, i64* %14, align 4
  %15 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 0
  %16 = call i8* @_lfortran_malloc(i64 8)
  store i8* %16, i8** %15, align 8
  %17 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 0
  %18 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 1
  %19 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %17, i64* %18, i8 0, i8 0, i8* %19, i64 8)
  %20 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 0
  %21 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 1
  %22 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %20, i64* %21, i8 0, i8 0, i8* %22, i64 5)
  %23 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 0
  %24 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 1
  %25 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %23, i64* %24, i8 0, i8 0, i8* %25, i64 4)
  %26 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 0
  %27 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 1
  %28 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void @_lfortran_strcpy(i8** %26, i64* %27, i8 0, i8 0, i8* %28, i64 4)
  %29 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__0_return_slot, i32 0, i32 0
  %30 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__0_return_slot, i32 0, i32 1
  %31 = load i8*, i8** %29, align 8
  call void @_lfortran_free(i8* %31)
  store i8* null, i8** %29, align 8
  store i64 0, i64* %30, align 4
  %32 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__0_return_slot, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__Wrong_allocation, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %35 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__0_return_slot, i32 0, i32 0
  %36 = call i8* @_lfortran_malloc(i64 13)
  store i8* %36, i8** %35, align 8
  %37 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__0_return_slot, i32 0, i32 1
  store i64 13, i64* %37, align 4
  call void @_lcompilers_stringconcat(%string_descriptor* @string_const.8, %string_descriptor* %verb, %string_descriptor* %__libasr__created__var__0_return_slot)
  %38 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__1_return_slot, i32 0, i32 0
  %39 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__1_return_slot, i32 0, i32 1
  %40 = load i8*, i8** %38, align 8
  call void @_lfortran_free(i8* %40)
  store i8* null, i8** %38, align 8
  store i64 0, i64* %39, align 4
  %41 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__0_return_slot, i32 0, i32 1
  %42 = load i64, i64* %41, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 5
  %45 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__1_return_slot, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__Wrong_allocation, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %48 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__1_return_slot, i32 0, i32 0
  %49 = sext i32 %44 to i64
  %50 = call i8* @_lfortran_string_malloc(i64 %49)
  store i8* %50, i8** %48, align 8
  %51 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__1_return_slot, i32 0, i32 1
  %52 = sext i32 %44 to i64
  store i64 %52, i64* %51, align 4
  call void @_lcompilers_stringconcat(%string_descriptor* %__libasr__created__var__0_return_slot, %string_descriptor* %posit, %string_descriptor* %__libasr__created__var__1_return_slot)
  %53 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__2_return_slot, i32 0, i32 0
  %54 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__2_return_slot, i32 0, i32 1
  %55 = load i8*, i8** %53, align 8
  call void @_lfortran_free(i8* %55)
  store i8* null, i8** %53, align 8
  store i64 0, i64* %54, align 4
  %56 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__1_return_slot, i32 0, i32 1
  %57 = load i64, i64* %56, align 4
  %58 = trunc i64 %57 to i32
  %59 = add i32 %58, 4
  %60 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__2_return_slot, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp ne i8* %61, null
  br i1 %62, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__Wrong_allocation, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %63 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__2_return_slot, i32 0, i32 0
  %64 = sext i32 %59 to i64
  %65 = call i8* @_lfortran_string_malloc(i64 %64)
  store i8* %65, i8** %63, align 8
  %66 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__2_return_slot, i32 0, i32 1
  %67 = sext i32 %59 to i64
  store i64 %67, i64* %66, align 4
  call void @_lcompilers_stringconcat(%string_descriptor* %__libasr__created__var__1_return_slot, %string_descriptor* %title, %string_descriptor* %__libasr__created__var__2_return_slot)
  %68 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__3_return_slot, i32 0, i32 0
  %69 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__3_return_slot, i32 0, i32 1
  %70 = load i8*, i8** %68, align 8
  call void @_lfortran_free(i8* %70)
  store i8* null, i8** %68, align 8
  store i64 0, i64* %69, align 4
  %71 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__2_return_slot, i32 0, i32 1
  %72 = load i64, i64* %71, align 4
  %73 = trunc i64 %72 to i32
  %74 = add i32 %73, 7
  %75 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__3_return_slot, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp ne i8* %76, null
  br i1 %77, label %then7, label %else8

then7:                                            ; preds = %ifcont6
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__Wrong_allocation, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont9

else8:                                            ; preds = %ifcont6
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %78 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__3_return_slot, i32 0, i32 0
  %79 = sext i32 %74 to i64
  %80 = call i8* @_lfortran_string_malloc(i64 %79)
  store i8* %80, i8** %78, align 8
  %81 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__3_return_slot, i32 0, i32 1
  %82 = sext i32 %74 to i64
  store i64 %82, i64* %81, align 4
  call void @_lcompilers_stringconcat(%string_descriptor* %__libasr__created__var__2_return_slot, %string_descriptor* %last_name, %string_descriptor* %__libasr__created__var__3_return_slot)
  %83 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 0
  %84 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 1
  %85 = load i8*, i8** %83, align 8
  call void @_lfortran_free(i8* %85)
  store i8* null, i8** %83, align 8
  store i64 0, i64* %84, align 4
  %86 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__3_return_slot, i32 0, i32 1
  %87 = load i64, i64* %86, align 4
  %88 = trunc i64 %87 to i32
  %89 = add i32 %88, 1
  %90 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__Wrong_allocation, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %ifcont9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %93 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 0
  %94 = sext i32 %89 to i64
  %95 = call i8* @_lfortran_string_malloc(i64 %94)
  store i8* %95, i8** %93, align 8
  %96 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 1
  %97 = sext i32 %89 to i64
  store i64 %97, i64* %96, align 4
  call void @_lcompilers_stringconcat(%string_descriptor* %__libasr__created__var__3_return_slot, %string_descriptor* @string_const.10, %string_descriptor* %__libasr__created__var__4_return_slot)
  %98 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 0
  %99 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 1
  %100 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 1
  %103 = load i64, i64* %102, align 4
  call void @_lfortran_strcpy(i8** %98, i64* %99, i8 0, i8 0, i8* %101, i64 %103)
  %104 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %105, i32 29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont12
  %106 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__0_return_slot, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_lfortran_free(i8* %107)
  %108 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__1_return_slot, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_lfortran_free(i8* %109)
  %110 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__2_return_slot, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  call void @_lfortran_free(i8* %111)
  %112 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__3_return_slot, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_lfortran_free(i8* %113)
  %114 = getelementptr %string_descriptor, %string_descriptor* %__libasr__created__var__4_return_slot, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void @_lfortran_free(i8* %115)
  %116 = getelementptr %string_descriptor, %string_descriptor* %combined, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_lfortran_free(i8* %117)
  %118 = getelementptr %string_descriptor, %string_descriptor* %last_name, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @_lfortran_free(i8* %119)
  %120 = getelementptr %string_descriptor, %string_descriptor* %posit, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_lfortran_free(i8* %121)
  %122 = getelementptr %string_descriptor, %string_descriptor* %title, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_lfortran_free(i8* %123)
  %124 = getelementptr %string_descriptor, %string_descriptor* %verb, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  call void @_lfortran_free(i8* %125)
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lfortran_malloc(i64)

declare void @_lfortran_free(i8*)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare i8* @_lfortran_string_malloc(i64)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare void @_lpython_free_argv()
