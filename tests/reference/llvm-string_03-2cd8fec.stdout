; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [9 x i8] c"learned \00", align 1
@1 = private unnamed_addr constant [6 x i8] c"from \00", align 1
@2 = private unnamed_addr constant [5 x i8] c"the \00", align 1
@3 = private unnamed_addr constant [5 x i8] c"best\00", align 1
@4 = private unnamed_addr constant [6 x i8] c"I've \00", align 1
@5 = private unnamed_addr constant [2 x i8] c".\00", align 1
@6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %combined = alloca i8*, align 8
  %2 = call i8* (i32, ...) @_lfortran_malloc(i32 30)
  call void (i32, i8*, ...) @_lfortran_string_init(i32 30, i8* %2)
  store i8* %2, i8** %combined, align 8
  %3 = load i8*, i8** %combined, align 8
  %last_name = alloca i8*, align 8
  %4 = call i8* (i32, ...) @_lfortran_malloc(i32 8)
  call void (i32, i8*, ...) @_lfortran_string_init(i32 8, i8* %4)
  store i8* %4, i8** %last_name, align 8
  %5 = load i8*, i8** %last_name, align 8
  %posit = alloca i8*, align 8
  %6 = call i8* (i32, ...) @_lfortran_malloc(i32 6)
  call void (i32, i8*, ...) @_lfortran_string_init(i32 6, i8* %6)
  store i8* %6, i8** %posit, align 8
  %7 = load i8*, i8** %posit, align 8
  %title = alloca i8*, align 8
  %8 = call i8* (i32, ...) @_lfortran_malloc(i32 5)
  call void (i32, i8*, ...) @_lfortran_string_init(i32 5, i8* %8)
  store i8* %8, i8** %title, align 8
  %9 = load i8*, i8** %title, align 8
  %verb = alloca i8*, align 8
  %10 = call i8* (i32, ...) @_lfortran_malloc(i32 9)
  call void (i32, i8*, ...) @_lfortran_string_init(i32 9, i8* %10)
  store i8* %10, i8** %verb, align 8
  %11 = load i8*, i8** %verb, align 8
  call void @_lfortran_strcpy(i8** %verb, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @0, i32 0, i32 0), i8 0)
  call void @_lfortran_strcpy(i8** %posit, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0), i8 0)
  call void @_lfortran_strcpy(i8** %title, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i8 0)
  call void @_lfortran_strcpy(i8** %last_name, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8 0)
  %12 = load i8*, i8** %verb, align 8
  %13 = alloca i8*, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i32 0, i32 0), i8** %13, align 8
  %14 = alloca i8*, align 8
  store i8* %12, i8** %14, align 8
  %15 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %13, i8** %14, i8** %15)
  %16 = load i8*, i8** %15, align 8
  %17 = load i8*, i8** %15, align 8
  %18 = load i8*, i8** %posit, align 8
  %19 = alloca i8*, align 8
  store i8* %17, i8** %19, align 8
  %20 = alloca i8*, align 8
  store i8* %18, i8** %20, align 8
  %21 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %19, i8** %20, i8** %21)
  %22 = load i8*, i8** %21, align 8
  %23 = load i8*, i8** %21, align 8
  %24 = load i8*, i8** %title, align 8
  %25 = alloca i8*, align 8
  store i8* %23, i8** %25, align 8
  %26 = alloca i8*, align 8
  store i8* %24, i8** %26, align 8
  %27 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %25, i8** %26, i8** %27)
  %28 = load i8*, i8** %27, align 8
  %29 = load i8*, i8** %27, align 8
  %30 = load i8*, i8** %last_name, align 8
  %31 = alloca i8*, align 8
  store i8* %29, i8** %31, align 8
  %32 = alloca i8*, align 8
  store i8* %30, i8** %32, align 8
  %33 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %31, i8** %32, i8** %33)
  %34 = load i8*, i8** %33, align 8
  %35 = load i8*, i8** %33, align 8
  %36 = alloca i8*, align 8
  store i8* %35, i8** %36, align 8
  %37 = alloca i8*, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8** %37, align 8
  %38 = alloca i8*, align 8
  call void @_lfortran_strcat(i8** %36, i8** %37, i8** %38)
  %39 = load i8*, i8** %38, align 8
  %40 = load i8*, i8** %38, align 8
  store i8* %40, i8** %combined, align 8
  %41 = load i8*, i8** %combined, align 8
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_free(i8* %3)
  call void (i8*, ...) @_lfortran_free(i8* %5)
  call void (i8*, ...) @_lfortran_free(i8* %7)
  call void (i8*, ...) @_lfortran_free(i8* %9)
  call void (i8*, ...) @_lfortran_free(i8* %11)
  call void (i8*, ...) @_lfortran_free(i8* %16)
  call void (i8*, ...) @_lfortran_free(i8* %22)
  call void (i8*, ...) @_lfortran_free(i8* %28)
  call void (i8*, ...) @_lfortran_free(i8* %34)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_string_init(i32, i8*, ...)

declare void @_lfortran_strcpy(i8**, i8*, i8)

declare void @_lfortran_strcat(i8**, i8**, i8**)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
