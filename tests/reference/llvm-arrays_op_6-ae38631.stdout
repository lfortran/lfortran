; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { float*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @asquare_a_b_c(float* %a, i32* %__1a, i32* %__2a, i32* %__3a, i32* %__4a, i32* %__5a, i32* %__6a, float* %b, i32* %__1b, i32* %__2b, i32* %__3b, i32* %__4b, i32* %__5b, i32* %__6b, float* %c, i32* %__1c, i32* %__2c, i32* %__3c, i32* %__4c, i32* %__5c, i32* %__6c, float* %d) {
.entry:
  %__1_t = alloca i32, align 4
  %__1_v = alloca i32, align 4
  %__2_t = alloca i32, align 4
  %__2_v = alloca i32, align 4
  %__3_t = alloca i32, align 4
  %__3_v = alloca i32, align 4
  %"~0_real_bin_op_res" = alloca %array, align 8
  %0 = load i32, i32* %__1a, align 4
  %1 = load i32, i32* %__2a, align 4
  %2 = load i32, i32* %__1a, align 4
  %3 = add i32 %1, %2
  %4 = sub i32 %3, 1
  %5 = load i32, i32* %__1a, align 4
  %6 = sub i32 %4, %5
  %7 = add i32 %6, 1
  %8 = load i32, i32* %__3a, align 4
  %9 = load i32, i32* %__4a, align 4
  %10 = load i32, i32* %__3a, align 4
  %11 = add i32 %9, %10
  %12 = sub i32 %11, 1
  %13 = load i32, i32* %__3a, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  %16 = load i32, i32* %__5a, align 4
  %17 = load i32, i32* %__6a, align 4
  %18 = load i32, i32* %__5a, align 4
  %19 = add i32 %17, %18
  %20 = sub i32 %19, 1
  %21 = load i32, i32* %__5a, align 4
  %22 = sub i32 %20, %21
  %23 = add i32 %22, 1
  %24 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 1
  store i32 0, i32* %24, align 4
  %25 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %26 = alloca i32, align 4
  store i32 3, i32* %26, align 4
  %27 = load i32, i32* %26, align 4
  %28 = alloca %dimension_descriptor, i32 %27, align 8
  %29 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 4
  store i32 3, i32* %29, align 4
  store %dimension_descriptor* %28, %dimension_descriptor** %25, align 8
  %30 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  %31 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %30, i32 0
  %32 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 1
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %31, i32 0, i32 2
  store i32 1, i32* %32, align 4
  store i32 %0, i32* %33, align 4
  store i32 %7, i32* %34, align 4
  %35 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %30, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 1
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 2
  store i32 1, i32* %36, align 4
  store i32 %8, i32* %37, align 4
  store i32 %15, i32* %38, align 4
  %39 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %30, i32 2
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %39, i32 0, i32 2
  store i32 1, i32* %40, align 4
  store i32 %16, i32* %41, align 4
  store i32 %23, i32* %42, align 4
  %43 = alloca i32, align 4
  %44 = mul i32 1, %7
  %45 = mul i32 %44, %15
  %46 = mul i32 %45, %23
  store i32 %46, i32* %43, align 4
  %47 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 0
  %48 = load i32, i32* %43, align 4
  %49 = alloca float, i32 %48, align 4
  store float* %49, float** %47, align 8
  %50 = load i32, i32* %__1b, align 4
  store i32 %50, i32* %__1_v, align 4
  %51 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 %55, 1
  store i32 %56, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %57 = load i32, i32* %__1_t, align 4
  %58 = add i32 %57, 1
  %59 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %60 = load %dimension_descriptor*, %dimension_descriptor** %59, align 8
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %60, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = add i32 %65, %63
  %67 = sub i32 %66, 1
  %68 = icmp sle i32 %58, %67
  br i1 %68, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %69 = load i32, i32* %__1_t, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %__1_t, align 4
  %71 = load i32, i32* %__1a, align 4
  store i32 %71, i32* %__2_v, align 4
  %72 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %73 = load %dimension_descriptor*, %dimension_descriptor** %72, align 8
  %74 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %73, i32 1
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %76, 1
  store i32 %77, i32* %__2_t, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %78 = load i32, i32* %__2_t, align 4
  %79 = add i32 %78, 1
  %80 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %81 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %81, i32 1
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, %84
  %88 = sub i32 %87, 1
  %89 = icmp sle i32 %79, %88
  br i1 %89, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %90 = load i32, i32* %__2_t, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %__2_t, align 4
  %92 = load i32, i32* %__3a, align 4
  store i32 %92, i32* %__3_v, align 4
  %93 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %94 = load %dimension_descriptor*, %dimension_descriptor** %93, align 8
  %95 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %94, i32 2
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 %97, 1
  store i32 %98, i32* %__3_t, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %99 = load i32, i32* %__3_t, align 4
  %100 = add i32 %99, 1
  %101 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %102 = load %dimension_descriptor*, %dimension_descriptor** %101, align 8
  %103 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %102, i32 2
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr %dimension_descriptor, %dimension_descriptor* %103, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, %105
  %109 = sub i32 %108, 1
  %110 = icmp sle i32 %100, %109
  br i1 %110, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %111 = load i32, i32* %__3_t, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %__3_t, align 4
  %113 = load i32, i32* %__1_t, align 4
  %114 = load i32, i32* %__2_t, align 4
  %115 = load i32, i32* %__3_t, align 4
  %116 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %117 = load %dimension_descriptor*, %dimension_descriptor** %116, align 8
  %118 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sub i32 %113, %120
  %122 = mul i32 1, %121
  %123 = add i32 0, %122
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 1, %125
  %127 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 1
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = sub i32 %114, %129
  %131 = mul i32 %126, %130
  %132 = add i32 %123, %131
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %127, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = mul i32 %126, %134
  %136 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %117, i32 2
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 %115, %138
  %140 = mul i32 %135, %139
  %141 = add i32 %132, %140
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 %135, %143
  %145 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 0
  %146 = load float*, float** %145, align 8
  %147 = getelementptr inbounds float, float* %146, i32 %141
  %148 = load i32, i32* %__1_v, align 4
  %149 = load i32, i32* %__2_v, align 4
  %150 = load i32, i32* %__3_v, align 4
  %151 = load i32, i32* %__1a, align 4
  %152 = load i32, i32* %__2a, align 4
  %153 = load i32, i32* %__3a, align 4
  %154 = load i32, i32* %__4a, align 4
  %155 = load i32, i32* %__5a, align 4
  %156 = load i32, i32* %__6a, align 4
  %157 = sub i32 %148, %151
  %158 = mul i32 1, %157
  %159 = add i32 0, %158
  %160 = mul i32 1, %152
  %161 = sub i32 %149, %153
  %162 = mul i32 %160, %161
  %163 = add i32 %159, %162
  %164 = mul i32 %160, %154
  %165 = sub i32 %150, %155
  %166 = mul i32 %164, %165
  %167 = add i32 %163, %166
  %168 = mul i32 %164, %156
  %169 = getelementptr inbounds float, float* %a, i32 %167
  %170 = load float, float* %169, align 4
  %171 = load i32, i32* %__1_v, align 4
  %172 = load i32, i32* %__2_v, align 4
  %173 = load i32, i32* %__3_v, align 4
  %174 = load i32, i32* %__1b, align 4
  %175 = load i32, i32* %__2b, align 4
  %176 = load i32, i32* %__3b, align 4
  %177 = load i32, i32* %__4b, align 4
  %178 = load i32, i32* %__5b, align 4
  %179 = load i32, i32* %__6b, align 4
  %180 = sub i32 %171, %174
  %181 = mul i32 1, %180
  %182 = add i32 0, %181
  %183 = mul i32 1, %175
  %184 = sub i32 %172, %176
  %185 = mul i32 %183, %184
  %186 = add i32 %182, %185
  %187 = mul i32 %183, %177
  %188 = sub i32 %173, %178
  %189 = mul i32 %187, %188
  %190 = add i32 %186, %189
  %191 = mul i32 %187, %179
  %192 = getelementptr inbounds float, float* %b, i32 %190
  %193 = load float, float* %192, align 4
  %194 = fadd float %170, %193
  store float %194, float* %147, align 4
  %195 = load i32, i32* %__3_v, align 4
  %196 = add i32 %195, 1
  store i32 %196, i32* %__3_v, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  %197 = load i32, i32* %__2_v, align 4
  %198 = add i32 %197, 1
  store i32 %198, i32* %__2_v, align 4
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  %199 = load i32, i32* %__1_v, align 4
  %200 = add i32 %199, 1
  store i32 %200, i32* %__1_v, align 4
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %201 = load i32, i32* %__1c, align 4
  store i32 %201, i32* %__1_v, align 4
  store i32 0, i32* %__1_t, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %202 = load i32, i32* %__1_t, align 4
  %203 = add i32 %202, 1
  %204 = icmp sle i32 %203, 2
  br i1 %204, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %205 = load i32, i32* %__1_t, align 4
  %206 = add i32 %205, 1
  store i32 %206, i32* %__1_t, align 4
  %207 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %208 = load %dimension_descriptor*, %dimension_descriptor** %207, align 8
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %208, i32 0
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  store i32 %211, i32* %__2_v, align 4
  store i32 0, i32* %__2_t, align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %212 = load i32, i32* %__2_t, align 4
  %213 = add i32 %212, 1
  %214 = icmp sle i32 %213, 2
  br i1 %214, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %215 = load i32, i32* %__2_t, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %__2_t, align 4
  %217 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %218 = load %dimension_descriptor*, %dimension_descriptor** %217, align 8
  %219 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %218, i32 1
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %219, i32 0, i32 1
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %__3_v, align 4
  store i32 0, i32* %__3_t, align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %222 = load i32, i32* %__3_t, align 4
  %223 = add i32 %222, 1
  %224 = icmp sle i32 %223, 2
  br i1 %224, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %225 = load i32, i32* %__3_t, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %__3_t, align 4
  %227 = load i32, i32* %__1_t, align 4
  %228 = load i32, i32* %__2_t, align 4
  %229 = load i32, i32* %__3_t, align 4
  %230 = sub i32 %227, 1
  %231 = mul i32 1, %230
  %232 = add i32 0, %231
  %233 = sub i32 %228, 1
  %234 = mul i32 2, %233
  %235 = add i32 %232, %234
  %236 = sub i32 %229, 1
  %237 = mul i32 4, %236
  %238 = add i32 %235, %237
  %239 = getelementptr inbounds float, float* %d, i32 %238
  %240 = load i32, i32* %__1_v, align 4
  %241 = load i32, i32* %__2_v, align 4
  %242 = load i32, i32* %__3_v, align 4
  %243 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 2
  %244 = load %dimension_descriptor*, %dimension_descriptor** %243, align 8
  %245 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %244, i32 0
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %245, i32 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = sub i32 %240, %247
  %249 = mul i32 1, %248
  %250 = add i32 0, %249
  %251 = getelementptr %dimension_descriptor, %dimension_descriptor* %245, i32 0, i32 2
  %252 = load i32, i32* %251, align 4
  %253 = mul i32 1, %252
  %254 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %244, i32 1
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %254, i32 0, i32 1
  %256 = load i32, i32* %255, align 4
  %257 = sub i32 %241, %256
  %258 = mul i32 %253, %257
  %259 = add i32 %250, %258
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %254, i32 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = mul i32 %253, %261
  %263 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %244, i32 2
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = sub i32 %242, %265
  %267 = mul i32 %262, %266
  %268 = add i32 %259, %267
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 2
  %270 = load i32, i32* %269, align 4
  %271 = mul i32 %262, %270
  %272 = getelementptr %array, %array* %"~0_real_bin_op_res", i32 0, i32 0
  %273 = load float*, float** %272, align 8
  %274 = getelementptr inbounds float, float* %273, i32 %268
  %275 = load float, float* %274, align 4
  %276 = load i32, i32* %__1_v, align 4
  %277 = load i32, i32* %__2_v, align 4
  %278 = load i32, i32* %__3_v, align 4
  %279 = load i32, i32* %__1c, align 4
  %280 = load i32, i32* %__2c, align 4
  %281 = load i32, i32* %__3c, align 4
  %282 = load i32, i32* %__4c, align 4
  %283 = load i32, i32* %__5c, align 4
  %284 = load i32, i32* %__6c, align 4
  %285 = sub i32 %276, %279
  %286 = mul i32 1, %285
  %287 = add i32 0, %286
  %288 = mul i32 1, %280
  %289 = sub i32 %277, %281
  %290 = mul i32 %288, %289
  %291 = add i32 %287, %290
  %292 = mul i32 %288, %282
  %293 = sub i32 %278, %283
  %294 = mul i32 %292, %293
  %295 = add i32 %291, %294
  %296 = mul i32 %292, %284
  %297 = getelementptr inbounds float, float* %c, i32 %295
  %298 = load float, float* %297, align 4
  %299 = fadd float %275, %298
  store float %299, float* %239, align 4
  %300 = load i32, i32* %__3_v, align 4
  %301 = add i32 %300, 1
  store i32 %301, i32* %__3_v, align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  %302 = load i32, i32* %__2_v, align 4
  %303 = add i32 %302, 1
  store i32 %303, i32* %__2_v, align 4
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  %304 = load i32, i32* %__1_v, align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %__1_v, align 4
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  br label %return

return:                                           ; preds = %loop.end15
  ret void
}

define void @check_c(float* %c, i32* %__1c, i32* %__2c, i32* %__3c, i32* %__4c, i32* %__5c, i32* %__6c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = load i32, i32* %__1c, align 4
  %1 = sub i32 %0, 1
  store i32 %1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %2 = load i32, i32* %i, align 4
  %3 = add i32 %2, 1
  %4 = load i32, i32* %__2c, align 4
  %5 = load i32, i32* %__1c, align 4
  %6 = add i32 %4, %5
  %7 = sub i32 %6, 1
  %8 = icmp sle i32 %3, %7
  br i1 %8, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %9 = load i32, i32* %i, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %i, align 4
  %11 = load i32, i32* %__3c, align 4
  %12 = sub i32 %11, 1
  store i32 %12, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %13 = load i32, i32* %j, align 4
  %14 = add i32 %13, 1
  %15 = load i32, i32* %__4c, align 4
  %16 = load i32, i32* %__3c, align 4
  %17 = add i32 %15, %16
  %18 = sub i32 %17, 1
  %19 = icmp sle i32 %14, %18
  br i1 %19, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %20 = load i32, i32* %j, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %j, align 4
  %22 = load i32, i32* %__5c, align 4
  %23 = sub i32 %22, 1
  store i32 %23, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont, %loop.body2
  %24 = load i32, i32* %k, align 4
  %25 = add i32 %24, 1
  %26 = load i32, i32* %__6c, align 4
  %27 = load i32, i32* %__5c, align 4
  %28 = add i32 %26, %27
  %29 = sub i32 %28, 1
  %30 = icmp sle i32 %25, %29
  br i1 %30, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %31 = load i32, i32* %k, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %k, align 4
  %33 = load i32, i32* %i, align 4
  %34 = load i32, i32* %j, align 4
  %35 = load i32, i32* %k, align 4
  %36 = load i32, i32* %__1c, align 4
  %37 = load i32, i32* %__2c, align 4
  %38 = load i32, i32* %__3c, align 4
  %39 = load i32, i32* %__4c, align 4
  %40 = load i32, i32* %__5c, align 4
  %41 = load i32, i32* %__6c, align 4
  %42 = sub i32 %33, %36
  %43 = mul i32 1, %42
  %44 = add i32 0, %43
  %45 = mul i32 1, %37
  %46 = sub i32 %34, %38
  %47 = mul i32 %45, %46
  %48 = add i32 %44, %47
  %49 = mul i32 %45, %39
  %50 = sub i32 %35, %40
  %51 = mul i32 %49, %50
  %52 = add i32 %48, %51
  %53 = mul i32 %49, %41
  %54 = getelementptr inbounds float, float* %c, i32 %52
  %55 = load float, float* %54, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load i32, i32* %j, align 4
  %58 = add i32 %56, %57
  %59 = load i32, i32* %k, align 4
  %60 = add i32 %58, %59
  %61 = sitofp i32 %60 to float
  %62 = call float @llvm.pow.f32(float %61, float 2.000000e+00)
  %63 = fptosi float %62 to i32
  %64 = sitofp i32 %63 to float
  %65 = fcmp une float %55, %64
  br i1 %65, label %then, label %else

then:                                             ; preds = %loop.body4
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #0

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value29 = alloca i32, align 4
  %call_arg_value28 = alloca i32, align 4
  %call_arg_value27 = alloca i32, align 4
  %call_arg_value26 = alloca i32, align 4
  %call_arg_value25 = alloca i32, align 4
  %call_arg_value24 = alloca i32, align 4
  %call_arg_value23 = alloca i32, align 4
  %call_arg_value22 = alloca i32, align 4
  %call_arg_value21 = alloca i32, align 4
  %call_arg_value20 = alloca i32, align 4
  %call_arg_value19 = alloca i32, align 4
  %call_arg_value18 = alloca i32, align 4
  %call_arg_value17 = alloca i32, align 4
  %call_arg_value16 = alloca i32, align 4
  %call_arg_value15 = alloca i32, align 4
  %call_arg_value14 = alloca i32, align 4
  %call_arg_value13 = alloca i32, align 4
  %call_arg_value12 = alloca i32, align 4
  %call_arg_value11 = alloca i32, align 4
  %call_arg_value10 = alloca i32, align 4
  %call_arg_value9 = alloca i32, align 4
  %call_arg_value8 = alloca i32, align 4
  %call_arg_value7 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %a = alloca %array, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array, %array* %a, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 3, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 4
  store i32 3, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 2, i32* %12, align 4
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  store i32 1, i32* %14, align 4
  store i32 1, i32* %15, align 4
  store i32 2, i32* %16, align 4
  %17 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 2
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  store i32 1, i32* %18, align 4
  store i32 1, i32* %19, align 4
  store i32 2, i32* %20, align 4
  %21 = alloca i32, align 4
  store i32 8, i32* %21, align 4
  %22 = getelementptr %array, %array* %a, i32 0, i32 0
  %23 = load i32, i32* %21, align 4
  %24 = alloca float, i32 %23, align 4
  store float* %24, float** %22, align 8
  %b = alloca %array, align 8
  %25 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %25, align 4
  %26 = getelementptr %array, %array* %b, i32 0, i32 2
  %27 = alloca i32, align 4
  store i32 3, i32* %27, align 4
  %28 = load i32, i32* %27, align 4
  %29 = alloca %dimension_descriptor, i32 %28, align 8
  %30 = getelementptr %array, %array* %b, i32 0, i32 4
  store i32 3, i32* %30, align 4
  store %dimension_descriptor* %29, %dimension_descriptor** %26, align 8
  %31 = load %dimension_descriptor*, %dimension_descriptor** %26, align 8
  %32 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  store i32 1, i32* %33, align 4
  store i32 1, i32* %34, align 4
  store i32 2, i32* %35, align 4
  %36 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 1
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 0
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 1
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 2
  store i32 1, i32* %37, align 4
  store i32 1, i32* %38, align 4
  store i32 2, i32* %39, align 4
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 2
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  store i32 1, i32* %41, align 4
  store i32 1, i32* %42, align 4
  store i32 2, i32* %43, align 4
  %44 = alloca i32, align 4
  store i32 8, i32* %44, align 4
  %45 = getelementptr %array, %array* %b, i32 0, i32 0
  %46 = load i32, i32* %44, align 4
  %47 = alloca float, i32 %46, align 4
  store float* %47, float** %45, align 8
  %c = alloca %array, align 8
  %48 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %48, align 4
  %49 = getelementptr %array, %array* %c, i32 0, i32 2
  %50 = alloca i32, align 4
  store i32 3, i32* %50, align 4
  %51 = load i32, i32* %50, align 4
  %52 = alloca %dimension_descriptor, i32 %51, align 8
  %53 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 3, i32* %53, align 4
  store %dimension_descriptor* %52, %dimension_descriptor** %49, align 8
  %54 = load %dimension_descriptor*, %dimension_descriptor** %49, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 0
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 2
  store i32 1, i32* %56, align 4
  store i32 1, i32* %57, align 4
  store i32 2, i32* %58, align 4
  %59 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 1
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 0
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 1
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %59, i32 0, i32 2
  store i32 1, i32* %60, align 4
  store i32 1, i32* %61, align 4
  store i32 2, i32* %62, align 4
  %63 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 2
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 1
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 2
  store i32 1, i32* %64, align 4
  store i32 1, i32* %65, align 4
  store i32 2, i32* %66, align 4
  %67 = alloca i32, align 4
  store i32 8, i32* %67, align 4
  %68 = getelementptr %array, %array* %c, i32 0, i32 0
  %69 = load i32, i32* %67, align 4
  %70 = alloca float, i32 %69, align 4
  store float* %70, float** %68, align 8
  %d = alloca %array, align 8
  %71 = getelementptr %array, %array* %d, i32 0, i32 1
  store i32 0, i32* %71, align 4
  %72 = getelementptr %array, %array* %d, i32 0, i32 2
  %73 = alloca i32, align 4
  store i32 3, i32* %73, align 4
  %74 = load i32, i32* %73, align 4
  %75 = alloca %dimension_descriptor, i32 %74, align 8
  %76 = getelementptr %array, %array* %d, i32 0, i32 4
  store i32 3, i32* %76, align 4
  store %dimension_descriptor* %75, %dimension_descriptor** %72, align 8
  %77 = load %dimension_descriptor*, %dimension_descriptor** %72, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 2, i32* %81, align 4
  %82 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 1
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 0
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 2
  store i32 1, i32* %83, align 4
  store i32 1, i32* %84, align 4
  store i32 2, i32* %85, align 4
  %86 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 2
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 0
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 2
  store i32 1, i32* %87, align 4
  store i32 1, i32* %88, align 4
  store i32 2, i32* %89, align 4
  %90 = alloca i32, align 4
  store i32 8, i32* %90, align 4
  %91 = getelementptr %array, %array* %d, i32 0, i32 0
  %92 = load i32, i32* %90, align 4
  %93 = alloca float, i32 %92, align 4
  store float* %93, float** %91, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %94 = load i32, i32* %i, align 4
  %95 = add i32 %94, 1
  %96 = icmp sle i32 %95, 2
  br i1 %96, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %97 = load i32, i32* %i, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %99 = load i32, i32* %j, align 4
  %100 = add i32 %99, 1
  %101 = icmp sle i32 %100, 2
  br i1 %101, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %102 = load i32, i32* %j, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %104 = load i32, i32* %k, align 4
  %105 = add i32 %104, 1
  %106 = icmp sle i32 %105, 2
  br i1 %106, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %107 = load i32, i32* %k, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %k, align 4
  %109 = load i32, i32* %i, align 4
  %110 = load i32, i32* %j, align 4
  %111 = load i32, i32* %k, align 4
  %112 = getelementptr %array, %array* %a, i32 0, i32 2
  %113 = load %dimension_descriptor*, %dimension_descriptor** %112, align 8
  %114 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = sub i32 %109, %116
  %118 = mul i32 1, %117
  %119 = add i32 0, %118
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = mul i32 1, %121
  %123 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 1
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %110, %125
  %127 = mul i32 %122, %126
  %128 = add i32 %119, %127
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = mul i32 %122, %130
  %132 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %113, i32 2
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = sub i32 %111, %134
  %136 = mul i32 %131, %135
  %137 = add i32 %128, %136
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %132, i32 0, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = mul i32 %131, %139
  %141 = getelementptr %array, %array* %a, i32 0, i32 0
  %142 = load float*, float** %141, align 8
  %143 = getelementptr inbounds float, float* %142, i32 %137
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %i, align 4
  %146 = mul i32 %144, %145
  %147 = load i32, i32* %j, align 4
  %148 = load i32, i32* %j, align 4
  %149 = mul i32 %147, %148
  %150 = add i32 %146, %149
  %151 = load i32, i32* %k, align 4
  %152 = load i32, i32* %k, align 4
  %153 = mul i32 %151, %152
  %154 = add i32 %150, %153
  %155 = sitofp i32 %154 to float
  store float %155, float* %143, align 4
  %156 = load i32, i32* %i, align 4
  %157 = load i32, i32* %j, align 4
  %158 = load i32, i32* %k, align 4
  %159 = getelementptr %array, %array* %b, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159, align 8
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = sub i32 %156, %163
  %165 = mul i32 1, %164
  %166 = add i32 0, %165
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = mul i32 1, %168
  %170 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 1
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %157, %172
  %174 = mul i32 %169, %173
  %175 = add i32 %166, %174
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = mul i32 %169, %177
  %179 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 2
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = sub i32 %158, %181
  %183 = mul i32 %178, %182
  %184 = add i32 %175, %183
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %179, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = mul i32 %178, %186
  %188 = getelementptr %array, %array* %b, i32 0, i32 0
  %189 = load float*, float** %188, align 8
  %190 = getelementptr inbounds float, float* %189, i32 %184
  %191 = load i32, i32* %i, align 4
  %192 = load i32, i32* %j, align 4
  %193 = mul i32 %191, %192
  %194 = load i32, i32* %j, align 4
  %195 = load i32, i32* %k, align 4
  %196 = mul i32 %194, %195
  %197 = add i32 %193, %196
  %198 = load i32, i32* %i, align 4
  %199 = load i32, i32* %k, align 4
  %200 = mul i32 %198, %199
  %201 = add i32 %197, %200
  %202 = mul i32 2, %201
  %203 = sitofp i32 %202 to float
  store float %203, float* %190, align 4
  %204 = load i32, i32* %i, align 4
  %205 = load i32, i32* %j, align 4
  %206 = load i32, i32* %k, align 4
  %207 = getelementptr %array, %array* %c, i32 0, i32 2
  %208 = load %dimension_descriptor*, %dimension_descriptor** %207, align 8
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %208, i32 0
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %204, %211
  %213 = mul i32 1, %212
  %214 = add i32 0, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 1, %216
  %218 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %208, i32 1
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %205, %220
  %222 = mul i32 %217, %221
  %223 = add i32 %214, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 2
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 %217, %225
  %227 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %208, i32 2
  %228 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = sub i32 %206, %229
  %231 = mul i32 %226, %230
  %232 = add i32 %223, %231
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %227, i32 0, i32 2
  %234 = load i32, i32* %233, align 4
  %235 = mul i32 %226, %234
  %236 = getelementptr %array, %array* %c, i32 0, i32 0
  %237 = load float*, float** %236, align 8
  %238 = getelementptr inbounds float, float* %237, i32 %232
  store float 0.000000e+00, float* %238, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %239 = getelementptr %array, %array* %a, i32 0, i32 0
  %240 = load float*, float** %239, align 8
  store i32 1, i32* %call_arg_value, align 4
  store i32 2, i32* %call_arg_value7, align 4
  store i32 1, i32* %call_arg_value8, align 4
  store i32 2, i32* %call_arg_value9, align 4
  store i32 1, i32* %call_arg_value10, align 4
  store i32 2, i32* %call_arg_value11, align 4
  %241 = getelementptr %array, %array* %b, i32 0, i32 0
  %242 = load float*, float** %241, align 8
  store i32 1, i32* %call_arg_value12, align 4
  store i32 2, i32* %call_arg_value13, align 4
  store i32 1, i32* %call_arg_value14, align 4
  store i32 2, i32* %call_arg_value15, align 4
  store i32 1, i32* %call_arg_value16, align 4
  store i32 2, i32* %call_arg_value17, align 4
  %243 = getelementptr %array, %array* %c, i32 0, i32 0
  %244 = load float*, float** %243, align 8
  store i32 1, i32* %call_arg_value18, align 4
  store i32 2, i32* %call_arg_value19, align 4
  store i32 1, i32* %call_arg_value20, align 4
  store i32 2, i32* %call_arg_value21, align 4
  store i32 1, i32* %call_arg_value22, align 4
  store i32 2, i32* %call_arg_value23, align 4
  %245 = getelementptr %array, %array* %d, i32 0, i32 0
  %246 = load float*, float** %245, align 8
  call void @asquare_a_b_c(float* %240, i32* %call_arg_value, i32* %call_arg_value7, i32* %call_arg_value8, i32* %call_arg_value9, i32* %call_arg_value10, i32* %call_arg_value11, float* %242, i32* %call_arg_value12, i32* %call_arg_value13, i32* %call_arg_value14, i32* %call_arg_value15, i32* %call_arg_value16, i32* %call_arg_value17, float* %244, i32* %call_arg_value18, i32* %call_arg_value19, i32* %call_arg_value20, i32* %call_arg_value21, i32* %call_arg_value22, i32* %call_arg_value23, float* %246)
  %247 = getelementptr %array, %array* %d, i32 0, i32 0
  %248 = load float*, float** %247, align 8
  store i32 1, i32* %call_arg_value24, align 4
  store i32 2, i32* %call_arg_value25, align 4
  store i32 1, i32* %call_arg_value26, align 4
  store i32 2, i32* %call_arg_value27, align 4
  store i32 1, i32* %call_arg_value28, align 4
  store i32 2, i32* %call_arg_value29, align 4
  call void @check_c(float* %248, i32* %call_arg_value24, i32* %call_arg_value25, i32* %call_arg_value26, i32* %call_arg_value27, i32* %call_arg_value28, i32* %call_arg_value29)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

attributes #0 = { nounwind readnone speculatable willreturn }
